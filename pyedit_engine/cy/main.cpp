/* Generated by Cython 0.29.24 */

#ifndef PY_SSIZE_T_CLEAN
#define PY_SSIZE_T_CLEAN
#endif /* PY_SSIZE_T_CLEAN */
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.6+ or Python 3.3+.
#else
#define CYTHON_ABI "0_29_24"
#define CYTHON_HEX_VERSION 0x001D18F0
#define CYTHON_FUTURE_DIVISION 1
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #if PY_VERSION_HEX >= 0x02070000
    #define HAVE_LONG_LONG
  #endif
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#elif defined(PYSTON_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 0
  #elif !defined(CYTHON_USE_PYTYPE_LOOKUP)
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLONG_INTERNALS)
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT (PY_VERSION_HEX >= 0x03050000)
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1)
  #endif
  #ifndef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS (PY_VERSION_HEX >= 0x030600B1)
  #endif
  #ifndef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK (PY_VERSION_HEX >= 0x030700A3)
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
           typedef unsigned char     uint8_t;
           typedef unsigned int      uint32_t;
        #else
           typedef unsigned __int8   uint8_t;
           typedef unsigned __int32  uint32_t;
        #endif
    #endif
#else
   #include <stdint.h>
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus) && __cplusplus >= 201103L
    #if __has_cpp_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH [[fallthrough]]
    #elif __has_cpp_attribute(clang::fallthrough)
      #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
    #elif __has_cpp_attribute(gnu::fallthrough)
      #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__ ) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(U other) { return *ptr == other; }
    template<typename U> bool operator !=(U other) { return *ptr != other; }
  private:
    T *ptr;
};

#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
#if PY_VERSION_HEX >= 0x030800A4 && PY_VERSION_HEX < 0x030800B2
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, 0, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_FAST_PYCCALL
#define __Pyx_PyFastCFunction_Check(func)\
    ((PyCFunction_Check(func) && (METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)))))
#else
#define __Pyx_PyFastCFunction_Check(func) 0
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030400A1
  #define PyMem_RawMalloc(n)           PyMem_Malloc(n)
  #define PyMem_RawRealloc(p, n)       PyMem_Realloc(p, n)
  #define PyMem_RawFree(p)             PyMem_Free(p)
#endif
#if CYTHON_COMPILING_IN_PYSTON
  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if !CYTHON_FAST_THREAD_STATE || PY_VERSION_HEX < 0x02070000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStr(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
#else
#define __Pyx_PyDict_GetItemStr(dict, name)  PyDict_GetItem(dict, name)
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #if defined(PyUnicode_IS_READY)
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #else
  #define __Pyx_PyUnicode_READY(op)       (0)
  #endif
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #if defined(PyUnicode_IS_READY) && defined(PyUnicode_GET_SIZE)
  #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03090000
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : ((PyCompactUnicodeObject *)(u))->wstr_length))
  #else
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
  #endif
  #else
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))
  #endif
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#ifndef PyObject_Unicode
  #define PyObject_Unicode             PyObject_Str
#endif
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#if PY_VERSION_HEX >= 0x030900A4
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)
#else
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
#else
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? ((void)(klass), PyMethod_New(func, self)) : __Pyx_NewRef(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif

#define __PYX_MARK_ERR_POS(f_index, lineno) \
    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__; (void)__pyx_clineno; }
#define __PYX_ERR(f_index, lineno, Ln_error) \
    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__main
#define __PYX_HAVE_API__main
/* Early includes */
#include <string.h>
#include <string>
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include <vector>
#include "extra_bindings.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u) {
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

static PyObject *__pyx_m = NULL;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_cython_runtime = NULL;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "PyLvl.pyx",
  "main.pyx",
  "stringsource",
  "GDArray.pyx",
  "EditorUI.pyx",
  "GameObject.pyx",
  "PyEvent.pyx",
  "ObjectExtensions.pyx",
};

/*--- Type declarations ---*/
struct _CCObject;
struct _CCArray;
struct _GOArray;
struct PyEditorUI;
struct PyGameOb;
struct __pyx_obj_4main_PyEventHandler;
struct __pyx_obj_4main___pyx_scope_struct__thread_sync;
struct __pyx_obj_4main___pyx_scope_struct_1_k;
struct __pyx_obj_4main___pyx_scope_struct_2_thread_async;
struct __pyx_obj_4main___pyx_scope_struct_3_k;
struct __pyx_obj_4main___pyx_scope_struct_4___getattr__;
struct __pyx_obj_4main___pyx_scope_struct_5___get__;
struct __pyx_obj_4main___pyx_scope_struct_6___set__;
struct __pyx_obj_4main___pyx_scope_struct_7___get__;
struct __pyx_obj_4main___pyx_scope_struct_8_xor;
struct __pyx_obj_4main___pyx_scope_struct_9_genexpr;

/* "main.pyx":4
 * from base cimport *
 * 
 * cdef public class PyCCObject [object _CCObject, type __CCObject]:             # <<<<<<<<<<<<<<
 *     cdef CCObject* inst
 *     cdef CCObject* ob_inst(self):
 */
struct _CCObject {
  PyObject_HEAD
  struct __pyx_vtabstruct_4main_PyCCObject *__pyx_vtab;
  CCObject *inst;
};

__PYX_EXTERN_C DL_EXPORT(PyTypeObject) __CCObject;

/* "../../pyedit_engine/cy/GDArray.pyx":4
 * from base cimport *
 * 
 * cdef public class PyCCArray(PyCCObject) [object _CCArray, type __CCArray]:             # <<<<<<<<<<<<<<
 * 
 *     cdef CCArray* arr_inst(self):
 */
struct _CCArray {
  struct _CCObject __pyx_base;
};

__PYX_EXTERN_C DL_EXPORT(PyTypeObject) __CCArray;

/* "../../pyedit_engine/cy/GDArray.pyx":47
 * 
 * 
 * cdef public class GameObjArray(PyCCArray) [object _GOArray, type __GOArray]:             # <<<<<<<<<<<<<<
 *     @thread_sync
 *     def __getattr__(self, attr):
 */
struct _GOArray {
  struct _CCArray __pyx_base;
};

__PYX_EXTERN_C DL_EXPORT(PyTypeObject) __GOArray;

/* "../../pyedit_engine/cy/EditorUI.pyx":5
 * from base cimport *
 * 
 * cdef public class Editor(PyCCObject) [object PyEditorUI, type PyEditUI]:             # <<<<<<<<<<<<<<
 * 
 *     cdef EditorUI* edit_inst(self):
 */
struct PyEditorUI {
  struct _CCObject __pyx_base;
};

__PYX_EXTERN_C DL_EXPORT(PyTypeObject) PyEditUI;

/* "../../pyedit_engine/cy/GameObject.pyx":5
 * from base cimport *
 * 
 * cdef public class PyGameObject(PyCCObject) [object PyGameOb, type PyGameObj]:             # <<<<<<<<<<<<<<
 *     cdef GameObject* gameob_inst(self):
 *         return <GameObject*>self.inst
 */
struct PyGameOb {
  struct _CCObject __pyx_base;
};

__PYX_EXTERN_C DL_EXPORT(PyTypeObject) PyGameObj;

/* "../../pyedit_engine/cy/PyEvent.pyx":8
 * 
 * PyEvent = namedtuple('PyEvent', 'handler name callback')
 * cdef class PyEventHandler:             # <<<<<<<<<<<<<<
 * 	cdef list events;
 * 	cdef list valid_events;
 */
struct __pyx_obj_4main_PyEventHandler {
  PyObject_HEAD
  struct __pyx_vtabstruct_4main_PyEventHandler *__pyx_vtab;
  PyObject *events;
  PyObject *valid_events;
};


/* "main.pyx":28
 *             return self
 * 
 * def thread_sync(func):             # <<<<<<<<<<<<<<
 *     def k(*args, **kwargs):
 *         if (onMainThread()):
 */
struct __pyx_obj_4main___pyx_scope_struct__thread_sync {
  PyObject_HEAD
  PyObject *__pyx_v_func;
};


/* "main.pyx":29
 * 
 * def thread_sync(func):
 *     def k(*args, **kwargs):             # <<<<<<<<<<<<<<
 *         if (onMainThread()):
 *             return func(*args, **kwargs)
 */
struct __pyx_obj_4main___pyx_scope_struct_1_k {
  PyObject_HEAD
  struct __pyx_obj_4main___pyx_scope_struct__thread_sync *__pyx_outer_scope;
  PyObject *__pyx_v_args;
  PyObject *__pyx_v_future;
  PyObject *__pyx_v_kwargs;
};


/* "main.pyx":49
 *     return k
 * 
 * def thread_async(func):             # <<<<<<<<<<<<<<
 *     def k(*args, **kwargs):
 *         if (onMainThread()):
 */
struct __pyx_obj_4main___pyx_scope_struct_2_thread_async {
  PyObject_HEAD
  PyObject *__pyx_v_func;
};


/* "main.pyx":50
 * 
 * def thread_async(func):
 *     def k(*args, **kwargs):             # <<<<<<<<<<<<<<
 *         if (onMainThread()):
 *             return func(*args, **kwargs)
 */
struct __pyx_obj_4main___pyx_scope_struct_3_k {
  PyObject_HEAD
  struct __pyx_obj_4main___pyx_scope_struct_2_thread_async *__pyx_outer_scope;
  PyObject *__pyx_v_args;
  PyObject *__pyx_v_kwargs;
};


/* "../../pyedit_engine/cy/GDArray.pyx":49
 * cdef public class GameObjArray(PyCCArray) [object _GOArray, type __GOArray]:
 *     @thread_sync
 *     def __getattr__(self, attr):             # <<<<<<<<<<<<<<
 *         stuff = [getattr(self[x], attr) for x in range(len(self))]
 *         if stuff[0].__class__.__name__ != "builtin_function_or_method":
 */
struct __pyx_obj_4main___pyx_scope_struct_4___getattr__ {
  PyObject_HEAD
  PyObject *__pyx_v_stuff;
};


/* "../../pyedit_engine/cy/EditorUI.pyx":34
 * 
 *     @property
 *     def selection(self):             # <<<<<<<<<<<<<<
 *         c = thread_sync(lambda:GameObjArray().fromPtr(self.edit_inst().getSelectedObjects()))()
 *         return c
 */
struct __pyx_obj_4main___pyx_scope_struct_5___get__ {
  PyObject_HEAD
  struct PyEditorUI *__pyx_v_self;
};


/* "../../pyedit_engine/cy/EditorUI.pyx":56
 * 
 *     @selection.setter
 *     def selection(self, objects):             # <<<<<<<<<<<<<<
 *         cdef GameObjArray ccar = GameObjArray().init(objects)
 *         thread_sync(lambda: self.edit_inst().selectObjects(ccar.arr_inst(), False))()
 */
struct __pyx_obj_4main___pyx_scope_struct_6___set__ {
  PyObject_HEAD
  struct _GOArray *__pyx_v_ccar;
  struct PyEditorUI *__pyx_v_self;
};


/* "../../pyedit_engine/cy/EditorUI.pyx":39
 * 
 *     @property
 *     def objects(self):             # <<<<<<<<<<<<<<
 *         c = thread_sync(lambda:GameObjArray().fromPtr(getEditorLayer(self.edit_inst()).getAllObjects()))()
 *         return c
 */
struct __pyx_obj_4main___pyx_scope_struct_7___get__ {
  PyObject_HEAD
  struct PyEditorUI *__pyx_v_self;
};


/* "../../pyedit_engine/cy/PyLvl.pyx":36
 * 	try: return r.text.split(":")[21]
 * 	except: raise ValueError("Incorrect Username")
 * def xor(data, key):             # <<<<<<<<<<<<<<
 * 	xored = ''.join(chr(ord(x) ^ ord(y)) for (x,y) in zip(data, cycle(key)))
 * 	return base64.encodestring(xored.encode()).strip()
 */
struct __pyx_obj_4main___pyx_scope_struct_8_xor {
  PyObject_HEAD
  PyObject *__pyx_v_data;
  PyObject *__pyx_v_key;
};


/* "../../pyedit_engine/cy/PyLvl.pyx":37
 * 	except: raise ValueError("Incorrect Username")
 * def xor(data, key):
 * 	xored = ''.join(chr(ord(x) ^ ord(y)) for (x,y) in zip(data, cycle(key)))             # <<<<<<<<<<<<<<
 * 	return base64.encodestring(xored.encode()).strip()
 * class Block:
 */
struct __pyx_obj_4main___pyx_scope_struct_9_genexpr {
  PyObject_HEAD
  struct __pyx_obj_4main___pyx_scope_struct_8_xor *__pyx_outer_scope;
  PyObject *__pyx_v_x;
  PyObject *__pyx_v_y;
};


__PYX_EXTERN_C DL_EXPORT(PyTypeObject) __CCObject;

/* "main.pyx":4
 * from base cimport *
 * 
 * cdef public class PyCCObject [object _CCObject, type __CCObject]:             # <<<<<<<<<<<<<<
 *     cdef CCObject* inst
 *     cdef CCObject* ob_inst(self):
 */

struct __pyx_vtabstruct_4main_PyCCObject {
  CCObject *(*ob_inst)(struct _CCObject *);
  PyObject *(*fromPtr)(struct _CCObject *, CCObject *);
};
static struct __pyx_vtabstruct_4main_PyCCObject *__pyx_vtabptr_4main_PyCCObject;

__PYX_EXTERN_C DL_EXPORT(PyTypeObject) __CCArray;

/* "../../pyedit_engine/cy/GDArray.pyx":4
 * from base cimport *
 * 
 * cdef public class PyCCArray(PyCCObject) [object _CCArray, type __CCArray]:             # <<<<<<<<<<<<<<
 * 
 *     cdef CCArray* arr_inst(self):
 */

struct __pyx_vtabstruct_4main_PyCCArray {
  struct __pyx_vtabstruct_4main_PyCCObject __pyx_base;
  CCArray *(*arr_inst)(struct _CCArray *);
};
static struct __pyx_vtabstruct_4main_PyCCArray *__pyx_vtabptr_4main_PyCCArray;

__PYX_EXTERN_C DL_EXPORT(PyTypeObject) __GOArray;

/* "../../pyedit_engine/cy/GDArray.pyx":47
 * 
 * 
 * cdef public class GameObjArray(PyCCArray) [object _GOArray, type __GOArray]:             # <<<<<<<<<<<<<<
 *     @thread_sync
 *     def __getattr__(self, attr):
 */

struct __pyx_vtabstruct_4main_GameObjArray {
  struct __pyx_vtabstruct_4main_PyCCArray __pyx_base;
};
static struct __pyx_vtabstruct_4main_GameObjArray *__pyx_vtabptr_4main_GameObjArray;

__PYX_EXTERN_C DL_EXPORT(PyTypeObject) PyEditUI;

/* "../../pyedit_engine/cy/EditorUI.pyx":5
 * from base cimport *
 * 
 * cdef public class Editor(PyCCObject) [object PyEditorUI, type PyEditUI]:             # <<<<<<<<<<<<<<
 * 
 *     cdef EditorUI* edit_inst(self):
 */

struct __pyx_vtabstruct_4main_Editor {
  struct __pyx_vtabstruct_4main_PyCCObject __pyx_base;
  EditorUI *(*edit_inst)(struct PyEditorUI *);
};
static struct __pyx_vtabstruct_4main_Editor *__pyx_vtabptr_4main_Editor;

__PYX_EXTERN_C DL_EXPORT(PyTypeObject) PyGameObj;

/* "../../pyedit_engine/cy/GameObject.pyx":5
 * from base cimport *
 * 
 * cdef public class PyGameObject(PyCCObject) [object PyGameOb, type PyGameObj]:             # <<<<<<<<<<<<<<
 *     cdef GameObject* gameob_inst(self):
 *         return <GameObject*>self.inst
 */

struct __pyx_vtabstruct_4main_PyGameObject {
  struct __pyx_vtabstruct_4main_PyCCObject __pyx_base;
  GameObject *(*gameob_inst)(struct PyGameOb *);
};
static struct __pyx_vtabstruct_4main_PyGameObject *__pyx_vtabptr_4main_PyGameObject;


/* "../../pyedit_engine/cy/PyEvent.pyx":8
 * 
 * PyEvent = namedtuple('PyEvent', 'handler name callback')
 * cdef class PyEventHandler:             # <<<<<<<<<<<<<<
 * 	cdef list events;
 * 	cdef list valid_events;
 */

struct __pyx_vtabstruct_4main_PyEventHandler {
  PyObject *(*extractEv)(struct __pyx_obj_4main_PyEventHandler *, struct event_base *);
};
static struct __pyx_vtabstruct_4main_PyEventHandler *__pyx_vtabptr_4main_PyEventHandler;

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* IncludeStringH.proto */
#include <string.h>

/* decode_c_string_utf16.proto */
static CYTHON_INLINE PyObject *__Pyx_PyUnicode_DecodeUTF16(const char *s, Py_ssize_t size, const char *errors) {
    int byteorder = 0;
    return PyUnicode_DecodeUTF16(s, size, errors, &byteorder);
}
static CYTHON_INLINE PyObject *__Pyx_PyUnicode_DecodeUTF16LE(const char *s, Py_ssize_t size, const char *errors) {
    int byteorder = -1;
    return PyUnicode_DecodeUTF16(s, size, errors, &byteorder);
}
static CYTHON_INLINE PyObject *__Pyx_PyUnicode_DecodeUTF16BE(const char *s, Py_ssize_t size, const char *errors) {
    int byteorder = 1;
    return PyUnicode_DecodeUTF16(s, size, errors, &byteorder);
}

/* decode_c_string.proto */
static CYTHON_INLINE PyObject* __Pyx_decode_c_string(
         const char* cstring, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors));

/* BytesEquals.proto */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);

/* UnicodeEquals.proto */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs);
#else
#define __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs) _PyFunction_FastCallDict(func, args, nargs, kwargs)
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectCallNoArg.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

/* PyCFunctionFastCall.proto */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject *__Pyx_PyCFunction_FastCall(PyObject *func, PyObject **args, Py_ssize_t nargs);
#else
#define __Pyx_PyCFunction_FastCall(func, args, nargs)  (assert(0), NULL)
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* KeywordStringCheck.proto */
static int __Pyx_CheckKeywordStrings(PyObject *kwdict, const char* function_name, int kw_allowed);

/* None.proto */
static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname);

/* GetTopmostException.proto */
#if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem * __Pyx_PyErr_GetTopmostException(PyThreadState *tstate);
#endif

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* ListAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
#endif

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* FetchCommonType.proto */
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);

/* CythonFunctionShared.proto */
#define __Pyx_CyFunction_USED 1
#define __Pyx_CYFUNCTION_STATICMETHOD  0x01
#define __Pyx_CYFUNCTION_CLASSMETHOD   0x02
#define __Pyx_CYFUNCTION_CCLASS        0x04
#define __Pyx_CyFunction_GetClosure(f)\
    (((__pyx_CyFunctionObject *) (f))->func_closure)
#define __Pyx_CyFunction_GetClassObj(f)\
    (((__pyx_CyFunctionObject *) (f))->func_classobj)
#define __Pyx_CyFunction_Defaults(type, f)\
    ((type *)(((__pyx_CyFunctionObject *) (f))->defaults))
#define __Pyx_CyFunction_SetDefaultsGetter(f, g)\
    ((__pyx_CyFunctionObject *) (f))->defaults_getter = (g)
typedef struct {
    PyCFunctionObject func;
#if PY_VERSION_HEX < 0x030500A0
    PyObject *func_weakreflist;
#endif
    PyObject *func_dict;
    PyObject *func_name;
    PyObject *func_qualname;
    PyObject *func_doc;
    PyObject *func_globals;
    PyObject *func_code;
    PyObject *func_closure;
    PyObject *func_classobj;
    void *defaults;
    int defaults_pyobjects;
    size_t defaults_size;  // used by FusedFunction for copying defaults
    int flags;
    PyObject *defaults_tuple;
    PyObject *defaults_kwdict;
    PyObject *(*defaults_getter)(PyObject *);
    PyObject *func_annotations;
} __pyx_CyFunctionObject;
static PyTypeObject *__pyx_CyFunctionType = 0;
#define __Pyx_CyFunction_Check(obj)  (__Pyx_TypeCheck(obj, __pyx_CyFunctionType))
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject* op, PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *self,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *m,
                                                         size_t size,
                                                         int pyobjects);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *m,
                                                            PyObject *tuple);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *m,
                                                             PyObject *dict);
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *m,
                                                              PyObject *dict);
static int __pyx_CyFunction_init(void);

/* CythonFunction.proto */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *closure,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* WriteUnraisableException.proto */
static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback, int nogil);

/* ListCompAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* ExtTypeTest.proto */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

/* PyObjectFormatSimple.proto */
#if CYTHON_COMPILING_IN_PYPY
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        PyObject_Format(s, f))
#elif PY_MAJOR_VERSION < 3
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        likely(PyString_CheckExact(s)) ? PyUnicode_FromEncodedObject(s, NULL, "strict") :\
        PyObject_Format(s, f))
#elif CYTHON_USE_TYPE_SLOTS
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        likely(PyLong_CheckExact(s)) ? PyLong_Type.tp_str(s) :\
        likely(PyFloat_CheckExact(s)) ? PyFloat_Type.tp_str(s) :\
        PyObject_Format(s, f))
#else
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        PyObject_Format(s, f))
#endif

/* JoinPyUnicode.proto */
static PyObject* __Pyx_PyUnicode_Join(PyObject* value_tuple, Py_ssize_t value_count, Py_ssize_t result_ulength,
                                      Py_UCS4 max_char);

/* GetAttr.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *, PyObject *);

/* pyobject_as_double.proto */
static double __Pyx__PyObject_AsDouble(PyObject* obj);
#if CYTHON_COMPILING_IN_PYPY
#define __Pyx_PyObject_AsDouble(obj)\
(likely(PyFloat_CheckExact(obj)) ? PyFloat_AS_DOUBLE(obj) :\
 likely(PyInt_CheckExact(obj)) ?\
 PyFloat_AsDouble(obj) : __Pyx__PyObject_AsDouble(obj))
#else
#define __Pyx_PyObject_AsDouble(obj)\
((likely(PyFloat_CheckExact(obj))) ?\
 PyFloat_AS_DOUBLE(obj) : __Pyx__PyObject_AsDouble(obj))
#endif

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
#define __Pyx_GetModuleGlobalNameUncached(var, name)  {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* PyObjectCall2Args.proto */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2);

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_AddObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* None.proto */
static CYTHON_INLINE Py_ssize_t __Pyx_div_Py_ssize_t(Py_ssize_t, Py_ssize_t);

/* ObjectGetItem.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject* key);
#else
#define __Pyx_PyObject_GetItem(obj, key)  PyObject_GetItem(obj, key)
#endif

/* UnpackUnboundCMethod.proto */
typedef struct {
    PyObject *type;
    PyObject **method_name;
    PyCFunction func;
    PyObject *method;
    int flag;
} __Pyx_CachedCFunction;

/* CallUnboundCMethod1.proto */
static PyObject* __Pyx__CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg);
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg);
#else
#define __Pyx_CallUnboundCMethod1(cfunc, self, arg)  __Pyx__CallUnboundCMethod1(cfunc, self, arg)
#endif

/* RaiseTooManyValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

/* RaiseNeedMoreValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

/* IterFinish.proto */
static CYTHON_INLINE int __Pyx_IterFinish(void);

/* UnpackItemEndCheck.proto */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected);

/* UnicodeAsUCS4.proto */
static CYTHON_INLINE Py_UCS4 __Pyx_PyUnicode_AsPy_UCS4(PyObject*);

/* object_ord.proto */
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyObject_Ord(c)\
    (likely(PyUnicode_Check(c)) ? (long)__Pyx_PyUnicode_AsPy_UCS4(c) : __Pyx__PyObject_Ord(c))
#else
#define __Pyx_PyObject_Ord(c) __Pyx__PyObject_Ord(c)
#endif
static long __Pyx__PyObject_Ord(PyObject* c);

/* PyObjectSetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o, n, NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value);
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

/* dict_getitem_default.proto */
static PyObject* __Pyx_PyDict_GetItemDefault(PyObject* d, PyObject* key, PyObject* default_value);

/* CallUnboundCMethod2.proto */
static PyObject* __Pyx__CallUnboundCMethod2(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg1, PyObject* arg2);
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030600B1
static CYTHON_INLINE PyObject *__Pyx_CallUnboundCMethod2(__Pyx_CachedCFunction *cfunc, PyObject *self, PyObject *arg1, PyObject *arg2);
#else
#define __Pyx_CallUnboundCMethod2(cfunc, self, arg1, arg2)  __Pyx__CallUnboundCMethod2(cfunc, self, arg1, arg2)
#endif

/* PyObjectGetMethod.proto */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method);

/* PyObjectCallMethod0.proto */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name);

/* RaiseNoneIterError.proto */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

/* UnpackTupleError.proto */
static void __Pyx_UnpackTupleError(PyObject *, Py_ssize_t index);

/* UnpackTuple2.proto */
#define __Pyx_unpack_tuple2(tuple, value1, value2, is_tuple, has_known_size, decref_tuple)\
    (likely(is_tuple || PyTuple_Check(tuple)) ?\
        (likely(has_known_size || PyTuple_GET_SIZE(tuple) == 2) ?\
            __Pyx_unpack_tuple2_exact(tuple, value1, value2, decref_tuple) :\
            (__Pyx_UnpackTupleError(tuple, 2), -1)) :\
        __Pyx_unpack_tuple2_generic(tuple, value1, value2, has_known_size, decref_tuple))
static CYTHON_INLINE int __Pyx_unpack_tuple2_exact(
    PyObject* tuple, PyObject** value1, PyObject** value2, int decref_tuple);
static int __Pyx_unpack_tuple2_generic(
    PyObject* tuple, PyObject** value1, PyObject** value2, int has_known_size, int decref_tuple);

/* dict_iter.proto */
static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* dict, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_is_dict);
static CYTHON_INLINE int __Pyx_dict_iter_next(PyObject* dict_or_iter, Py_ssize_t orig_length, Py_ssize_t* ppos,
                                              PyObject** pkey, PyObject** pvalue, PyObject** pitem, int is_dict);

/* DictGetItem.proto */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key);
#define __Pyx_PyObject_Dict_GetItem(obj, name)\
    (likely(PyDict_CheckExact(obj)) ?\
     __Pyx_PyDict_GetItem(obj, name) : PyObject_GetItem(obj, name))
#else
#define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#define __Pyx_PyObject_Dict_GetItem(obj, name)  PyObject_GetItem(obj, name)
#endif

/* PySequenceContains.proto */
static CYTHON_INLINE int __Pyx_PySequence_ContainsTF(PyObject* item, PyObject* seq, int eq) {
    int result = PySequence_Contains(seq, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* SwapException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSwap(type, value, tb)  __Pyx__ExceptionSwap(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_SubtractObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_SubtractObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceSubtract(op1, op2) : PyNumber_Subtract(op1, op2))
#endif

/* PyObjectCallMethod1.proto */
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg);

/* append.proto */
static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x);

/* HasAttr.proto */
static CYTHON_INLINE int __Pyx_HasAttr(PyObject *, PyObject *);

/* SliceObject.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetSlice(
        PyObject* obj, Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** py_start, PyObject** py_stop, PyObject** py_slice,
        int has_cstart, int has_cstop, int wraparound);

/* IncludeCppStringH.proto */
#include <string>

/* decode_c_bytes.proto */
static CYTHON_INLINE PyObject* __Pyx_decode_c_bytes(
         const char* cstring, Py_ssize_t length, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors));

/* decode_cpp_string.proto */
static CYTHON_INLINE PyObject* __Pyx_decode_cpp_string(
         std::string cppstring, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors)) {
    return __Pyx_decode_c_bytes(
        cppstring.data(), cppstring.size(), start, stop, encoding, errors, decode_func);
}

/* PyExec.proto */
static PyObject* __Pyx_PyExec3(PyObject*, PyObject*, PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyExec2(PyObject*, PyObject*);

/* Globals.proto */
static PyObject* __Pyx_Globals(void);

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* PyObject_GenericGetAttrNoDict.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttrNoDict PyObject_GenericGetAttr
#endif

/* PyObject_GenericGetAttr.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttr PyObject_GenericGetAttr
#endif

/* SetVTable.proto */
static int __Pyx_SetVtable(PyObject *dict, void *vtable);

/* PyObjectGetAttrStrNoError.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name);

/* SetupReduce.proto */
static int __Pyx_setup_reduce(PyObject* type_obj);

/* GetNameInClass.proto */
#define __Pyx_GetNameInClass(var, nmspace, name)  (var) = __Pyx__GetNameInClass(nmspace, name)
static PyObject *__Pyx__GetNameInClass(PyObject *nmspace, PyObject *name);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* CalculateMetaclass.proto */
static PyObject *__Pyx_CalculateMetaclass(PyTypeObject *metaclass, PyObject *bases);

/* SetNameInClass.proto */
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
#define __Pyx_SetNameInClass(ns, name, value)\
    (likely(PyDict_CheckExact(ns)) ? _PyDict_SetItem_KnownHash(ns, name, value, ((PyASCIIObject *) name)->hash) : PyObject_SetItem(ns, name, value))
#elif CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_SetNameInClass(ns, name, value)\
    (likely(PyDict_CheckExact(ns)) ? PyDict_SetItem(ns, name, value) : PyObject_SetItem(ns, name, value))
#else
#define __Pyx_SetNameInClass(ns, name, value)  PyObject_SetItem(ns, name, value)
#endif

/* Py3ClassCreate.proto */
static PyObject *__Pyx_Py3MetaclassPrepare(PyObject *metaclass, PyObject *bases, PyObject *name, PyObject *qualname,
                                           PyObject *mkw, PyObject *modname, PyObject *doc);
static PyObject *__Pyx_Py3ClassCreate(PyObject *metaclass, PyObject *name, PyObject *bases, PyObject *dict,
                                      PyObject *mkw, int calculate_metaclass, int allow_py2_metaclass);

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* GCCDiagnostics.proto */
#if defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))
#define __Pyx_HAS_GCC_DIAGNOSTIC
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntFromPy.proto */
static CYTHON_INLINE unsigned int __Pyx_PyInt_As_unsigned_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CIntFromPy.proto */
static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* CoroutineBase.proto */
typedef PyObject *(*__pyx_coroutine_body_t)(PyObject *, PyThreadState *, PyObject *);
#if CYTHON_USE_EXC_INFO_STACK
#define __Pyx_ExcInfoStruct  _PyErr_StackItem
#else
typedef struct {
    PyObject *exc_type;
    PyObject *exc_value;
    PyObject *exc_traceback;
} __Pyx_ExcInfoStruct;
#endif
typedef struct {
    PyObject_HEAD
    __pyx_coroutine_body_t body;
    PyObject *closure;
    __Pyx_ExcInfoStruct gi_exc_state;
    PyObject *gi_weakreflist;
    PyObject *classobj;
    PyObject *yieldfrom;
    PyObject *gi_name;
    PyObject *gi_qualname;
    PyObject *gi_modulename;
    PyObject *gi_code;
    PyObject *gi_frame;
    int resume_label;
    char is_running;
} __pyx_CoroutineObject;
static __pyx_CoroutineObject *__Pyx__Coroutine_New(
    PyTypeObject *type, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
    PyObject *name, PyObject *qualname, PyObject *module_name);
static __pyx_CoroutineObject *__Pyx__Coroutine_NewInit(
            __pyx_CoroutineObject *gen, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name);
static CYTHON_INLINE void __Pyx_Coroutine_ExceptionClear(__Pyx_ExcInfoStruct *self);
static int __Pyx_Coroutine_clear(PyObject *self);
static PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value);
static PyObject *__Pyx_Coroutine_Close(PyObject *self);
static PyObject *__Pyx_Coroutine_Throw(PyObject *gen, PyObject *args);
#if CYTHON_USE_EXC_INFO_STACK
#define __Pyx_Coroutine_SwapException(self)
#define __Pyx_Coroutine_ResetAndClearException(self)  __Pyx_Coroutine_ExceptionClear(&(self)->gi_exc_state)
#else
#define __Pyx_Coroutine_SwapException(self) {\
    __Pyx_ExceptionSwap(&(self)->gi_exc_state.exc_type, &(self)->gi_exc_state.exc_value, &(self)->gi_exc_state.exc_traceback);\
    __Pyx_Coroutine_ResetFrameBackpointer(&(self)->gi_exc_state);\
    }
#define __Pyx_Coroutine_ResetAndClearException(self) {\
    __Pyx_ExceptionReset((self)->gi_exc_state.exc_type, (self)->gi_exc_state.exc_value, (self)->gi_exc_state.exc_traceback);\
    (self)->gi_exc_state.exc_type = (self)->gi_exc_state.exc_value = (self)->gi_exc_state.exc_traceback = NULL;\
    }
#endif
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyGen_FetchStopIterationValue(pvalue)\
    __Pyx_PyGen__FetchStopIterationValue(__pyx_tstate, pvalue)
#else
#define __Pyx_PyGen_FetchStopIterationValue(pvalue)\
    __Pyx_PyGen__FetchStopIterationValue(__Pyx_PyThreadState_Current, pvalue)
#endif
static int __Pyx_PyGen__FetchStopIterationValue(PyThreadState *tstate, PyObject **pvalue);
static CYTHON_INLINE void __Pyx_Coroutine_ResetFrameBackpointer(__Pyx_ExcInfoStruct *exc_state);

/* PatchModuleWithCoroutine.proto */
static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code);

/* PatchGeneratorABC.proto */
static int __Pyx_patch_abc(void);

/* Generator.proto */
#define __Pyx_Generator_USED
static PyTypeObject *__pyx_GeneratorType = 0;
#define __Pyx_Generator_CheckExact(obj) (Py_TYPE(obj) == __pyx_GeneratorType)
#define __Pyx_Generator_New(body, code, closure, name, qualname, module_name)\
    __Pyx__Coroutine_New(__pyx_GeneratorType, body, code, closure, name, qualname, module_name)
static PyObject *__Pyx_Generator_Next(PyObject *self);
static int __pyx_Generator_init(void);

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

static CCObject *__pyx_f_4main_10PyCCObject_ob_inst(struct _CCObject *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_4main_10PyCCObject_fromPtr(struct _CCObject *__pyx_v_self, CCObject *__pyx_v_usable); /* proto*/
static CCArray *__pyx_f_4main_9PyCCArray_arr_inst(struct _CCArray *__pyx_v_self); /* proto*/
static EditorUI *__pyx_f_4main_6Editor_edit_inst(struct PyEditorUI *__pyx_v_self); /* proto*/
static GameObject *__pyx_f_4main_12PyGameObject_gameob_inst(struct PyGameOb *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_4main_14PyEventHandler_extractEv(CYTHON_UNUSED struct __pyx_obj_4main_PyEventHandler *__pyx_v_self, struct event_base *__pyx_v_ev); /* proto*/

/* Module declarations from 'libc.string' */

/* Module declarations from 'libcpp.string' */

/* Module declarations from 'libcpp.vector' */

/* Module declarations from 'libcpp' */

/* Module declarations from 'base' */
static CYTHON_INLINE PyObject *__pyx_f_4base_mainThread(PyObject *); /*proto*/

/* Module declarations from 'main' */
static PyTypeObject *__pyx_ptype_4main_PyCCObject = 0;
static PyTypeObject *__pyx_ptype_4main_PyCCArray = 0;
static PyTypeObject *__pyx_ptype_4main_GameObjArray = 0;
static PyTypeObject *__pyx_ptype_4main_Editor = 0;
static PyTypeObject *__pyx_ptype_4main_PyGameObject = 0;
static PyTypeObject *__pyx_ptype_4main_PyEventHandler = 0;
static PyTypeObject *__pyx_ptype_4main___pyx_scope_struct__thread_sync = 0;
static PyTypeObject *__pyx_ptype_4main___pyx_scope_struct_1_k = 0;
static PyTypeObject *__pyx_ptype_4main___pyx_scope_struct_2_thread_async = 0;
static PyTypeObject *__pyx_ptype_4main___pyx_scope_struct_3_k = 0;
static PyTypeObject *__pyx_ptype_4main___pyx_scope_struct_4___getattr__ = 0;
static PyTypeObject *__pyx_ptype_4main___pyx_scope_struct_5___get__ = 0;
static PyTypeObject *__pyx_ptype_4main___pyx_scope_struct_6___set__ = 0;
static PyTypeObject *__pyx_ptype_4main___pyx_scope_struct_7___get__ = 0;
static PyTypeObject *__pyx_ptype_4main___pyx_scope_struct_8_xor = 0;
static PyTypeObject *__pyx_ptype_4main___pyx_scope_struct_9_genexpr = 0;
static PyObject *__pyx_8genexpr4__pyx_v_4main_5Block_k;
static PyObject *__pyx_8genexpr4__pyx_v_4main_5Block_v;
static std::string __pyx_convert_string_from_py_std__in_string(PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyObject_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyUnicode_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyStr_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyBytes_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyByteArray_string_to_py_std__in_string(std::string const &); /*proto*/
static PyObject *__pyx_convert_vector_to_py_int(const std::vector<int>  &); /*proto*/
#define __Pyx_MODULE_NAME "main"
extern int __pyx_module_is_main_main;
int __pyx_module_is_main_main = 0;

/* Implementation of 'main' */
static PyObject *__pyx_builtin_zip;
static PyObject *__pyx_builtin_staticmethod;
static PyObject *__pyx_builtin_print;
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_RuntimeError;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_IndexError;
static PyObject *__pyx_builtin_sorted;
static PyObject *__pyx_builtin_AttributeError;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_chr;
static const char __pyx_k_0[] = "0";
static const char __pyx_k_1[] = "1";
static const char __pyx_k_2[] = "2";
static const char __pyx_k_3[] = "3";
static const char __pyx_k_4[] = "4";
static const char __pyx_k_5[] = "5";
static const char __pyx_k_6[] = "6";
static const char __pyx_k_7[] = "7";
static const char __pyx_k_8[] = "8";
static const char __pyx_k_9[] = "9";
static const char __pyx_k_a[] = "a";
static const char __pyx_k_b[] = "b";
static const char __pyx_k_c[] = "c";
static const char __pyx_k_d[] = "d";
static const char __pyx_k_e[] = "e";
static const char __pyx_k_f[] = "f";
static const char __pyx_k_i[] = "i";
static const char __pyx_k_k[] = "k";
static const char __pyx_k_p[] = "p";
static const char __pyx_k_r[] = "r";
static const char __pyx_k_t[] = "t";
static const char __pyx_k_x[] = "x";
static const char __pyx_k_y[] = "y";
static const char __pyx_k_10[] = "10";
static const char __pyx_k_11[] = "11";
static const char __pyx_k_13[] = "13";
static const char __pyx_k_15[] = "15";
static const char __pyx_k_16[] = "16";
static const char __pyx_k_17[] = "17";
static const char __pyx_k_19[] = "19";
static const char __pyx_k_20[] = "20";
static const char __pyx_k_21[] = "21";
static const char __pyx_k_22[] = "22";
static const char __pyx_k_23[] = "23";
static const char __pyx_k_24[] = "24";
static const char __pyx_k_25[] = "25";
static const char __pyx_k_28[] = "28";
static const char __pyx_k_29[] = "29";
static const char __pyx_k_30[] = "30";
static const char __pyx_k_31[] = "31";
static const char __pyx_k_32[] = "32";
static const char __pyx_k_34[] = "34";
static const char __pyx_k_35[] = "35";
static const char __pyx_k_36[] = "36";
static const char __pyx_k_3D[] = "%3D";
static const char __pyx_k_41[] = "41";
static const char __pyx_k_42[] = "42";
static const char __pyx_k_43[] = "43";
static const char __pyx_k_44[] = "44";
static const char __pyx_k_45[] = "45";
static const char __pyx_k_46[] = "46";
static const char __pyx_k_47[] = "47";
static const char __pyx_k_48[] = "48";
static const char __pyx_k_49[] = "49";
static const char __pyx_k_50[] = "50";
static const char __pyx_k_51[] = "51";
static const char __pyx_k_52[] = "52";
static const char __pyx_k_54[] = "54";
static const char __pyx_k_56[] = "56";
static const char __pyx_k_57[] = "57";
static const char __pyx_k_58[] = "58";
static const char __pyx_k_59[] = "59";
static const char __pyx_k_60[] = "60";
static const char __pyx_k_61[] = "61";
static const char __pyx_k_62[] = "62";
static const char __pyx_k_63[] = "63";
static const char __pyx_k_64[] = "64";
static const char __pyx_k_65[] = "65";
static const char __pyx_k_66[] = "66";
static const char __pyx_k_67[] = "67";
static const char __pyx_k_68[] = "68";
static const char __pyx_k_69[] = "69";
static const char __pyx_k_70[] = "70";
static const char __pyx_k_71[] = "71";
static const char __pyx_k_72[] = "72";
static const char __pyx_k_73[] = "73";
static const char __pyx_k_75[] = "75";
static const char __pyx_k_77[] = "77";
static const char __pyx_k_78[] = "78";
static const char __pyx_k_79[] = "79";
static const char __pyx_k_80[] = "80";
static const char __pyx_k_81[] = "81";
static const char __pyx_k_82[] = "82";
static const char __pyx_k_84[] = "84";
static const char __pyx_k_85[] = "85";
static const char __pyx_k_86[] = "86";
static const char __pyx_k_87[] = "87";
static const char __pyx_k_88[] = "88";
static const char __pyx_k_89[] = "89";
static const char __pyx_k_90[] = "90";
static const char __pyx_k_91[] = "91";
static const char __pyx_k_92[] = "92";
static const char __pyx_k_93[] = "93";
static const char __pyx_k_95[] = "95";
static const char __pyx_k_96[] = "96";
static const char __pyx_k_97[] = "97";
static const char __pyx_k_98[] = "98";
static const char __pyx_k_99[] = "99";
static const char __pyx_k_Ok[] = "Ok";
static const char __pyx_k_aa[] = "aa";
static const char __pyx_k_ar[] = "ar";
static const char __pyx_k_ev[] = "ev";
static const char __pyx_k_gs[] = "gs";
static const char __pyx_k_no[] = "no";
static const char __pyx_k_os[] = "os";
static const char __pyx_k_wt[] = "wt";
static const char __pyx_k_ww[] = "ww";
static const char __pyx_k_100[] = "100";
static const char __pyx_k_101[] = "101";
static const char __pyx_k_102[] = "102";
static const char __pyx_k_103[] = "103";
static const char __pyx_k_105[] = "105";
static const char __pyx_k_106[] = "106";
static const char __pyx_k_107[] = "107";
static const char __pyx_k_108[] = "108";
static const char __pyx_k_KEY[] = "KEY";
static const char __pyx_k_RED[] = "RED";
static const char __pyx_k_UFO[] = "UFO";
static const char __pyx_k__17[] = "'";
static const char __pyx_k__25[] = "";
static const char __pyx_k__27[] = ":";
static const char __pyx_k__29[] = ",";
static const char __pyx_k__32[] = "-_";
static const char __pyx_k__33[] = "=";
static const char __pyx_k__35[] = ";";
static const char __pyx_k__37[] = "+";
static const char __pyx_k__38[] = "-";
static const char __pyx_k__40[] = "/";
static const char __pyx_k__41[] = "_";
static const char __pyx_k__51[] = "*";
static const char __pyx_k_chr[] = "chr";
static const char __pyx_k_doc[] = "__doc__";
static const char __pyx_k_err[] = "err";
static const char __pyx_k_gdw[] = "gdw";
static const char __pyx_k_get[] = "get";
static const char __pyx_k_gjp[] = "gjp";
static const char __pyx_k_idk[] = "idk";
static const char __pyx_k_ids[] = "ids";
static const char __pyx_k_jso[] = "jso";
static const char __pyx_k_kA2[] = "kA2";
static const char __pyx_k_kA3[] = "kA3";
static const char __pyx_k_kA4[] = "kA4";
static const char __pyx_k_kA6[] = "kA6";
static const char __pyx_k_kA7[] = "kA7";
static const char __pyx_k_kA8[] = "kA8";
static const char __pyx_k_kA9[] = "kA9";
static const char __pyx_k_key[] = "key";
static const char __pyx_k_ldm[] = "ldm";
static const char __pyx_k_len[] = "__len__";
static const char __pyx_k_lid[] = "lid";
static const char __pyx_k_lst[] = "lst";
static const char __pyx_k_out[] = "out";
static const char __pyx_k_red[] = "red";
static const char __pyx_k_rot[] = "rot";
static const char __pyx_k_str[] = "str";
static const char __pyx_k_url[] = "url";
static const char __pyx_k_why[] = "why";
static const char __pyx_k_wt2[] = "wt2";
static const char __pyx_k_xor[] = "xor";
static const char __pyx_k_zip[] = "zip";
static const char __pyx_k_BLUE[] = "BLUE";
static const char __pyx_k_COIN[] = "COIN";
static const char __pyx_k_CUBE[] = "CUBE";
static const char __pyx_k_Enum[] = "Enum";
static const char __pyx_k_FAST[] = "FAST";
static const char __pyx_k_PINK[] = "PINK";
static const char __pyx_k_SHIP[] = "SHIP";
static const char __pyx_k_SLOW[] = "SLOW";
static const char __pyx_k_WAVE[] = "WAVE";
static const char __pyx_k_args[] = "args";
static const char __pyx_k_auto[] = "auto";
static const char __pyx_k_bloc[] = "bloc";
static const char __pyx_k_blue[] = "blue";
static const char __pyx_k_data[] = "data";
static const char __pyx_k_dual[] = "dual";
static const char __pyx_k_enum[] = "enum";
static const char __pyx_k_font[] = "font";
static const char __pyx_k_func[] = "func";
static const char __pyx_k_gzip[] = "gzip";
static const char __pyx_k_init[] = "init";
static const char __pyx_k_izip[] = "izip";
static const char __pyx_k_json[] = "json";
static const char __pyx_k_kA10[] = "kA10";
static const char __pyx_k_kA11[] = "kA11";
static const char __pyx_k_kA13[] = "kA13";
static const char __pyx_k_kA14[] = "kA14";
static const char __pyx_k_kA15[] = "kA15";
static const char __pyx_k_kA16[] = "kA16";
static const char __pyx_k_kA17[] = "kA17";
static const char __pyx_k_kA18[] = "kA18";
static const char __pyx_k_kS38[] = "kS38";
static const char __pyx_k_kS39[] = "kS39";
static const char __pyx_k_lstr[] = "lstr";
static const char __pyx_k_main[] = "main";
static const char __pyx_k_math[] = "math";
static const char __pyx_k_mini[] = "mini";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_odds[] = "odds";
static const char __pyx_k_page[] = "page";
static const char __pyx_k_post[] = "post";
static const char __pyx_k_pygd[] = "pygd";
static const char __pyx_k_read[] = "read";
static const char __pyx_k_repr[] = "__repr__";
static const char __pyx_k_seed[] = "seed";
static const char __pyx_k_self[] = "self";
static const char __pyx_k_send[] = "send";
static const char __pyx_k_sha1[] = "sha1";
static const char __pyx_k_size[] = "size";
static const char __pyx_k_sqrt[] = "sqrt";
static const char __pyx_k_stri[] = "stri";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_text[] = "text";
static const char __pyx_k_37526[] = "37526";
static const char __pyx_k_41274[] = "41274";
static const char __pyx_k_BLACK[] = "BLACK";
static const char __pyx_k_Block[] = "Block";
static const char __pyx_k_Error[] = "Error";
static const char __pyx_k_FLASK[] = "FLASK";
static const char __pyx_k_GREEN[] = "GREEN";
static const char __pyx_k_HEART[] = "HEART";
static const char __pyx_k_Level[] = "Level";
static const char __pyx_k_ROBOT[] = "ROBOT";
static const char __pyx_k_SKULL[] = "SKULL";
static const char __pyx_k_alert[] = "alert";
static const char __pyx_k_class[] = "__class__";
static const char __pyx_k_close[] = "close";
static const char __pyx_k_coins[] = "coins";
static const char __pyx_k_count[] = "count";
static const char __pyx_k_cycle[] = "cycle";
static const char __pyx_k_evens[] = "evens";
static const char __pyx_k_green[] = "green";
static const char __pyx_k_items[] = "items";
static const char __pyx_k_nutin[] = "nutin";
static const char __pyx_k_print[] = "print";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_seed2[] = "seed2";
static const char __pyx_k_speed[] = "speed";
static const char __pyx_k_split[] = "split";
static const char __pyx_k_stars[] = "stars";
static const char __pyx_k_str_2[] = "__str__";
static const char __pyx_k_strip[] = "strip";
static const char __pyx_k_stuff[] = "stuff";
static const char __pyx_k_throw[] = "throw";
static const char __pyx_k_total[] = "total";
static const char __pyx_k_xored[] = "xored";
static const char __pyx_k_CUSTOM[] = "CUSTOM";
static const char __pyx_k_Editor[] = "Editor";
static const char __pyx_k_FASTER[] = "FASTER";
static const char __pyx_k_Header[] = "Header";
static const char __pyx_k_NORMAL[] = "NORMAL";
static const char __pyx_k_SPIDER[] = "SPIDER";
static const char __pyx_k_YELLOW[] = "YELLOW";
static const char __pyx_k_append[] = "append";
static const char __pyx_k_base64[] = "base64";
static const char __pyx_k_blocks[] = "blocks";
static const char __pyx_k_change[] = "change";
static const char __pyx_k_color1[] = "color1";
static const char __pyx_k_color2[] = "color2";
static const char __pyx_k_colors[] = "colors";
static const char __pyx_k_coords[] = "coords";
static const char __pyx_k_decode[] = "decode";
static const char __pyx_k_easing[] = "easing";
static const char __pyx_k_encode[] = "encode";
static const char __pyx_k_format[] = "format";
static const char __pyx_k_future[] = "future";
static const char __pyx_k_ground[] = "ground";
static const char __pyx_k_header[] = "header";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_init_2[] = "__init__";
static const char __pyx_k_kwargs[] = "kwargs";
static const char __pyx_k_main_2[] = "__main__";
static const char __pyx_k_module[] = "__module__";
static const char __pyx_k_name_2[] = "name";
static const char __pyx_k_object[] = "object";
static const char __pyx_k_random[] = "random";
static const char __pyx_k_reduce[] = "__reduce__";
static const char __pyx_k_rotate[] = "rotate";
static const char __pyx_k_secret[] = "secret";
static const char __pyx_k_songID[] = "songID";
static const char __pyx_k_songid[] = "songid";
static const char __pyx_k_sorted[] = "sorted";
static const char __pyx_k_update[] = "update";
static const char __pyx_k_urllib[] = "urllib";
static const char __pyx_k_DUAL_ON[] = "DUAL_ON";
static const char __pyx_k_FASTEST[] = "FASTEST";
static const char __pyx_k_PyEvent[] = "PyEvent";
static const char __pyx_k_Request[] = "Request";
static const char __pyx_k_blockid[] = "blockid";
static const char __pyx_k_collect[] = "collect";
static const char __pyx_k_degrees[] = "degrees";
static const char __pyx_k_diction[] = "diction";
static const char __pyx_k_encoded[] = "encoded";
static const char __pyx_k_encodee[] = "encodee";
static const char __pyx_k_fade_in[] = "fade_in";
static const char __pyx_k_genexpr[] = "genexpr";
static const char __pyx_k_getSong[] = "getSong";
static const char __pyx_k_getattr[] = "__getattr__";
static const char __pyx_k_getitem[] = "__getitem__";
static const char __pyx_k_groupid[] = "groupid";
static const char __pyx_k_handler[] = "handler";
static const char __pyx_k_hashlib[] = "hashlib";
static const char __pyx_k_headers[] = "headers";
static const char __pyx_k_item_id[] = "item_id";
static const char __pyx_k_levelID[] = "levelID";
static const char __pyx_k_levelid[] = "levelid";
static const char __pyx_k_nothing[] = "nothing";
static const char __pyx_k_objects[] = "objects";
static const char __pyx_k_opacity[] = "opacity";
static const char __pyx_k_prepare[] = "__prepare__";
static const char __pyx_k_replace[] = "replace";
static const char __pyx_k_scaleTo[] = "scaleTo";
static const char __pyx_k_setitem[] = "__setitem__";
static const char __pyx_k_urllib2[] = "urllib2";
static const char __pyx_k_urlopen[] = "urlopen";
static const char __pyx_k_vehicle[] = "vehicle";
static const char __pyx_k_version[] = "version";
static const char __pyx_k_z_layer[] = "z_layer";
static const char __pyx_k_z_order[] = "z_order";
static const char __pyx_k_2_player[] = "2_player";
static const char __pyx_k_DUAL_OFF[] = "DUAL_OFF";
static const char __pyx_k_TELEPORT[] = "TELEPORT";
static const char __pyx_k_addBlock[] = "addBlock";
static const char __pyx_k_blending[] = "blending";
static const char __pyx_k_builtins[] = "__builtins__";
static const char __pyx_k_callback[] = "callback";
static const char __pyx_k_compress[] = "compress";
static const char __pyx_k_duration[] = "duration";
static const char __pyx_k_fade_out[] = "fade_out";
static const char __pyx_k_getstate[] = "__getstate__";
static const char __pyx_k_makeSeed[] = "makeSeed";
static const char __pyx_k_objectid[] = "objectid";
static const char __pyx_k_original[] = "original";
static const char __pyx_k_password[] = "password";
static const char __pyx_k_pasteStr[] = "pasteStr";
static const char __pyx_k_qualname[] = "__qualname__";
static const char __pyx_k_requests[] = "requests";
static const char __pyx_k_rotateTo[] = "rotateTo";
static const char __pyx_k_rotation[] = "rotation";
static const char __pyx_k_setstate[] = "__setstate__";
static const char __pyx_k_starting[] = "starting";
static const char __pyx_k_typeinfo[] = "typeinfo";
static const char __pyx_k_unlisted[] = "unlisted";
static const char __pyx_k_userName[] = "userName";
static const char __pyx_k_username[] = "username";
static const char __pyx_k_1_9_color[] = "1_9_color";
static const char __pyx_k_AAAAAAAAE[] = "AAAAAAAAE";
static const char __pyx_k_DASH_PINK[] = "DASH_PINK";
static const char __pyx_k_PyCCArray[] = "PyCCArray";
static const char __pyx_k_TypeError[] = "TypeError";
static const char __pyx_k_accountID[] = "accountID";
static const char __pyx_k_addBlocks[] = "addBlocks";
static const char __pyx_k_b64decode[] = "b64decode";
static const char __pyx_k_b64encode[] = "b64encode";
static const char __pyx_k_dont_fade[] = "dont_fade";
static const char __pyx_k_duplicate[] = "duplicate";
static const char __pyx_k_group_ids[] = "group_ids";
static const char __pyx_k_hexdigest[] = "hexdigest";
static const char __pyx_k_hold_mode[] = "hold_mode";
static const char __pyx_k_itertools[] = "itertools";
static const char __pyx_k_levelDesc[] = "levelDesc";
static const char __pyx_k_levelInfo[] = "levelInfo";
static const char __pyx_k_levelName[] = "levelName";
static const char __pyx_k_levelname[] = "levelname";
static const char __pyx_k_lpassword[] = "lpassword";
static const char __pyx_k_metaclass[] = "__metaclass__";
static const char __pyx_k_positionX[] = "positionX";
static const char __pyx_k_press_key[] = "press_key";
static const char __pyx_k_reduce_ex[] = "__reduce_ex__";
static const char __pyx_k_selection[] = "selection";
static const char __pyx_k_setCoords[] = "setCoords";
static const char __pyx_k_threading[] = "threading";
static const char __pyx_k_twoPlayer[] = "twoPlayer";
static const char __pyx_k_urlencode[] = "urlencode";
static const char __pyx_k_BBUEIHF1rd[] = "BBUEIHF1rd";
static const char __pyx_k_DASH_GREEN[] = "DASH_GREEN";
static const char __pyx_k_GameObject[] = "GameObject";
static const char __pyx_k_IndexError[] = "IndexError";
static const char __pyx_k_PyCCObject[] = "PyCCObject";
static const char __pyx_k_PyRingType[] = "PyRingType";
static const char __pyx_k_RingObject[] = "RingObject";
static const char __pyx_k_SIZE_SMALL[] = "SIZE_SMALL";
static const char __pyx_k_ValueError[] = "ValueError";
static const char __pyx_k_add_object[] = "add_object";
static const char __pyx_k_audioTrack[] = "audioTrack";
static const char __pyx_k_audiotrack[] = "audiotrack";
static const char __pyx_k_background[] = "background";
static const char __pyx_k_decompress[] = "decompress";
static const char __pyx_k_dictionary[] = "dictionary";
static const char __pyx_k_dont_enter[] = "dont_enter";
static const char __pyx_k_fromString[] = "fromString";
static const char __pyx_k_namedtuple[] = "namedtuple";
static const char __pyx_k_otheritems[] = "otheritems";
static const char __pyx_k_pulse_hold[] = "pulse_hold";
static const char __pyx_k_pulse_mode[] = "pulse_mode";
static const char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static const char __pyx_k_x_position[] = "x_position";
static const char __pyx_k_y_position[] = "y_position";
static const char __pyx_k_Block___str[] = "Block.__str__";
static const char __pyx_k_Level___str[] = "Level.__str__";
static const char __pyx_k_PySpeedType[] = "PySpeedType";
static const char __pyx_k_SIZE_NORMAL[] = "SIZE_NORMAL";
static const char __pyx_k_Wmfd2893gb7[] = "Wmfd2893gb7";
static const char __pyx_k_collections[] = "collections";
static const char __pyx_k_description[] = "description";
static const char __pyx_k_easing_rate[] = "easing_rate";
static const char __pyx_k_extraString[] = "extraString";
static const char __pyx_k_gameVersion[] = "gameVersion";
static const char __pyx_k_getfGroupID[] = "getfGroupID";
static const char __pyx_k_ground_line[] = "ground_line";
static const char __pyx_k_high_detail[] = "high_detail";
static const char __pyx_k_levelLength[] = "levelLength";
static const char __pyx_k_levelString[] = "levelString";
static const char __pyx_k_levelstring[] = "levelstring";
static const char __pyx_k_pickup_mode[] = "pickup_mode";
static const char __pyx_k_song_offset[] = "song_offset";
static const char __pyx_k_spawn_delay[] = "spawn_delay";
static const char __pyx_k_thread_sync[] = "thread_sync";
static const char __pyx_k_uploadLevel[] = "uploadLevel";
static const char __pyx_k_Block___init[] = "Block.__init__";
static const char __pyx_k_Block___repr[] = "Block.__repr__";
static const char __pyx_k_Block_change[] = "Block.change";
static const char __pyx_k_Block_coords[] = "Block.coords";
static const char __pyx_k_Block_rotate[] = "Block.rotate";
static const char __pyx_k_Content_Type[] = "Content-Type";
static const char __pyx_k_GameObjArray[] = "GameObjArray";
static const char __pyx_k_Header___str[] = "Header.__str__";
static const char __pyx_k_Invalid_type[] = "Invalid type '";
static const char __pyx_k_Level___init[] = "Level.__init__";
static const char __pyx_k_PyGameObject[] = "PyGameObject";
static const char __pyx_k_PyPortalType[] = "PyPortalType";
static const char __pyx_k_RuntimeError[] = "RuntimeError";
static const char __pyx_k_copy_opacity[] = "copy_opacity";
static const char __pyx_k_createObject[] = "createObject";
static const char __pyx_k_encodestring[] = "encodestring";
static const char __pyx_k_follow_x_mod[] = "follow_x_mod";
static const char __pyx_k_follow_y_mod[] = "follow_y_mod";
static const char __pyx_k_getAccountID[] = "getAccountID";
static const char __pyx_k_group_parent[] = "group_parent";
static const char __pyx_k_hsv_values_1[] = "hsv_values_1";
static const char __pyx_k_hsv_values_2[] = "hsv_values_2";
static const char __pyx_k_levelVersion[] = "levelVersion";
static const char __pyx_k_linked_group[] = "linked_group";
static const char __pyx_k_move_objects[] = "move_objects";
static const char __pyx_k_staticmethod[] = "staticmethod";
static const char __pyx_k_thread_async[] = "thread_async";
static const char __pyx_k_touch_toggle[] = "touch_toggle";
static const char __pyx_k_urllib_parse[] = "urllib.parse";
static const char __pyx_k_xI25fpAapCQg[] = "xI25fpAapCQg";
static const char __pyx_k_Header___init[] = "Header.__init__";
static const char __pyx_k_Header___repr[] = "Header.__repr__";
static const char __pyx_k_Invalid_index[] = "Invalid index";
static const char __pyx_k_Level_encodee[] = "Level.encodee";
static const char __pyx_k_binaryVersion[] = "binaryVersion";
static const char __pyx_k_blocksInGroup[] = "blocksInGroup";
static const char __pyx_k_compresslevel[] = "compresslevel";
static const char __pyx_k_downloadLevel[] = "downloadLevel";
static const char __pyx_k_dynamic_block[] = "dynamic_block";
static const char __pyx_k_glow_disabled[] = "glow_disabled";
static const char __pyx_k_hsv_enabled_1[] = "hsv_enabled_1";
static const char __pyx_k_hsv_enabled_2[] = "hsv_enabled_2";
static const char __pyx_k_multi_trigger[] = "multi_trigger";
static const char __pyx_k_pulse_fade_in[] = "pulse_fade_in";
static const char __pyx_k_reduce_cython[] = "__reduce_cython__";
static const char __pyx_k_rotation_lock[] = "rotation_lock";
static const char __pyx_k_AttributeError[] = "AttributeError";
static const char __pyx_k_GRAVITY_NORMAL[] = "GRAVITY_NORMAL";
static const char __pyx_k_Level_addBlock[] = "Level.addBlock";
static const char __pyx_k_PyEventHandler[] = "PyEventHandler";
static const char __pyx_k_activate_group[] = "activate_group";
static const char __pyx_k_editor_layer_1[] = "editor_layer_1";
static const char __pyx_k_editor_layer_2[] = "editor_layer_2";
static const char __pyx_k_player_color_1[] = "player_color_1";
static const char __pyx_k_player_color_2[] = "player_color_2";
static const char __pyx_k_portal_checked[] = "portal_checked";
static const char __pyx_k_pulse_fade_out[] = "pulse_fade_out";
static const char __pyx_k_remove_objects[] = "remove_objects";
static const char __pyx_k_requestedStars[] = "requestedStars";
static const char __pyx_k_select_objects[] = "select_objects";
static const char __pyx_k_shake_interval[] = "shake_interval";
static const char __pyx_k_shake_strength[] = "shake_strength";
static const char __pyx_k_urllib_request[] = "urllib.request";
static const char __pyx_k_Block___getitem[] = "Block.__getitem__";
static const char __pyx_k_Block___setitem[] = "Block.__setitem__";
static const char __pyx_k_Block_setCoords[] = "Block.setCoords";
static const char __pyx_k_Function_failed[] = "Function failed";
static const char __pyx_k_GRAVITY_FLIPPED[] = "GRAVITY_FLIPPED";
static const char __pyx_k_LabelGameObject[] = "LabelGameObject";
static const char __pyx_k_Level_addBlocks[] = "Level.addBlocks";
static const char __pyx_k_blockFromString[] = "blockFromString";
static const char __pyx_k_cocos2d_CCArray[] = "cocos2d::CCArray";
static const char __pyx_k_copied_color_id[] = "copied_color_id";
static const char __pyx_k_deleteSelection[] = "deleteSelection";
static const char __pyx_k_follow_group_id[] = "follow_group_id";
static const char __pyx_k_pulse_exclusive[] = "pulse_exclusive";
static const char __pyx_k_pulse_main_only[] = "pulse_main_only";
static const char __pyx_k_setstate_cython[] = "__setstate_cython__";
static const char __pyx_k_spawn_triggered[] = "spawn_triggered";
static const char __pyx_k_substract_count[] = "substract_count";
static const char __pyx_k_target_color_id[] = "target_color_id";
static const char __pyx_k_target_group_id[] = "target_group_id";
static const char __pyx_k_touch_dual_mode[] = "touch_dual_mode";
static const char __pyx_k_touch_triggered[] = "touch_triggered";
static const char __pyx_k_DIRECTION_NORMAL[] = "DIRECTION_NORMAL";
static const char __pyx_k_EffectGameObject[] = "EffectGameObject";
static const char __pyx_k_Header___getitem[] = "Header.__getitem__";
static const char __pyx_k_Header___setitem[] = "Header.__setitem__";
static const char __pyx_k_disable_rotation[] = "disable_rotation";
static const char __pyx_k_reinterpret_cast[] = "reinterpret_cast";
static const char __pyx_k_rotation_degrees[] = "rotation_degrees";
static const char __pyx_k_DIRECTION_REVERSE[] = "DIRECTION_REVERSE";
static const char __pyx_k_Level_getfGroupID[] = "Level.getfGroupID";
static const char __pyx_k_Level_uploadLevel[] = "Level.uploadLevel";
static const char __pyx_k_PyCollectibleType[] = "PyCollectibleType";
static const char __pyx_k_press_edit_button[] = "press_edit_button";
static const char __pyx_k_press_menu_button[] = "press_menu_button";
static const char __pyx_k_pulse_detail_only[] = "pulse_detail_only";
static const char __pyx_k_pulse_target_type[] = "pulse_target_type";
static const char __pyx_k_AnimatedGameObject[] = "AnimatedGameObject";
static const char __pyx_k_Incorrect_Username[] = "Incorrect Username";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_rotation_times_360[] = "rotation_times_360";
static const char __pyx_k_xor_locals_genexpr[] = "xor.<locals>.genexpr";
static const char __pyx_k_Level_blocksInGroup[] = "Level.blocksInGroup";
static const char __pyx_k_Level_downloadLevel[] = "Level.downloadLevel";
static const char __pyx_k_is_flipped_vertical[] = "is_flipped_vertical";
static const char __pyx_k_move_target_enabled[] = "move_target_enabled";
static const char __pyx_k_sortX_locals_lambda[] = "sortX.<locals>.<lambda>";
static const char __pyx_k_TeleportPortalObject[] = "TeleportPortalObject";
static const char __pyx_k_collision_block_b_id[] = "collision_block_b_id";
static const char __pyx_k_count_multi_activate[] = "count_multi_activate";
static const char __pyx_k_for_item_inside_list[] = "' for item inside list";
static const char __pyx_k_move_trigger_9_units[] = "move_trigger_9_units";
static const char __pyx_k_move_trigger_x_units[] = "move_trigger_x_units";
static const char __pyx_k_spawn_editor_disable[] = "spawn_editor_disable";
static const char __pyx_k_thread_sync_locals_k[] = "thread_sync.<locals>.k";
static const char __pyx_k_Array_got_deallocated[] = "Array got deallocated";
static const char __pyx_k_Block_blockFromString[] = "Block.blockFromString";
static const char __pyx_k_Invalid_event_handler[] = "Invalid event handler {}";
static const char __pyx_k_custom_rotation_speed[] = "custom_rotation_speed";
static const char __pyx_k_follow_player_y_delay[] = "follow_player_y_delay";
static const char __pyx_k_follow_player_y_speed[] = "follow_player_y_speed";
static const char __pyx_k_handler_name_callback[] = "handler name callback";
static const char __pyx_k_is_flipped_horizontal[] = "is_flipped_horizontal";
static const char __pyx_k_move_lock_to_player_x[] = "move_lock_to_player_x";
static const char __pyx_k_move_lock_to_player_y[] = "move_lock_to_player_y";
static const char __pyx_k_thread_async_locals_k[] = "thread_async.<locals>.k";
static const char __pyx_k_Unable_to_fetch_editor[] = "Unable to fetch editor";
static const char __pyx_k_follow_player_y_offset[] = "follow_player_y_offset";
static const char __pyx_k_is_active_trigger_type[] = "is_active_trigger_type";
static const char __pyx_k_copied_color_hsv_values[] = "copied_color_hsv_values";
static const char __pyx_k_getattr___locals_lambda[] = "__getattr__.<locals>.<lambda>";
static const char __pyx_k_pulsing_animation_speed[] = "pulsing_animation_speed";
static const char __pyx_k_instant_count_comparison[] = "instant_count_comparison";
static const char __pyx_k_while_True_self__runLoop[] = "while True:\n    self._runLoop()";
static const char __pyx_k_follow_player_y_max_speed[] = "follow_player_y_max_speed";
static const char __pyx_k_CCArray_index_out_of_range[] = "CCArray index out of range";
static const char __pyx_k_builtin_function_or_method[] = "builtin_function_or_method";
static const char __pyx_k_move_target_pos_coordinates[] = "move_target_pos_coordinates";
static const char __pyx_k_pulsing_animation_randomize[] = "pulsing_animation_randomize";
static const char __pyx_k_Editor___get___locals_lambda[] = "Editor.__get__.<locals>.<lambda>";
static const char __pyx_k_Editor___set___locals_lambda[] = "Editor.__set__.<locals>.<lambda>";
static const char __pyx_k_teleportation_yellow_distance[] = "teleportation_yellow_distance";
static const char __pyx_k_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0[] = "0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0";
static const char __pyx_k_GameObjArray_object_has_no_attr[] = "'GameObjArray' object has no attribute '";
static const char __pyx_k_Y_pyedit_pyedit_engine_cy_PyLvl[] = "Y:\\pyedit\\pyedit_engine\\cy\\PyLvl.pyx";
static const char __pyx_k_gameVersion_21_binaryVersion_35[] = "gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7";
static const char __pyx_k_http_www_boomlings_com_database[] = "http://www.boomlings.com/database/getGJUsers20.php";
static const char __pyx_k_thread_sync_locals_k_locals_why[] = "thread_sync.<locals>.k.<locals>.why";
static const char __pyx_k_1_40_2_125_3_255_11_255_12_255_1[] = "1_40_2_125_3_255_11_255_12_255_13_255_4_-1_6_1000_7_1_15_1_18_0_8_1|1_0_2_102_3_255_11_255_12_255_13_255_4_-1_6_1001_7_1_15_1_18_0_8_1|1_0_2_102_3_255_11_255_12_255_13_255_4_-1_6_1009_7_1_15_1_18_0_8_1|1_255_2_255_3_255_11_255_12_255_13_255_4_-1_6_1002_5_1_7_1_15_1_18_0_8_1|1_0_2_255_3_125_11_255_12_255_13_255_4_-1_6_1005_5_1_7_1_15_1_18_0_8_1|1_0_2_255_3_125_11_255_12_255_13_255_4_-1_6_1006_5_1_7_1_15_1_18_0_8_1|1_0_2_0_3_0_11_255_12_255_13_255_4_-1_6_3_7_1_15_1_18_0_8_1|";
static const char __pyx_k_H4sIAAAAAAAAEzOwNrQ20DMwsrY21DMz[] = "H4sIAAAAAAAAEzOwNrQ20DMwsrY21DMztbYGAJp7I8gQAAAA";
static const char __pyx_k_Input_must_be_a_list_or_subclass[] = "Input must be a list or subclass of PyCCArray";
static const char __pyx_k_Y_pyedit_pyedit_engine_cy_main_p[] = "Y:\\pyedit\\pyedit_engine\\cy\\main.pyx";
static const char __pyx_k_application_x_www_form_urlencode[] = "application/x-www-form-urlencoded";
static const char __pyx_k_http_boomlings_com_database_uplo[] = "http://boomlings.com/database/uploadGJLevel21.php";
static const char __pyx_k_no_default___reduce___due_to_non[] = "no default __reduce__ due to non-trivial __cinit__";
static const char __pyx_k_self_inst_cannot_be_converted_to[] = "self.inst cannot be converted to a Python object for pickling";
static const char __pyx_k_thread_async_locals_k_locals_lam[] = "thread_async.<locals>.k.<locals>.<lambda>";
static const char __pyx_k_http_www_boomlings_com_database_2[] = "http://www.boomlings.com/database/downloadGJLevel22.php";
static PyObject *__pyx_kp_u_0;
static PyObject *__pyx_kp_u_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0;
static PyObject *__pyx_kp_u_1;
static PyObject *__pyx_kp_u_10;
static PyObject *__pyx_kp_u_100;
static PyObject *__pyx_kp_u_101;
static PyObject *__pyx_kp_u_102;
static PyObject *__pyx_kp_u_103;
static PyObject *__pyx_kp_u_105;
static PyObject *__pyx_kp_u_106;
static PyObject *__pyx_kp_u_107;
static PyObject *__pyx_kp_u_108;
static PyObject *__pyx_kp_u_11;
static PyObject *__pyx_kp_u_13;
static PyObject *__pyx_kp_u_15;
static PyObject *__pyx_kp_u_16;
static PyObject *__pyx_kp_u_17;
static PyObject *__pyx_kp_u_19;
static PyObject *__pyx_kp_u_1_40_2_125_3_255_11_255_12_255_1;
static PyObject *__pyx_kp_u_1_9_color;
static PyObject *__pyx_kp_u_2;
static PyObject *__pyx_kp_u_20;
static PyObject *__pyx_kp_u_21;
static PyObject *__pyx_kp_u_22;
static PyObject *__pyx_kp_u_23;
static PyObject *__pyx_kp_u_24;
static PyObject *__pyx_kp_u_25;
static PyObject *__pyx_kp_u_28;
static PyObject *__pyx_kp_u_29;
static PyObject *__pyx_kp_u_2_player;
static PyObject *__pyx_kp_u_3;
static PyObject *__pyx_kp_u_30;
static PyObject *__pyx_kp_u_31;
static PyObject *__pyx_kp_u_32;
static PyObject *__pyx_kp_u_34;
static PyObject *__pyx_kp_u_35;
static PyObject *__pyx_kp_u_36;
static PyObject *__pyx_kp_u_37526;
static PyObject *__pyx_kp_u_3D;
static PyObject *__pyx_kp_u_4;
static PyObject *__pyx_kp_u_41;
static PyObject *__pyx_kp_u_41274;
static PyObject *__pyx_kp_u_42;
static PyObject *__pyx_kp_u_43;
static PyObject *__pyx_kp_u_44;
static PyObject *__pyx_kp_u_45;
static PyObject *__pyx_kp_u_46;
static PyObject *__pyx_kp_u_47;
static PyObject *__pyx_kp_u_48;
static PyObject *__pyx_kp_u_49;
static PyObject *__pyx_kp_u_5;
static PyObject *__pyx_kp_u_50;
static PyObject *__pyx_kp_u_51;
static PyObject *__pyx_kp_u_52;
static PyObject *__pyx_kp_u_54;
static PyObject *__pyx_kp_u_56;
static PyObject *__pyx_kp_u_57;
static PyObject *__pyx_kp_u_58;
static PyObject *__pyx_kp_u_59;
static PyObject *__pyx_kp_u_6;
static PyObject *__pyx_kp_u_60;
static PyObject *__pyx_kp_u_61;
static PyObject *__pyx_kp_u_62;
static PyObject *__pyx_kp_u_63;
static PyObject *__pyx_kp_u_64;
static PyObject *__pyx_kp_u_65;
static PyObject *__pyx_kp_u_66;
static PyObject *__pyx_kp_u_67;
static PyObject *__pyx_kp_u_68;
static PyObject *__pyx_kp_u_69;
static PyObject *__pyx_kp_u_7;
static PyObject *__pyx_kp_u_70;
static PyObject *__pyx_kp_u_71;
static PyObject *__pyx_kp_u_72;
static PyObject *__pyx_kp_u_73;
static PyObject *__pyx_kp_u_75;
static PyObject *__pyx_kp_u_77;
static PyObject *__pyx_kp_u_78;
static PyObject *__pyx_kp_u_79;
static PyObject *__pyx_kp_u_8;
static PyObject *__pyx_kp_u_80;
static PyObject *__pyx_kp_u_81;
static PyObject *__pyx_kp_u_82;
static PyObject *__pyx_kp_u_84;
static PyObject *__pyx_kp_u_85;
static PyObject *__pyx_kp_u_86;
static PyObject *__pyx_kp_u_87;
static PyObject *__pyx_kp_u_88;
static PyObject *__pyx_kp_u_89;
static PyObject *__pyx_kp_u_9;
static PyObject *__pyx_kp_u_90;
static PyObject *__pyx_kp_u_91;
static PyObject *__pyx_kp_u_92;
static PyObject *__pyx_kp_u_93;
static PyObject *__pyx_kp_u_95;
static PyObject *__pyx_kp_u_96;
static PyObject *__pyx_kp_u_97;
static PyObject *__pyx_kp_u_98;
static PyObject *__pyx_kp_u_99;
static PyObject *__pyx_n_b_AAAAAAAAE;
static PyObject *__pyx_n_u_AnimatedGameObject;
static PyObject *__pyx_kp_u_Array_got_deallocated;
static PyObject *__pyx_n_s_AttributeError;
static PyObject *__pyx_n_u_BBUEIHF1rd;
static PyObject *__pyx_n_s_BLACK;
static PyObject *__pyx_n_s_BLUE;
static PyObject *__pyx_n_s_Block;
static PyObject *__pyx_n_s_Block___getitem;
static PyObject *__pyx_n_s_Block___init;
static PyObject *__pyx_n_s_Block___repr;
static PyObject *__pyx_n_s_Block___setitem;
static PyObject *__pyx_n_s_Block___str;
static PyObject *__pyx_n_s_Block_blockFromString;
static PyObject *__pyx_n_s_Block_change;
static PyObject *__pyx_n_s_Block_coords;
static PyObject *__pyx_n_s_Block_rotate;
static PyObject *__pyx_n_s_Block_setCoords;
static PyObject *__pyx_kp_u_CCArray_index_out_of_range;
static PyObject *__pyx_n_s_COIN;
static PyObject *__pyx_n_s_CUBE;
static PyObject *__pyx_n_s_CUSTOM;
static PyObject *__pyx_kp_u_Content_Type;
static PyObject *__pyx_n_s_DASH_GREEN;
static PyObject *__pyx_n_s_DASH_PINK;
static PyObject *__pyx_n_s_DIRECTION_NORMAL;
static PyObject *__pyx_n_s_DIRECTION_REVERSE;
static PyObject *__pyx_n_s_DUAL_OFF;
static PyObject *__pyx_n_s_DUAL_ON;
static PyObject *__pyx_n_s_Editor;
static PyObject *__pyx_n_s_Editor___get___locals_lambda;
static PyObject *__pyx_n_s_Editor___set___locals_lambda;
static PyObject *__pyx_n_u_EffectGameObject;
static PyObject *__pyx_n_s_Enum;
static PyObject *__pyx_n_u_Error;
static PyObject *__pyx_n_s_FAST;
static PyObject *__pyx_n_s_FASTER;
static PyObject *__pyx_n_s_FASTEST;
static PyObject *__pyx_n_s_FLASK;
static PyObject *__pyx_kp_u_Function_failed;
static PyObject *__pyx_n_s_GRAVITY_FLIPPED;
static PyObject *__pyx_n_s_GRAVITY_NORMAL;
static PyObject *__pyx_n_s_GREEN;
static PyObject *__pyx_n_s_GameObjArray;
static PyObject *__pyx_kp_u_GameObjArray_object_has_no_attr;
static PyObject *__pyx_n_u_GameObject;
static PyObject *__pyx_n_u_H4sIAAAAAAAAEzOwNrQ20DMwsrY21DMz;
static PyObject *__pyx_n_s_HEART;
static PyObject *__pyx_n_s_Header;
static PyObject *__pyx_n_s_Header___getitem;
static PyObject *__pyx_n_s_Header___init;
static PyObject *__pyx_n_s_Header___repr;
static PyObject *__pyx_n_s_Header___setitem;
static PyObject *__pyx_n_s_Header___str;
static PyObject *__pyx_kp_u_Incorrect_Username;
static PyObject *__pyx_n_s_IndexError;
static PyObject *__pyx_kp_u_Input_must_be_a_list_or_subclass;
static PyObject *__pyx_kp_u_Invalid_event_handler;
static PyObject *__pyx_kp_u_Invalid_index;
static PyObject *__pyx_kp_u_Invalid_type;
static PyObject *__pyx_n_s_KEY;
static PyObject *__pyx_n_u_LabelGameObject;
static PyObject *__pyx_n_s_Level;
static PyObject *__pyx_n_s_Level___init;
static PyObject *__pyx_n_s_Level___str;
static PyObject *__pyx_n_s_Level_addBlock;
static PyObject *__pyx_n_s_Level_addBlocks;
static PyObject *__pyx_n_s_Level_blocksInGroup;
static PyObject *__pyx_n_s_Level_downloadLevel;
static PyObject *__pyx_n_s_Level_encodee;
static PyObject *__pyx_n_s_Level_getfGroupID;
static PyObject *__pyx_n_s_Level_uploadLevel;
static PyObject *__pyx_n_s_NORMAL;
static PyObject *__pyx_n_u_Ok;
static PyObject *__pyx_n_s_PINK;
static PyObject *__pyx_n_s_PyCCArray;
static PyObject *__pyx_n_s_PyCCObject;
static PyObject *__pyx_n_s_PyCollectibleType;
static PyObject *__pyx_n_s_PyEvent;
static PyObject *__pyx_n_u_PyEvent;
static PyObject *__pyx_n_s_PyEventHandler;
static PyObject *__pyx_n_s_PyGameObject;
static PyObject *__pyx_n_s_PyPortalType;
static PyObject *__pyx_n_s_PyRingType;
static PyObject *__pyx_n_s_PySpeedType;
static PyObject *__pyx_n_s_RED;
static PyObject *__pyx_n_s_ROBOT;
static PyObject *__pyx_n_s_Request;
static PyObject *__pyx_n_u_RingObject;
static PyObject *__pyx_n_s_RuntimeError;
static PyObject *__pyx_n_s_SHIP;
static PyObject *__pyx_n_s_SIZE_NORMAL;
static PyObject *__pyx_n_s_SIZE_SMALL;
static PyObject *__pyx_n_s_SKULL;
static PyObject *__pyx_n_s_SLOW;
static PyObject *__pyx_n_s_SPIDER;
static PyObject *__pyx_n_s_TELEPORT;
static PyObject *__pyx_n_u_TeleportPortalObject;
static PyObject *__pyx_n_s_TypeError;
static PyObject *__pyx_n_s_UFO;
static PyObject *__pyx_kp_u_Unable_to_fetch_editor;
static PyObject *__pyx_n_s_ValueError;
static PyObject *__pyx_n_s_WAVE;
static PyObject *__pyx_n_u_Wmfd2893gb7;
static PyObject *__pyx_n_s_YELLOW;
static PyObject *__pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl;
static PyObject *__pyx_kp_s_Y_pyedit_pyedit_engine_cy_main_p;
static PyObject *__pyx_kp_u__17;
static PyObject *__pyx_kp_u__25;
static PyObject *__pyx_kp_u__27;
static PyObject *__pyx_kp_u__29;
static PyObject *__pyx_kp_u__32;
static PyObject *__pyx_kp_u__33;
static PyObject *__pyx_kp_u__35;
static PyObject *__pyx_kp_b__37;
static PyObject *__pyx_kp_b__38;
static PyObject *__pyx_kp_b__40;
static PyObject *__pyx_n_b__41;
static PyObject *__pyx_n_s__51;
static PyObject *__pyx_n_s_a;
static PyObject *__pyx_n_s_aa;
static PyObject *__pyx_n_u_accountID;
static PyObject *__pyx_n_u_activate_group;
static PyObject *__pyx_n_s_addBlock;
static PyObject *__pyx_n_s_addBlocks;
static PyObject *__pyx_n_u_add_object;
static PyObject *__pyx_n_s_alert;
static PyObject *__pyx_n_s_append;
static PyObject *__pyx_kp_u_application_x_www_form_urlencode;
static PyObject *__pyx_n_s_ar;
static PyObject *__pyx_n_s_args;
static PyObject *__pyx_n_u_audioTrack;
static PyObject *__pyx_n_s_audiotrack;
static PyObject *__pyx_n_u_auto;
static PyObject *__pyx_n_s_b;
static PyObject *__pyx_n_s_b64decode;
static PyObject *__pyx_n_s_b64encode;
static PyObject *__pyx_n_u_background;
static PyObject *__pyx_n_s_base64;
static PyObject *__pyx_n_u_binaryVersion;
static PyObject *__pyx_n_u_blending;
static PyObject *__pyx_n_s_bloc;
static PyObject *__pyx_n_s_blockFromString;
static PyObject *__pyx_n_u_blockid;
static PyObject *__pyx_n_s_blocks;
static PyObject *__pyx_n_s_blocksInGroup;
static PyObject *__pyx_n_u_blue;
static PyObject *__pyx_n_u_builtin_function_or_method;
static PyObject *__pyx_n_s_builtins;
static PyObject *__pyx_n_s_c;
static PyObject *__pyx_n_s_callback;
static PyObject *__pyx_n_s_change;
static PyObject *__pyx_n_s_chr;
static PyObject *__pyx_n_s_class;
static PyObject *__pyx_n_s_cline_in_traceback;
static PyObject *__pyx_n_s_close;
static PyObject *__pyx_kp_u_cocos2d_CCArray;
static PyObject *__pyx_n_s_coins;
static PyObject *__pyx_n_u_coins;
static PyObject *__pyx_n_s_collect;
static PyObject *__pyx_n_s_collections;
static PyObject *__pyx_n_u_collision_block_b_id;
static PyObject *__pyx_n_u_color1;
static PyObject *__pyx_n_u_color2;
static PyObject *__pyx_n_u_colors;
static PyObject *__pyx_n_s_compress;
static PyObject *__pyx_n_s_compresslevel;
static PyObject *__pyx_n_s_coords;
static PyObject *__pyx_n_u_coords;
static PyObject *__pyx_n_u_copied_color_hsv_values;
static PyObject *__pyx_n_u_copied_color_id;
static PyObject *__pyx_n_u_copy_opacity;
static PyObject *__pyx_n_u_count;
static PyObject *__pyx_n_u_count_multi_activate;
static PyObject *__pyx_n_s_createObject;
static PyObject *__pyx_n_u_custom_rotation_speed;
static PyObject *__pyx_n_s_cycle;
static PyObject *__pyx_n_s_d;
static PyObject *__pyx_n_u_d;
static PyObject *__pyx_n_s_data;
static PyObject *__pyx_n_s_decode;
static PyObject *__pyx_n_s_decompress;
static PyObject *__pyx_n_s_degrees;
static PyObject *__pyx_n_s_deleteSelection;
static PyObject *__pyx_n_s_description;
static PyObject *__pyx_n_s_diction;
static PyObject *__pyx_n_s_dictionary;
static PyObject *__pyx_n_u_disable_rotation;
static PyObject *__pyx_n_s_doc;
static PyObject *__pyx_n_u_dont_enter;
static PyObject *__pyx_n_u_dont_fade;
static PyObject *__pyx_n_s_downloadLevel;
static PyObject *__pyx_n_u_dual;
static PyObject *__pyx_n_s_duplicate;
static PyObject *__pyx_n_u_duration;
static PyObject *__pyx_n_u_dynamic_block;
static PyObject *__pyx_n_s_e;
static PyObject *__pyx_n_u_easing;
static PyObject *__pyx_n_u_easing_rate;
static PyObject *__pyx_n_u_editor_layer_1;
static PyObject *__pyx_n_u_editor_layer_2;
static PyObject *__pyx_n_s_encode;
static PyObject *__pyx_n_s_encoded;
static PyObject *__pyx_n_s_encodee;
static PyObject *__pyx_n_s_encodestring;
static PyObject *__pyx_n_s_enum;
static PyObject *__pyx_n_s_err;
static PyObject *__pyx_n_u_ev;
static PyObject *__pyx_n_s_evens;
static PyObject *__pyx_n_u_extraString;
static PyObject *__pyx_n_s_f;
static PyObject *__pyx_n_u_fade_in;
static PyObject *__pyx_n_u_fade_out;
static PyObject *__pyx_n_u_follow_group_id;
static PyObject *__pyx_n_u_follow_player_y_delay;
static PyObject *__pyx_n_u_follow_player_y_max_speed;
static PyObject *__pyx_n_u_follow_player_y_offset;
static PyObject *__pyx_n_u_follow_player_y_speed;
static PyObject *__pyx_n_u_follow_x_mod;
static PyObject *__pyx_n_u_follow_y_mod;
static PyObject *__pyx_n_u_font;
static PyObject *__pyx_kp_u_for_item_inside_list;
static PyObject *__pyx_n_s_format;
static PyObject *__pyx_n_s_fromString;
static PyObject *__pyx_n_s_func;
static PyObject *__pyx_n_s_future;
static PyObject *__pyx_n_u_gameVersion;
static PyObject *__pyx_kp_u_gameVersion_21_binaryVersion_35;
static PyObject *__pyx_n_u_gdw;
static PyObject *__pyx_n_s_genexpr;
static PyObject *__pyx_n_s_get;
static PyObject *__pyx_n_s_getAccountID;
static PyObject *__pyx_n_s_getSong;
static PyObject *__pyx_n_s_getattr;
static PyObject *__pyx_n_s_getattr___locals_lambda;
static PyObject *__pyx_n_s_getfGroupID;
static PyObject *__pyx_n_s_getitem;
static PyObject *__pyx_n_s_getstate;
static PyObject *__pyx_n_u_gjp;
static PyObject *__pyx_n_u_glow_disabled;
static PyObject *__pyx_n_u_green;
static PyObject *__pyx_n_u_ground;
static PyObject *__pyx_n_u_ground_line;
static PyObject *__pyx_n_u_group_ids;
static PyObject *__pyx_n_u_group_parent;
static PyObject *__pyx_n_s_groupid;
static PyObject *__pyx_n_s_gs;
static PyObject *__pyx_n_s_gzip;
static PyObject *__pyx_n_s_handler;
static PyObject *__pyx_kp_u_handler_name_callback;
static PyObject *__pyx_n_s_hashlib;
static PyObject *__pyx_n_s_header;
static PyObject *__pyx_n_s_headers;
static PyObject *__pyx_n_s_hexdigest;
static PyObject *__pyx_n_u_high_detail;
static PyObject *__pyx_n_u_hold_mode;
static PyObject *__pyx_n_u_hsv_enabled_1;
static PyObject *__pyx_n_u_hsv_enabled_2;
static PyObject *__pyx_n_u_hsv_values_1;
static PyObject *__pyx_n_u_hsv_values_2;
static PyObject *__pyx_kp_u_http_boomlings_com_database_uplo;
static PyObject *__pyx_kp_u_http_www_boomlings_com_database;
static PyObject *__pyx_kp_u_http_www_boomlings_com_database_2;
static PyObject *__pyx_n_s_i;
static PyObject *__pyx_n_u_idk;
static PyObject *__pyx_n_s_ids;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_init;
static PyObject *__pyx_n_s_init_2;
static PyObject *__pyx_n_u_instant_count_comparison;
static PyObject *__pyx_n_u_is_active_trigger_type;
static PyObject *__pyx_n_u_is_flipped_horizontal;
static PyObject *__pyx_n_u_is_flipped_vertical;
static PyObject *__pyx_n_u_item_id;
static PyObject *__pyx_n_s_items;
static PyObject *__pyx_n_s_itertools;
static PyObject *__pyx_n_s_izip;
static PyObject *__pyx_n_s_jso;
static PyObject *__pyx_n_s_json;
static PyObject *__pyx_n_s_k;
static PyObject *__pyx_n_u_kA10;
static PyObject *__pyx_n_u_kA11;
static PyObject *__pyx_n_u_kA13;
static PyObject *__pyx_n_u_kA14;
static PyObject *__pyx_n_u_kA15;
static PyObject *__pyx_n_u_kA16;
static PyObject *__pyx_n_u_kA17;
static PyObject *__pyx_n_u_kA18;
static PyObject *__pyx_n_u_kA2;
static PyObject *__pyx_n_u_kA3;
static PyObject *__pyx_n_u_kA4;
static PyObject *__pyx_n_u_kA6;
static PyObject *__pyx_n_u_kA7;
static PyObject *__pyx_n_u_kA8;
static PyObject *__pyx_n_u_kA9;
static PyObject *__pyx_n_u_kS38;
static PyObject *__pyx_n_u_kS39;
static PyObject *__pyx_n_s_key;
static PyObject *__pyx_n_s_kwargs;
static PyObject *__pyx_n_u_ldm;
static PyObject *__pyx_n_s_len;
static PyObject *__pyx_n_u_levelDesc;
static PyObject *__pyx_n_u_levelID;
static PyObject *__pyx_n_u_levelInfo;
static PyObject *__pyx_n_u_levelLength;
static PyObject *__pyx_n_u_levelName;
static PyObject *__pyx_n_s_levelString;
static PyObject *__pyx_n_u_levelString;
static PyObject *__pyx_n_u_levelVersion;
static PyObject *__pyx_n_s_levelid;
static PyObject *__pyx_n_s_levelname;
static PyObject *__pyx_n_s_levelstring;
static PyObject *__pyx_n_s_lid;
static PyObject *__pyx_n_u_linked_group;
static PyObject *__pyx_n_s_lpassword;
static PyObject *__pyx_n_s_lst;
static PyObject *__pyx_n_s_lstr;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_main_2;
static PyObject *__pyx_n_s_makeSeed;
static PyObject *__pyx_n_s_math;
static PyObject *__pyx_n_s_metaclass;
static PyObject *__pyx_n_u_mini;
static PyObject *__pyx_n_s_module;
static PyObject *__pyx_n_u_move_lock_to_player_x;
static PyObject *__pyx_n_u_move_lock_to_player_y;
static PyObject *__pyx_n_u_move_objects;
static PyObject *__pyx_n_u_move_target_enabled;
static PyObject *__pyx_n_u_move_target_pos_coordinates;
static PyObject *__pyx_n_u_move_trigger_9_units;
static PyObject *__pyx_n_u_move_trigger_x_units;
static PyObject *__pyx_n_u_multi_trigger;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_s_name_2;
static PyObject *__pyx_n_u_name_2;
static PyObject *__pyx_n_s_namedtuple;
static PyObject *__pyx_n_u_no;
static PyObject *__pyx_kp_s_no_default___reduce___due_to_non;
static PyObject *__pyx_n_u_nothing;
static PyObject *__pyx_n_u_nutin;
static PyObject *__pyx_n_u_object;
static PyObject *__pyx_n_s_objectid;
static PyObject *__pyx_n_u_objects;
static PyObject *__pyx_n_s_odds;
static PyObject *__pyx_n_u_opacity;
static PyObject *__pyx_n_u_original;
static PyObject *__pyx_n_s_os;
static PyObject *__pyx_n_s_otheritems;
static PyObject *__pyx_n_s_out;
static PyObject *__pyx_n_s_p;
static PyObject *__pyx_n_u_page;
static PyObject *__pyx_n_s_password;
static PyObject *__pyx_n_u_password;
static PyObject *__pyx_n_s_pasteStr;
static PyObject *__pyx_n_u_pickup_mode;
static PyObject *__pyx_n_u_player_color_1;
static PyObject *__pyx_n_u_player_color_2;
static PyObject *__pyx_n_u_portal_checked;
static PyObject *__pyx_n_s_positionX;
static PyObject *__pyx_n_s_post;
static PyObject *__pyx_n_s_prepare;
static PyObject *__pyx_n_u_press_edit_button;
static PyObject *__pyx_n_u_press_key;
static PyObject *__pyx_n_u_press_menu_button;
static PyObject *__pyx_n_s_print;
static PyObject *__pyx_n_u_pulse_detail_only;
static PyObject *__pyx_n_u_pulse_exclusive;
static PyObject *__pyx_n_u_pulse_fade_in;
static PyObject *__pyx_n_u_pulse_fade_out;
static PyObject *__pyx_n_u_pulse_hold;
static PyObject *__pyx_n_u_pulse_main_only;
static PyObject *__pyx_n_u_pulse_mode;
static PyObject *__pyx_n_u_pulse_target_type;
static PyObject *__pyx_n_u_pulsing_animation_randomize;
static PyObject *__pyx_n_u_pulsing_animation_speed;
static PyObject *__pyx_n_s_pygd;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_n_s_qualname;
static PyObject *__pyx_n_s_r;
static PyObject *__pyx_n_s_random;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_read;
static PyObject *__pyx_n_u_red;
static PyObject *__pyx_n_s_reduce;
static PyObject *__pyx_n_s_reduce_cython;
static PyObject *__pyx_n_s_reduce_ex;
static PyObject *__pyx_n_s_reinterpret_cast;
static PyObject *__pyx_n_u_remove_objects;
static PyObject *__pyx_n_s_replace;
static PyObject *__pyx_n_s_repr;
static PyObject *__pyx_n_u_requestedStars;
static PyObject *__pyx_n_s_requests;
static PyObject *__pyx_n_s_rot;
static PyObject *__pyx_n_s_rotate;
static PyObject *__pyx_n_s_rotateTo;
static PyObject *__pyx_n_s_rotation;
static PyObject *__pyx_n_u_rotation;
static PyObject *__pyx_n_u_rotation_degrees;
static PyObject *__pyx_n_u_rotation_lock;
static PyObject *__pyx_n_u_rotation_times_360;
static PyObject *__pyx_n_s_scaleTo;
static PyObject *__pyx_n_u_secret;
static PyObject *__pyx_n_u_seed;
static PyObject *__pyx_n_s_seed2;
static PyObject *__pyx_n_u_seed2;
static PyObject *__pyx_n_u_select_objects;
static PyObject *__pyx_n_s_selection;
static PyObject *__pyx_n_s_self;
static PyObject *__pyx_n_u_self;
static PyObject *__pyx_kp_s_self_inst_cannot_be_converted_to;
static PyObject *__pyx_n_s_send;
static PyObject *__pyx_n_s_setCoords;
static PyObject *__pyx_n_s_setitem;
static PyObject *__pyx_n_s_setstate;
static PyObject *__pyx_n_s_setstate_cython;
static PyObject *__pyx_n_s_sha1;
static PyObject *__pyx_n_u_shake_interval;
static PyObject *__pyx_n_u_shake_strength;
static PyObject *__pyx_n_s_size;
static PyObject *__pyx_n_u_size;
static PyObject *__pyx_n_u_songID;
static PyObject *__pyx_n_u_song_offset;
static PyObject *__pyx_n_s_songid;
static PyObject *__pyx_n_s_sortX_locals_lambda;
static PyObject *__pyx_n_s_sorted;
static PyObject *__pyx_n_u_spawn_delay;
static PyObject *__pyx_n_u_spawn_editor_disable;
static PyObject *__pyx_n_u_spawn_triggered;
static PyObject *__pyx_n_u_speed;
static PyObject *__pyx_n_s_split;
static PyObject *__pyx_n_s_sqrt;
static PyObject *__pyx_n_s_stars;
static PyObject *__pyx_n_s_starting;
static PyObject *__pyx_n_s_staticmethod;
static PyObject *__pyx_n_s_str;
static PyObject *__pyx_n_u_str;
static PyObject *__pyx_n_s_str_2;
static PyObject *__pyx_n_s_stri;
static PyObject *__pyx_n_s_strip;
static PyObject *__pyx_n_s_stuff;
static PyObject *__pyx_n_u_substract_count;
static PyObject *__pyx_n_s_t;
static PyObject *__pyx_n_u_target_color_id;
static PyObject *__pyx_n_u_target_group_id;
static PyObject *__pyx_n_u_teleportation_yellow_distance;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_text;
static PyObject *__pyx_n_u_text;
static PyObject *__pyx_n_s_thread_async;
static PyObject *__pyx_n_s_thread_async_locals_k;
static PyObject *__pyx_n_s_thread_async_locals_k_locals_lam;
static PyObject *__pyx_n_s_thread_sync;
static PyObject *__pyx_n_s_thread_sync_locals_k;
static PyObject *__pyx_n_s_thread_sync_locals_k_locals_why;
static PyObject *__pyx_n_s_threading;
static PyObject *__pyx_n_s_throw;
static PyObject *__pyx_n_u_total;
static PyObject *__pyx_n_u_touch_dual_mode;
static PyObject *__pyx_n_u_touch_toggle;
static PyObject *__pyx_n_u_touch_triggered;
static PyObject *__pyx_n_s_twoPlayer;
static PyObject *__pyx_n_u_twoPlayer;
static PyObject *__pyx_n_s_typeinfo;
static PyObject *__pyx_n_s_unlisted;
static PyObject *__pyx_n_u_unlisted;
static PyObject *__pyx_n_s_update;
static PyObject *__pyx_n_s_uploadLevel;
static PyObject *__pyx_n_s_url;
static PyObject *__pyx_n_s_urlencode;
static PyObject *__pyx_n_s_urllib;
static PyObject *__pyx_n_s_urllib2;
static PyObject *__pyx_n_s_urllib_parse;
static PyObject *__pyx_n_s_urllib_request;
static PyObject *__pyx_n_s_urlopen;
static PyObject *__pyx_n_u_userName;
static PyObject *__pyx_n_s_username;
static PyObject *__pyx_n_u_vehicle;
static PyObject *__pyx_n_s_version;
static PyObject *__pyx_kp_u_while_True_self__runLoop;
static PyObject *__pyx_n_s_why;
static PyObject *__pyx_n_u_wt;
static PyObject *__pyx_n_u_wt2;
static PyObject *__pyx_n_u_ww;
static PyObject *__pyx_n_s_x;
static PyObject *__pyx_n_b_xI25fpAapCQg;
static PyObject *__pyx_n_u_x_position;
static PyObject *__pyx_n_s_xor;
static PyObject *__pyx_n_s_xor_locals_genexpr;
static PyObject *__pyx_n_s_xored;
static PyObject *__pyx_n_s_y;
static PyObject *__pyx_n_u_y_position;
static PyObject *__pyx_n_u_z_layer;
static PyObject *__pyx_n_u_z_order;
static PyObject *__pyx_n_s_zip;
static PyObject *__pyx_pf_4main_10PyCCObject___del__(struct _CCObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_10PyCCObject_8typeinfo___get__(struct _CCObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_10PyCCObject_2reinterpret_cast(struct _CCObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_10PyCCObject_4__reduce_cython__(CYTHON_UNUSED struct _CCObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_10PyCCObject_6__setstate_cython__(CYTHON_UNUSED struct _CCObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_4main_11thread_sync_1k_why(PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_4main_11thread_sync_k(PyObject *__pyx_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_4main_thread_sync(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_func); /* proto */
static PyObject *__pyx_lambda_funcdef_lambda(PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_4main_12thread_async_k(PyObject *__pyx_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_4main_2thread_async(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_func); /* proto */
static Py_ssize_t __pyx_pf_4main_9PyCCArray___len__(struct _CCArray *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_9PyCCArray_2__getitem__(struct _CCArray *__pyx_v_self, PyObject *__pyx_v_e); /* proto */
static PyObject *__pyx_pf_4main_9PyCCArray_4sortBy(struct _CCArray *__pyx_v_self, PyObject *__pyx_v_toSort); /* proto */
static PyObject *__pyx_pf_4main_9PyCCArray_6collect(struct _CCArray *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_9PyCCArray_8init(struct _CCArray *__pyx_v_self, PyObject *__pyx_v_stuff); /* proto */
static PyObject *__pyx_pf_4main_9PyCCArray_10__reduce_cython__(CYTHON_UNUSED struct _CCArray *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_9PyCCArray_12__setstate_cython__(CYTHON_UNUSED struct _CCArray *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_lambda_funcdef_lambda1(PyObject *__pyx_self, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_4main_12GameObjArray___getattr__(struct _GOArray *__pyx_v_self, PyObject *__pyx_v_attr); /* proto */
static PyObject *__pyx_lambda_funcdef_lambda2(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_4main_12GameObjArray_2sortX(struct _GOArray *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_12GameObjArray_4__reduce_cython__(CYTHON_UNUSED struct _GOArray *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_12GameObjArray_6__setstate_cython__(CYTHON_UNUSED struct _GOArray *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_4main_6Editor___init__(struct PyEditorUI *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_6Editor_2pasteStr(struct PyEditorUI *__pyx_v_self, PyObject *__pyx_v_obs); /* proto */
static PyObject *__pyx_pf_4main_6Editor_4createObject(struct PyEditorUI *__pyx_v_self, PyObject *__pyx_v_objectid, PyObject *__pyx_v_x, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_lambda_funcdef_lambda3(PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_4main_6Editor_9selection___get__(struct PyEditorUI *__pyx_v_self); /* proto */
static PyObject *__pyx_lambda_funcdef_lambda4(PyObject *__pyx_self); /* proto */
static int __pyx_pf_4main_6Editor_9selection_2__set__(struct PyEditorUI *__pyx_v_self, PyObject *__pyx_v_objects); /* proto */
static PyObject *__pyx_lambda_funcdef_lambda5(PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_4main_6Editor_7objects___get__(struct PyEditorUI *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_6Editor_6deselect(struct PyEditorUI *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_6Editor_8deleteSelection(struct PyEditorUI *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_6Editor_10duplicate(struct PyEditorUI *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_6Editor_12select(struct PyEditorUI *__pyx_v_self, PyObject *__pyx_v_object_s); /* proto */
static PyObject *__pyx_pf_4main_6Editor_14__reduce_cython__(CYTHON_UNUSED struct PyEditorUI *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_6Editor_16__setstate_cython__(CYTHON_UNUSED struct PyEditorUI *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_4main_12PyGameObject_moveTo(struct PyGameOb *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_4main_12PyGameObject_2move(struct PyGameOb *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_4main_12PyGameObject_8base_hue___get__(struct PyGameOb *__pyx_v_self); /* proto */
static int __pyx_pf_4main_12PyGameObject_8base_hue_2__set__(struct PyGameOb *__pyx_v_self, PyObject *__pyx_v_v); /* proto */
static PyObject *__pyx_pf_4main_12PyGameObject_10detail_hue___get__(struct PyGameOb *__pyx_v_self); /* proto */
static int __pyx_pf_4main_12PyGameObject_10detail_hue_2__set__(struct PyGameOb *__pyx_v_self, PyObject *__pyx_v_v); /* proto */
static PyObject *__pyx_pf_4main_12PyGameObject_4incrementZ(struct PyGameOb *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_12PyGameObject_4size___get__(struct PyGameOb *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_12PyGameObject_6scaleTo(struct PyGameOb *__pyx_v_self, PyObject *__pyx_v_sc); /* proto */
static PyObject *__pyx_pf_4main_12PyGameObject_8scale(struct PyGameOb *__pyx_v_self, PyObject *__pyx_v_sc); /* proto */
static PyObject *__pyx_pf_4main_12PyGameObject_2id___get__(struct PyGameOb *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_12PyGameObject_8position___get__(struct PyGameOb *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_12PyGameObject_9positionX___get__(struct PyGameOb *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_12PyGameObject_9positionY___get__(struct PyGameOb *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_12PyGameObject_8levelStr___get__(struct PyGameOb *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_12PyGameObject_6groups___get__(struct PyGameOb *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_12PyGameObject_10rotate(struct PyGameOb *__pyx_v_self, PyObject *__pyx_v_deg); /* proto */
static PyObject *__pyx_pf_4main_12PyGameObject_12rotateTo(struct PyGameOb *__pyx_v_self, PyObject *__pyx_v_deg); /* proto */
static PyObject *__pyx_pf_4main_12PyGameObject_8rotation___get__(struct PyGameOb *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_12PyGameObject_14__reduce_cython__(CYTHON_UNUSED struct PyGameOb *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_12PyGameObject_16__setstate_cython__(CYTHON_UNUSED struct PyGameOb *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_4main_4makeSeed(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_encoded); /* proto */
static PyObject *__pyx_pf_4main_6urlopen(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_url, PyObject *__pyx_v_p); /* proto */
static PyObject *__pyx_pf_4main_8getAccountID(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_username); /* proto */
static PyObject *__pyx_pf_4main_3xor_genexpr(PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_4main_10xor(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_data, PyObject *__pyx_v_key); /* proto */
static PyObject *__pyx_pf_4main_5Block___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_4main_5Block_2__getitem__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_e); /* proto */
static PyObject *__pyx_pf_4main_5Block_4__setitem__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_e, PyObject *__pyx_v_f); /* proto */
static PyObject *__pyx_pf_4main_5Block_6__str__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_5Block_8change(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_4main_5Block_10blockFromString(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_stri); /* proto */
static PyObject *__pyx_pf_4main_5Block_12__repr__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_5Block_14coords(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_5Block_16setCoords(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_4main_5Block_18rotate(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_degrees); /* proto */
static PyObject *__pyx_pf_4main_6Header___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_4main_6Header_2__getitem__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_e); /* proto */
static PyObject *__pyx_pf_4main_6Header_4__setitem__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_e, PyObject *__pyx_v_f); /* proto */
static PyObject *__pyx_pf_4main_6Header_6__str__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_6Header_8__repr__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_5Level_downloadLevel(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_levelname, PyObject *__pyx_v_lid); /* proto */
static PyObject *__pyx_pf_4main_5Level_2getfGroupID(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_5Level_4blocksInGroup(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_groupid); /* proto */
static PyObject *__pyx_pf_4main_5Level_6__init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_levelname, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_4main_5Level_8addBlock(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_4main_5Level_10addBlocks(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_4main_5Level_12uploadLevel(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_username, PyObject *__pyx_v_password, PyObject *__pyx_v_description, PyObject *__pyx_v_stars, PyObject *__pyx_v_unlisted, PyObject *__pyx_v_lpassword, PyObject *__pyx_v_songid, PyObject *__pyx_v_audiotrack, PyObject *__pyx_v_twoPlayer, PyObject *__pyx_v_fromString, PyObject *__pyx_v_coins, PyObject *__pyx_v_url, PyObject *__pyx_v_version, PyObject *__pyx_v_levelid); /* proto */
static PyObject *__pyx_pf_4main_5Level_14__str__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_5Level_16encodee(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_12getSong(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_lid); /* proto */
static PyObject *__pyx_pf_4main_14levelString(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_levelname, PyObject *__pyx_v_lstr); /* proto */
static PyObject *__pyx_pf_4main_16downloadLevel(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_levelname, PyObject *__pyx_v_lid); /* proto */
static int __pyx_pf_4main_14PyEventHandler___cinit__(struct __pyx_obj_4main_PyEventHandler *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_14PyEventHandler_2_runLoop(struct __pyx_obj_4main_PyEventHandler *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_14PyEventHandler_4runLoop(struct __pyx_obj_4main_PyEventHandler *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_14PyEventHandler_6registerEvent(struct __pyx_obj_4main_PyEventHandler *__pyx_v_self, PyObject *__pyx_v_callback, PyObject *__pyx_v_handler, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_4main_14PyEventHandler_8get_events(struct __pyx_obj_4main_PyEventHandler *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_14PyEventHandler_10__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4main_PyEventHandler *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4main_14PyEventHandler_12__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4main_PyEventHandler *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_tp_new_4main_PyCCObject(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4main_PyCCArray(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4main_GameObjArray(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4main_Editor(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4main_PyGameObject(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4main_PyEventHandler(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4main___pyx_scope_struct__thread_sync(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4main___pyx_scope_struct_1_k(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4main___pyx_scope_struct_2_thread_async(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4main___pyx_scope_struct_3_k(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4main___pyx_scope_struct_4___getattr__(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4main___pyx_scope_struct_5___get__(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4main___pyx_scope_struct_6___set__(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4main___pyx_scope_struct_7___get__(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4main___pyx_scope_struct_8_xor(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4main___pyx_scope_struct_9_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static __Pyx_CachedCFunction __pyx_umethod_PyDict_Type_get = {0, &__pyx_n_s_get, 0, 0, 0};
static __Pyx_CachedCFunction __pyx_umethod_PyDict_Type_update = {0, &__pyx_n_s_update, 0, 0, 0};
static PyObject *__pyx_float_0_;
static PyObject *__pyx_float_0_0;
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_2;
static PyObject *__pyx_int_4;
static PyObject *__pyx_int_6;
static PyObject *__pyx_int_13;
static PyObject *__pyx_int_36;
static PyObject *__pyx_int_50;
static PyObject *__pyx_int_84;
static PyObject *__pyx_int_90;
static PyObject *__pyx_int_141;
static PyObject *__pyx_int_1022;
static PyObject *__pyx_int_1330;
static PyObject *__pyx_int_1333;
static PyObject *__pyx_int_1594;
static PyObject *__pyx_int_1704;
static PyObject *__pyx_int_1751;
static PyObject *__pyx_int_neg_1;
static PyObject *__pyx_k__13;
static PyObject *__pyx_tuple_;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__3;
static PyObject *__pyx_tuple__5;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__8;
static PyObject *__pyx_slice__30;
static PyObject *__pyx_slice__31;
static PyObject *__pyx_slice__36;
static PyObject *__pyx_slice__43;
static PyObject *__pyx_tuple__10;
static PyObject *__pyx_tuple__11;
static PyObject *__pyx_tuple__12;
static PyObject *__pyx_tuple__14;
static PyObject *__pyx_tuple__15;
static PyObject *__pyx_tuple__16;
static PyObject *__pyx_tuple__18;
static PyObject *__pyx_tuple__19;
static PyObject *__pyx_tuple__20;
static PyObject *__pyx_tuple__21;
static PyObject *__pyx_tuple__22;
static PyObject *__pyx_tuple__23;
static PyObject *__pyx_tuple__24;
static PyObject *__pyx_tuple__26;
static PyObject *__pyx_tuple__28;
static PyObject *__pyx_tuple__34;
static PyObject *__pyx_tuple__39;
static PyObject *__pyx_tuple__42;
static PyObject *__pyx_tuple__44;
static PyObject *__pyx_tuple__45;
static PyObject *__pyx_tuple__46;
static PyObject *__pyx_tuple__47;
static PyObject *__pyx_tuple__49;
static PyObject *__pyx_tuple__52;
static PyObject *__pyx_tuple__54;
static PyObject *__pyx_tuple__56;
static PyObject *__pyx_tuple__58;
static PyObject *__pyx_tuple__60;
static PyObject *__pyx_tuple__62;
static PyObject *__pyx_tuple__64;
static PyObject *__pyx_tuple__66;
static PyObject *__pyx_tuple__68;
static PyObject *__pyx_tuple__70;
static PyObject *__pyx_tuple__72;
static PyObject *__pyx_tuple__74;
static PyObject *__pyx_tuple__76;
static PyObject *__pyx_tuple__78;
static PyObject *__pyx_tuple__79;
static PyObject *__pyx_tuple__81;
static PyObject *__pyx_tuple__82;
static PyObject *__pyx_tuple__84;
static PyObject *__pyx_tuple__86;
static PyObject *__pyx_tuple__88;
static PyObject *__pyx_tuple__90;
static PyObject *__pyx_tuple__92;
static PyObject *__pyx_tuple__94;
static PyObject *__pyx_tuple__96;
static PyObject *__pyx_tuple__98;
static PyObject *__pyx_codeobj__4;
static PyObject *__pyx_codeobj__7;
static PyObject *__pyx_codeobj__9;
static PyObject *__pyx_tuple__100;
static PyObject *__pyx_tuple__102;
static PyObject *__pyx_tuple__104;
static PyObject *__pyx_tuple__106;
static PyObject *__pyx_tuple__107;
static PyObject *__pyx_tuple__109;
static PyObject *__pyx_tuple__111;
static PyObject *__pyx_tuple__113;
static PyObject *__pyx_tuple__115;
static PyObject *__pyx_tuple__117;
static PyObject *__pyx_codeobj__48;
static PyObject *__pyx_codeobj__50;
static PyObject *__pyx_codeobj__53;
static PyObject *__pyx_codeobj__55;
static PyObject *__pyx_codeobj__57;
static PyObject *__pyx_codeobj__59;
static PyObject *__pyx_codeobj__61;
static PyObject *__pyx_codeobj__63;
static PyObject *__pyx_codeobj__65;
static PyObject *__pyx_codeobj__67;
static PyObject *__pyx_codeobj__69;
static PyObject *__pyx_codeobj__71;
static PyObject *__pyx_codeobj__73;
static PyObject *__pyx_codeobj__75;
static PyObject *__pyx_codeobj__77;
static PyObject *__pyx_codeobj__80;
static PyObject *__pyx_codeobj__83;
static PyObject *__pyx_codeobj__85;
static PyObject *__pyx_codeobj__87;
static PyObject *__pyx_codeobj__89;
static PyObject *__pyx_codeobj__91;
static PyObject *__pyx_codeobj__93;
static PyObject *__pyx_codeobj__95;
static PyObject *__pyx_codeobj__97;
static PyObject *__pyx_codeobj__99;
static PyObject *__pyx_codeobj__101;
static PyObject *__pyx_codeobj__103;
static PyObject *__pyx_codeobj__105;
static PyObject *__pyx_codeobj__108;
static PyObject *__pyx_codeobj__110;
static PyObject *__pyx_codeobj__112;
static PyObject *__pyx_codeobj__114;
static PyObject *__pyx_codeobj__116;
/* Late includes */

/* "main.pyx":6
 * cdef public class PyCCObject [object _CCObject, type __CCObject]:
 *     cdef CCObject* inst
 *     cdef CCObject* ob_inst(self):             # <<<<<<<<<<<<<<
 *         return self.inst
 * 
 */

static CCObject *__pyx_f_4main_10PyCCObject_ob_inst(struct _CCObject *__pyx_v_self) {
  CCObject *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ob_inst", 0);

  /* "main.pyx":7
 *     cdef CCObject* inst
 *     cdef CCObject* ob_inst(self):
 *         return self.inst             # <<<<<<<<<<<<<<
 * 
 *     cdef fromPtr(self, CCObject* usable):
 */
  __pyx_r = __pyx_v_self->inst;
  goto __pyx_L0;

  /* "main.pyx":6
 * cdef public class PyCCObject [object _CCObject, type __CCObject]:
 *     cdef CCObject* inst
 *     cdef CCObject* ob_inst(self):             # <<<<<<<<<<<<<<
 *         return self.inst
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "main.pyx":9
 *         return self.inst
 * 
 *     cdef fromPtr(self, CCObject* usable):             # <<<<<<<<<<<<<<
 *         usable.retain()
 *         self.inst = usable
 */

static PyObject *__pyx_f_4main_10PyCCObject_fromPtr(struct _CCObject *__pyx_v_self, CCObject *__pyx_v_usable) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromPtr", 0);

  /* "main.pyx":10
 * 
 *     cdef fromPtr(self, CCObject* usable):
 *         usable.retain()             # <<<<<<<<<<<<<<
 *         self.inst = usable
 *         return self
 */
  __pyx_v_usable->retain();

  /* "main.pyx":11
 *     cdef fromPtr(self, CCObject* usable):
 *         usable.retain()
 *         self.inst = usable             # <<<<<<<<<<<<<<
 *         return self
 *     def __del__(self):
 */
  __pyx_v_self->inst = __pyx_v_usable;

  /* "main.pyx":12
 *         usable.retain()
 *         self.inst = usable
 *         return self             # <<<<<<<<<<<<<<
 *     def __del__(self):
 *         self.inst.release()
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "main.pyx":9
 *         return self.inst
 * 
 *     cdef fromPtr(self, CCObject* usable):             # <<<<<<<<<<<<<<
 *         usable.retain()
 *         self.inst = usable
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "main.pyx":13
 *         self.inst = usable
 *         return self
 *     def __del__(self):             # <<<<<<<<<<<<<<
 *         self.inst.release()
 *     @property
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_10PyCCObject_1__del__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4main_10PyCCObject_1__del__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_10PyCCObject___del__(((struct _CCObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_10PyCCObject___del__(struct _CCObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);

  /* "main.pyx":14
 *         return self
 *     def __del__(self):
 *         self.inst.release()             # <<<<<<<<<<<<<<
 *     @property
 *     def typeinfo(self):
 */
  __pyx_v_self->inst->release();

  /* "main.pyx":13
 *         self.inst = usable
 *         return self
 *     def __del__(self):             # <<<<<<<<<<<<<<
 *         self.inst.release()
 *     @property
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "main.pyx":16
 *         self.inst.release()
 *     @property
 *     def typeinfo(self):             # <<<<<<<<<<<<<<
 *         return getNode(self.inst).decode()
 *     def reinterpret_cast(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_10PyCCObject_8typeinfo_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4main_10PyCCObject_8typeinfo_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_10PyCCObject_8typeinfo___get__(((struct _CCObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_10PyCCObject_8typeinfo___get__(struct _CCObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "main.pyx":17
 *     @property
 *     def typeinfo(self):
 *         return getNode(self.inst).decode()             # <<<<<<<<<<<<<<
 *     def reinterpret_cast(self):
 *         ti = self.typeinfo
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = getNode(__pyx_v_self->inst);
  __pyx_t_2 = __Pyx_decode_c_string(__pyx_t_1, 0, strlen(__pyx_t_1), NULL, NULL, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "main.pyx":16
 *         self.inst.release()
 *     @property
 *     def typeinfo(self):             # <<<<<<<<<<<<<<
 *         return getNode(self.inst).decode()
 *     def reinterpret_cast(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("main.PyCCObject.typeinfo.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "main.pyx":18
 *     def typeinfo(self):
 *         return getNode(self.inst).decode()
 *     def reinterpret_cast(self):             # <<<<<<<<<<<<<<
 *         ti = self.typeinfo
 *         if ti == "cocos2d::CCArray":
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_10PyCCObject_3reinterpret_cast(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4main_10PyCCObject_3reinterpret_cast(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reinterpret_cast (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_10PyCCObject_2reinterpret_cast(((struct _CCObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_10PyCCObject_2reinterpret_cast(struct _CCObject *__pyx_v_self) {
  PyObject *__pyx_v_ti = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("reinterpret_cast", 0);

  /* "main.pyx":19
 *         return getNode(self.inst).decode()
 *     def reinterpret_cast(self):
 *         ti = self.typeinfo             # <<<<<<<<<<<<<<
 *         if ti == "cocos2d::CCArray":
 *             return PyCCArray().fromPtr(self.inst)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_typeinfo); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_ti = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "main.pyx":20
 *     def reinterpret_cast(self):
 *         ti = self.typeinfo
 *         if ti == "cocos2d::CCArray":             # <<<<<<<<<<<<<<
 *             return PyCCArray().fromPtr(self.inst)
 *         elif ti in ("GameObject", "EffectGameObject", "LabelGameObject", "RingObject", "AnimatedGameObject", "TeleportPortalObject"):
 */
  __pyx_t_2 = (__Pyx_PyUnicode_Equals(__pyx_v_ti, __pyx_kp_u_cocos2d_CCArray, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(1, 20, __pyx_L1_error)
  if (__pyx_t_2) {

    /* "main.pyx":21
 *         ti = self.typeinfo
 *         if ti == "cocos2d::CCArray":
 *             return PyCCArray().fromPtr(self.inst)             # <<<<<<<<<<<<<<
 *         elif ti in ("GameObject", "EffectGameObject", "LabelGameObject", "RingObject", "AnimatedGameObject", "TeleportPortalObject"):
 *             return PyGameObject().fromPtr(self.inst)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_4main_PyCCArray)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 21, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = ((struct __pyx_vtabstruct_4main_PyCCArray *)((struct _CCArray *)__pyx_t_1)->__pyx_base.__pyx_vtab)->__pyx_base.fromPtr(((struct _CCObject *)__pyx_t_1), __pyx_v_self->inst); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 21, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "main.pyx":20
 *     def reinterpret_cast(self):
 *         ti = self.typeinfo
 *         if ti == "cocos2d::CCArray":             # <<<<<<<<<<<<<<
 *             return PyCCArray().fromPtr(self.inst)
 *         elif ti in ("GameObject", "EffectGameObject", "LabelGameObject", "RingObject", "AnimatedGameObject", "TeleportPortalObject"):
 */
  }

  /* "main.pyx":22
 *         if ti == "cocos2d::CCArray":
 *             return PyCCArray().fromPtr(self.inst)
 *         elif ti in ("GameObject", "EffectGameObject", "LabelGameObject", "RingObject", "AnimatedGameObject", "TeleportPortalObject"):             # <<<<<<<<<<<<<<
 *             return PyGameObject().fromPtr(self.inst)
 *         else:
 */
  __Pyx_INCREF(__pyx_v_ti);
  __pyx_t_3 = __pyx_v_ti;
  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_t_3, __pyx_n_u_GameObject, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(1, 22, __pyx_L1_error)
  if (!__pyx_t_4) {
  } else {
    __pyx_t_2 = __pyx_t_4;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_t_3, __pyx_n_u_EffectGameObject, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(1, 22, __pyx_L1_error)
  if (!__pyx_t_4) {
  } else {
    __pyx_t_2 = __pyx_t_4;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_t_3, __pyx_n_u_LabelGameObject, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(1, 22, __pyx_L1_error)
  if (!__pyx_t_4) {
  } else {
    __pyx_t_2 = __pyx_t_4;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_t_3, __pyx_n_u_RingObject, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(1, 22, __pyx_L1_error)
  if (!__pyx_t_4) {
  } else {
    __pyx_t_2 = __pyx_t_4;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_t_3, __pyx_n_u_AnimatedGameObject, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(1, 22, __pyx_L1_error)
  if (!__pyx_t_4) {
  } else {
    __pyx_t_2 = __pyx_t_4;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_t_3, __pyx_n_u_TeleportPortalObject, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(1, 22, __pyx_L1_error)
  __pyx_t_2 = __pyx_t_4;
  __pyx_L4_bool_binop_done:;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = (__pyx_t_2 != 0);
  if (__pyx_t_4) {

    /* "main.pyx":23
 *             return PyCCArray().fromPtr(self.inst)
 *         elif ti in ("GameObject", "EffectGameObject", "LabelGameObject", "RingObject", "AnimatedGameObject", "TeleportPortalObject"):
 *             return PyGameObject().fromPtr(self.inst)             # <<<<<<<<<<<<<<
 *         else:
 *             print(ti)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_4main_PyGameObject)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 23, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = ((struct __pyx_vtabstruct_4main_PyGameObject *)((struct PyGameOb *)__pyx_t_3)->__pyx_base.__pyx_vtab)->__pyx_base.fromPtr(((struct _CCObject *)__pyx_t_3), __pyx_v_self->inst); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 23, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "main.pyx":22
 *         if ti == "cocos2d::CCArray":
 *             return PyCCArray().fromPtr(self.inst)
 *         elif ti in ("GameObject", "EffectGameObject", "LabelGameObject", "RingObject", "AnimatedGameObject", "TeleportPortalObject"):             # <<<<<<<<<<<<<<
 *             return PyGameObject().fromPtr(self.inst)
 *         else:
 */
  }

  /* "main.pyx":25
 *             return PyGameObject().fromPtr(self.inst)
 *         else:
 *             print(ti)             # <<<<<<<<<<<<<<
 *             return self
 * 
 */
  /*else*/ {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_v_ti); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 25, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "main.pyx":26
 *         else:
 *             print(ti)
 *             return self             # <<<<<<<<<<<<<<
 * 
 * def thread_sync(func):
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    __pyx_r = ((PyObject *)__pyx_v_self);
    goto __pyx_L0;
  }

  /* "main.pyx":18
 *     def typeinfo(self):
 *         return getNode(self.inst).decode()
 *     def reinterpret_cast(self):             # <<<<<<<<<<<<<<
 *         ti = self.typeinfo
 *         if ti == "cocos2d::CCArray":
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("main.PyCCObject.reinterpret_cast", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ti);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_10PyCCObject_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4main_10PyCCObject_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_10PyCCObject_4__reduce_cython__(((struct _CCObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_10PyCCObject_4__reduce_cython__(CYTHON_UNUSED struct _CCObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("main.PyCCObject.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_10PyCCObject_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_4main_10PyCCObject_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_10PyCCObject_6__setstate_cython__(((struct _CCObject *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_10PyCCObject_6__setstate_cython__(CYTHON_UNUSED struct _CCObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("main.PyCCObject.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "main.pyx":28
 *             return self
 * 
 * def thread_sync(func):             # <<<<<<<<<<<<<<
 *     def k(*args, **kwargs):
 *         if (onMainThread()):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_1thread_sync(PyObject *__pyx_self, PyObject *__pyx_v_func); /*proto*/
static PyMethodDef __pyx_mdef_4main_1thread_sync = {"thread_sync", (PyCFunction)__pyx_pw_4main_1thread_sync, METH_O, 0};
static PyObject *__pyx_pw_4main_1thread_sync(PyObject *__pyx_self, PyObject *__pyx_v_func) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("thread_sync (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_thread_sync(__pyx_self, ((PyObject *)__pyx_v_func));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "main.pyx":29
 * 
 * def thread_sync(func):
 *     def k(*args, **kwargs):             # <<<<<<<<<<<<<<
 *         if (onMainThread()):
 *             return func(*args, **kwargs)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_11thread_sync_1k(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_4main_11thread_sync_1k = {"k", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_11thread_sync_1k, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_4main_11thread_sync_1k(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("k (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "k", 1))) return NULL;
  __pyx_v_kwargs = (__pyx_kwds) ? PyDict_Copy(__pyx_kwds) : PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return NULL;
  __Pyx_GOTREF(__pyx_v_kwargs);
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_4main_11thread_sync_k(__pyx_self, __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "main.pyx":34
 *         future = []
 *         err = 0
 *         def why():             # <<<<<<<<<<<<<<
 *             try:
 *                 a = func(*args, **kwargs)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_11thread_sync_1k_1why(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_4main_11thread_sync_1k_1why = {"why", (PyCFunction)__pyx_pw_4main_11thread_sync_1k_1why, METH_NOARGS, 0};
static PyObject *__pyx_pw_4main_11thread_sync_1k_1why(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("why (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_11thread_sync_1k_why(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_11thread_sync_1k_why(PyObject *__pyx_self) {
  struct __pyx_obj_4main___pyx_scope_struct_1_k *__pyx_cur_scope;
  struct __pyx_obj_4main___pyx_scope_struct_1_k *__pyx_outer_scope;
  PyObject *__pyx_v_a = NULL;
  CYTHON_UNUSED long __pyx_v_err;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("why", 0);
  __pyx_outer_scope = (struct __pyx_obj_4main___pyx_scope_struct_1_k *) __Pyx_CyFunction_GetClosure(__pyx_self);
  __pyx_cur_scope = __pyx_outer_scope;

  /* "main.pyx":35
 *         err = 0
 *         def why():
 *             try:             # <<<<<<<<<<<<<<
 *                 a = func(*args, **kwargs)
 *             except:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "main.pyx":36
 *         def why():
 *             try:
 *                 a = func(*args, **kwargs)             # <<<<<<<<<<<<<<
 *             except:
 *                 err=1
 */
      if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_func)) { __Pyx_RaiseClosureNameError("func"); __PYX_ERR(1, 36, __pyx_L3_error) }
      if (unlikely(!__pyx_cur_scope->__pyx_v_args)) { __Pyx_RaiseClosureNameError("args"); __PYX_ERR(1, 36, __pyx_L3_error) }
      if (unlikely(__pyx_cur_scope->__pyx_v_args == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
        __PYX_ERR(1, 36, __pyx_L3_error)
      }
      if (unlikely(!__pyx_cur_scope->__pyx_v_kwargs)) { __Pyx_RaiseClosureNameError("kwargs"); __PYX_ERR(1, 36, __pyx_L3_error) }
      if (unlikely(__pyx_cur_scope->__pyx_v_kwargs == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "argument after ** must be a mapping, not NoneType");
        __PYX_ERR(1, 36, __pyx_L3_error)
      }
      __pyx_t_4 = PyDict_Copy(__pyx_cur_scope->__pyx_v_kwargs); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 36, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_func, __pyx_cur_scope->__pyx_v_args, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 36, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_v_a = __pyx_t_5;
      __pyx_t_5 = 0;

      /* "main.pyx":35
 *         err = 0
 *         def why():
 *             try:             # <<<<<<<<<<<<<<
 *                 a = func(*args, **kwargs)
 *             except:
 */
    }

    /* "main.pyx":40
 *                 err=1
 *             else:
 *                 future.append(a)             # <<<<<<<<<<<<<<
 *         mainThread(why)
 *         while len(future)==0:
 */
    /*else:*/ {
      if (unlikely(!__pyx_cur_scope->__pyx_v_future)) { __Pyx_RaiseClosureNameError("future"); __PYX_ERR(1, 40, __pyx_L5_except_error) }
      if (unlikely(__pyx_cur_scope->__pyx_v_future == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
        __PYX_ERR(1, 40, __pyx_L5_except_error)
      }
      __pyx_t_6 = __Pyx_PyList_Append(__pyx_cur_scope->__pyx_v_future, __pyx_v_a); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(1, 40, __pyx_L5_except_error)
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "main.pyx":37
 *             try:
 *                 a = func(*args, **kwargs)
 *             except:             # <<<<<<<<<<<<<<
 *                 err=1
 *             else:
 */
    /*except:*/ {
      __Pyx_AddTraceback("main.thread_sync.k.why", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_4, &__pyx_t_7) < 0) __PYX_ERR(1, 37, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_7);

      /* "main.pyx":38
 *                 a = func(*args, **kwargs)
 *             except:
 *                 err=1             # <<<<<<<<<<<<<<
 *             else:
 *                 future.append(a)
 */
      __pyx_v_err = 1;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L4_exception_handled;
    }
    __pyx_L5_except_error:;

    /* "main.pyx":35
 *         err = 0
 *         def why():
 *             try:             # <<<<<<<<<<<<<<
 *                 a = func(*args, **kwargs)
 *             except:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L8_try_end:;
  }

  /* "main.pyx":34
 *         future = []
 *         err = 0
 *         def why():             # <<<<<<<<<<<<<<
 *             try:
 *                 a = func(*args, **kwargs)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("main.thread_sync.k.why", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_a);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "main.pyx":29
 * 
 * def thread_sync(func):
 *     def k(*args, **kwargs):             # <<<<<<<<<<<<<<
 *         if (onMainThread()):
 *             return func(*args, **kwargs)
 */

static PyObject *__pyx_pf_4main_11thread_sync_k(PyObject *__pyx_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs) {
  struct __pyx_obj_4main___pyx_scope_struct_1_k *__pyx_cur_scope;
  long __pyx_v_err;
  PyObject *__pyx_v_why = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("k", 0);
  __pyx_cur_scope = (struct __pyx_obj_4main___pyx_scope_struct_1_k *)__pyx_tp_new_4main___pyx_scope_struct_1_k(__pyx_ptype_4main___pyx_scope_struct_1_k, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_4main___pyx_scope_struct_1_k *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(1, 29, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_outer_scope = (struct __pyx_obj_4main___pyx_scope_struct__thread_sync *) __Pyx_CyFunction_GetClosure(__pyx_self);
  __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_outer_scope));
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_outer_scope);
  __pyx_cur_scope->__pyx_v_args = __pyx_v_args;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_args);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_args);
  __pyx_cur_scope->__pyx_v_kwargs = __pyx_v_kwargs;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_kwargs);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_kwargs);

  /* "main.pyx":30
 * def thread_sync(func):
 *     def k(*args, **kwargs):
 *         if (onMainThread()):             # <<<<<<<<<<<<<<
 *             return func(*args, **kwargs)
 *         future = []
 */
  __pyx_t_1 = (onMainThread() != 0);
  if (__pyx_t_1) {

    /* "main.pyx":31
 *     def k(*args, **kwargs):
 *         if (onMainThread()):
 *             return func(*args, **kwargs)             # <<<<<<<<<<<<<<
 *         future = []
 *         err = 0
 */
    __Pyx_XDECREF(__pyx_r);
    if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_func)) { __Pyx_RaiseClosureNameError("func"); __PYX_ERR(1, 31, __pyx_L1_error) }
    __pyx_t_2 = PyDict_Copy(__pyx_cur_scope->__pyx_v_kwargs); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 31, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_func, __pyx_cur_scope->__pyx_v_args, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 31, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "main.pyx":30
 * def thread_sync(func):
 *     def k(*args, **kwargs):
 *         if (onMainThread()):             # <<<<<<<<<<<<<<
 *             return func(*args, **kwargs)
 *         future = []
 */
  }

  /* "main.pyx":32
 *         if (onMainThread()):
 *             return func(*args, **kwargs)
 *         future = []             # <<<<<<<<<<<<<<
 *         err = 0
 *         def why():
 */
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_cur_scope->__pyx_v_future = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "main.pyx":33
 *             return func(*args, **kwargs)
 *         future = []
 *         err = 0             # <<<<<<<<<<<<<<
 *         def why():
 *             try:
 */
  __pyx_v_err = 0;

  /* "main.pyx":34
 *         future = []
 *         err = 0
 *         def why():             # <<<<<<<<<<<<<<
 *             try:
 *                 a = func(*args, **kwargs)
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_4main_11thread_sync_1k_1why, 0, __pyx_n_s_thread_sync_locals_k_locals_why, ((PyObject*)__pyx_cur_scope), __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__4)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_why = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "main.pyx":41
 *             else:
 *                 future.append(a)
 *         mainThread(why)             # <<<<<<<<<<<<<<
 *         while len(future)==0:
 *             if err==1:
 */
  __pyx_t_3 = __pyx_f_4base_mainThread(__pyx_v_why); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 41, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "main.pyx":42
 *                 future.append(a)
 *         mainThread(why)
 *         while len(future)==0:             # <<<<<<<<<<<<<<
 *             if err==1:
 *                 raise RuntimeError("Function failed")
 */
  while (1) {
    __pyx_t_3 = __pyx_cur_scope->__pyx_v_future;
    __Pyx_INCREF(__pyx_t_3);
    if (unlikely(__pyx_t_3 == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
      __PYX_ERR(1, 42, __pyx_L1_error)
    }
    __pyx_t_4 = PyList_GET_SIZE(__pyx_t_3); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(1, 42, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_1 = ((__pyx_t_4 == 0) != 0);
    if (!__pyx_t_1) break;

    /* "main.pyx":43
 *         mainThread(why)
 *         while len(future)==0:
 *             if err==1:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError("Function failed")
 *             continue
 */
    __pyx_t_1 = ((__pyx_v_err == 1) != 0);
    if (unlikely(__pyx_t_1)) {

      /* "main.pyx":44
 *         while len(future)==0:
 *             if err==1:
 *                 raise RuntimeError("Function failed")             # <<<<<<<<<<<<<<
 *             continue
 *         return future[0]
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 44, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(1, 44, __pyx_L1_error)

      /* "main.pyx":43
 *         mainThread(why)
 *         while len(future)==0:
 *             if err==1:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError("Function failed")
 *             continue
 */
    }

    /* "main.pyx":45
 *             if err==1:
 *                 raise RuntimeError("Function failed")
 *             continue             # <<<<<<<<<<<<<<
 *         return future[0]
 *     return k
 */
    goto __pyx_L4_continue;
    __pyx_L4_continue:;
  }

  /* "main.pyx":46
 *                 raise RuntimeError("Function failed")
 *             continue
 *         return future[0]             # <<<<<<<<<<<<<<
 *     return k
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_GetItemInt_List(__pyx_cur_scope->__pyx_v_future, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "main.pyx":29
 * 
 * def thread_sync(func):
 *     def k(*args, **kwargs):             # <<<<<<<<<<<<<<
 *         if (onMainThread()):
 *             return func(*args, **kwargs)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("main.thread_sync.k", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_why);
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "main.pyx":28
 *             return self
 * 
 * def thread_sync(func):             # <<<<<<<<<<<<<<
 *     def k(*args, **kwargs):
 *         if (onMainThread()):
 */

static PyObject *__pyx_pf_4main_thread_sync(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_func) {
  struct __pyx_obj_4main___pyx_scope_struct__thread_sync *__pyx_cur_scope;
  PyObject *__pyx_v_k = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("thread_sync", 0);
  __pyx_cur_scope = (struct __pyx_obj_4main___pyx_scope_struct__thread_sync *)__pyx_tp_new_4main___pyx_scope_struct__thread_sync(__pyx_ptype_4main___pyx_scope_struct__thread_sync, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_4main___pyx_scope_struct__thread_sync *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(1, 28, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_func = __pyx_v_func;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_func);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_func);

  /* "main.pyx":29
 * 
 * def thread_sync(func):
 *     def k(*args, **kwargs):             # <<<<<<<<<<<<<<
 *         if (onMainThread()):
 *             return func(*args, **kwargs)
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_4main_11thread_sync_1k, 0, __pyx_n_s_thread_sync_locals_k, ((PyObject*)__pyx_cur_scope), __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__7)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_k = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "main.pyx":47
 *             continue
 *         return future[0]
 *     return k             # <<<<<<<<<<<<<<
 * 
 * def thread_async(func):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_k);
  __pyx_r = __pyx_v_k;
  goto __pyx_L0;

  /* "main.pyx":28
 *             return self
 * 
 * def thread_sync(func):             # <<<<<<<<<<<<<<
 *     def k(*args, **kwargs):
 *         if (onMainThread()):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("main.thread_sync", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_k);
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "main.pyx":49
 *     return k
 * 
 * def thread_async(func):             # <<<<<<<<<<<<<<
 *     def k(*args, **kwargs):
 *         if (onMainThread()):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_3thread_async(PyObject *__pyx_self, PyObject *__pyx_v_func); /*proto*/
static PyMethodDef __pyx_mdef_4main_3thread_async = {"thread_async", (PyCFunction)__pyx_pw_4main_3thread_async, METH_O, 0};
static PyObject *__pyx_pw_4main_3thread_async(PyObject *__pyx_self, PyObject *__pyx_v_func) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("thread_async (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_2thread_async(__pyx_self, ((PyObject *)__pyx_v_func));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "main.pyx":50
 * 
 * def thread_async(func):
 *     def k(*args, **kwargs):             # <<<<<<<<<<<<<<
 *         if (onMainThread()):
 *             return func(*args, **kwargs)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12thread_async_1k(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_4main_12thread_async_1k = {"k", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_12thread_async_1k, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_4main_12thread_async_1k(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("k (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "k", 1))) return NULL;
  __pyx_v_kwargs = (__pyx_kwds) ? PyDict_Copy(__pyx_kwds) : PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return NULL;
  __Pyx_GOTREF(__pyx_v_kwargs);
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_4main_12thread_async_k(__pyx_self, __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "main.pyx":53
 *         if (onMainThread()):
 *             return func(*args, **kwargs)
 *         mainThread(lambda: func(*args, **kwargs))             # <<<<<<<<<<<<<<
 *     return k
 * include "GDArray.pyx"
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12thread_async_1k_lambda(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_4main_12thread_async_1k_lambda = {"lambda", (PyCFunction)__pyx_pw_4main_12thread_async_1k_lambda, METH_NOARGS, 0};
static PyObject *__pyx_pw_4main_12thread_async_1k_lambda(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("lambda (wrapper)", 0);
  __pyx_r = __pyx_lambda_funcdef_lambda(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_lambda_funcdef_lambda(PyObject *__pyx_self) {
  struct __pyx_obj_4main___pyx_scope_struct_3_k *__pyx_cur_scope;
  struct __pyx_obj_4main___pyx_scope_struct_3_k *__pyx_outer_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("lambda", 0);
  __pyx_outer_scope = (struct __pyx_obj_4main___pyx_scope_struct_3_k *) __Pyx_CyFunction_GetClosure(__pyx_self);
  __pyx_cur_scope = __pyx_outer_scope;
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_func)) { __Pyx_RaiseClosureNameError("func"); __PYX_ERR(1, 53, __pyx_L1_error) }
  if (unlikely(!__pyx_cur_scope->__pyx_v_args)) { __Pyx_RaiseClosureNameError("args"); __PYX_ERR(1, 53, __pyx_L1_error) }
  if (unlikely(__pyx_cur_scope->__pyx_v_args == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(1, 53, __pyx_L1_error)
  }
  if (unlikely(!__pyx_cur_scope->__pyx_v_kwargs)) { __Pyx_RaiseClosureNameError("kwargs"); __PYX_ERR(1, 53, __pyx_L1_error) }
  if (unlikely(__pyx_cur_scope->__pyx_v_kwargs == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "argument after ** must be a mapping, not NoneType");
    __PYX_ERR(1, 53, __pyx_L1_error)
  }
  __pyx_t_1 = PyDict_Copy(__pyx_cur_scope->__pyx_v_kwargs); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_func, __pyx_cur_scope->__pyx_v_args, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("main.thread_async.k.lambda", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "main.pyx":50
 * 
 * def thread_async(func):
 *     def k(*args, **kwargs):             # <<<<<<<<<<<<<<
 *         if (onMainThread()):
 *             return func(*args, **kwargs)
 */

static PyObject *__pyx_pf_4main_12thread_async_k(PyObject *__pyx_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs) {
  struct __pyx_obj_4main___pyx_scope_struct_3_k *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("k", 0);
  __pyx_cur_scope = (struct __pyx_obj_4main___pyx_scope_struct_3_k *)__pyx_tp_new_4main___pyx_scope_struct_3_k(__pyx_ptype_4main___pyx_scope_struct_3_k, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_4main___pyx_scope_struct_3_k *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(1, 50, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_outer_scope = (struct __pyx_obj_4main___pyx_scope_struct_2_thread_async *) __Pyx_CyFunction_GetClosure(__pyx_self);
  __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_outer_scope));
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_outer_scope);
  __pyx_cur_scope->__pyx_v_args = __pyx_v_args;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_args);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_args);
  __pyx_cur_scope->__pyx_v_kwargs = __pyx_v_kwargs;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_kwargs);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_kwargs);

  /* "main.pyx":51
 * def thread_async(func):
 *     def k(*args, **kwargs):
 *         if (onMainThread()):             # <<<<<<<<<<<<<<
 *             return func(*args, **kwargs)
 *         mainThread(lambda: func(*args, **kwargs))
 */
  __pyx_t_1 = (onMainThread() != 0);
  if (__pyx_t_1) {

    /* "main.pyx":52
 *     def k(*args, **kwargs):
 *         if (onMainThread()):
 *             return func(*args, **kwargs)             # <<<<<<<<<<<<<<
 *         mainThread(lambda: func(*args, **kwargs))
 *     return k
 */
    __Pyx_XDECREF(__pyx_r);
    if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_func)) { __Pyx_RaiseClosureNameError("func"); __PYX_ERR(1, 52, __pyx_L1_error) }
    __pyx_t_2 = PyDict_Copy(__pyx_cur_scope->__pyx_v_kwargs); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 52, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_func, __pyx_cur_scope->__pyx_v_args, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 52, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "main.pyx":51
 * def thread_async(func):
 *     def k(*args, **kwargs):
 *         if (onMainThread()):             # <<<<<<<<<<<<<<
 *             return func(*args, **kwargs)
 *         mainThread(lambda: func(*args, **kwargs))
 */
  }

  /* "main.pyx":53
 *         if (onMainThread()):
 *             return func(*args, **kwargs)
 *         mainThread(lambda: func(*args, **kwargs))             # <<<<<<<<<<<<<<
 *     return k
 * include "GDArray.pyx"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_4main_12thread_async_1k_lambda, 0, __pyx_n_s_thread_async_locals_k_locals_lam, ((PyObject*)__pyx_cur_scope), __pyx_n_s_main, __pyx_d, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __pyx_f_4base_mainThread(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "main.pyx":50
 * 
 * def thread_async(func):
 *     def k(*args, **kwargs):             # <<<<<<<<<<<<<<
 *         if (onMainThread()):
 *             return func(*args, **kwargs)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("main.thread_async.k", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "main.pyx":49
 *     return k
 * 
 * def thread_async(func):             # <<<<<<<<<<<<<<
 *     def k(*args, **kwargs):
 *         if (onMainThread()):
 */

static PyObject *__pyx_pf_4main_2thread_async(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_func) {
  struct __pyx_obj_4main___pyx_scope_struct_2_thread_async *__pyx_cur_scope;
  PyObject *__pyx_v_k = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("thread_async", 0);
  __pyx_cur_scope = (struct __pyx_obj_4main___pyx_scope_struct_2_thread_async *)__pyx_tp_new_4main___pyx_scope_struct_2_thread_async(__pyx_ptype_4main___pyx_scope_struct_2_thread_async, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_4main___pyx_scope_struct_2_thread_async *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(1, 49, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_func = __pyx_v_func;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_func);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_func);

  /* "main.pyx":50
 * 
 * def thread_async(func):
 *     def k(*args, **kwargs):             # <<<<<<<<<<<<<<
 *         if (onMainThread()):
 *             return func(*args, **kwargs)
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_4main_12thread_async_1k, 0, __pyx_n_s_thread_async_locals_k, ((PyObject*)__pyx_cur_scope), __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__9)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 50, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_k = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "main.pyx":54
 *             return func(*args, **kwargs)
 *         mainThread(lambda: func(*args, **kwargs))
 *     return k             # <<<<<<<<<<<<<<
 * include "GDArray.pyx"
 * include "EditorUI.pyx"
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_k);
  __pyx_r = __pyx_v_k;
  goto __pyx_L0;

  /* "main.pyx":49
 *     return k
 * 
 * def thread_async(func):             # <<<<<<<<<<<<<<
 *     def k(*args, **kwargs):
 *         if (onMainThread()):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("main.thread_async", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_k);
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GDArray.pyx":6
 * cdef public class PyCCArray(PyCCObject) [object _CCArray, type __CCArray]:
 * 
 *     cdef CCArray* arr_inst(self):             # <<<<<<<<<<<<<<
 *         if  <long>self.inst == 0L:
 *             raise ValueError("Array got deallocated")
 */

static CCArray *__pyx_f_4main_9PyCCArray_arr_inst(struct _CCArray *__pyx_v_self) {
  CCArray *__pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("arr_inst", 0);

  /* "../../pyedit_engine/cy/GDArray.pyx":7
 * 
 *     cdef CCArray* arr_inst(self):
 *         if  <long>self.inst == 0L:             # <<<<<<<<<<<<<<
 *             raise ValueError("Array got deallocated")
 *         return <CCArray*>self.inst
 */
  __pyx_t_1 = ((((long)__pyx_v_self->__pyx_base.inst) == 0L) != 0);
  if (unlikely(__pyx_t_1)) {

    /* "../../pyedit_engine/cy/GDArray.pyx":8
 *     cdef CCArray* arr_inst(self):
 *         if  <long>self.inst == 0L:
 *             raise ValueError("Array got deallocated")             # <<<<<<<<<<<<<<
 *         return <CCArray*>self.inst
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(3, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(3, 8, __pyx_L1_error)

    /* "../../pyedit_engine/cy/GDArray.pyx":7
 * 
 *     cdef CCArray* arr_inst(self):
 *         if  <long>self.inst == 0L:             # <<<<<<<<<<<<<<
 *             raise ValueError("Array got deallocated")
 *         return <CCArray*>self.inst
 */
  }

  /* "../../pyedit_engine/cy/GDArray.pyx":9
 *         if  <long>self.inst == 0L:
 *             raise ValueError("Array got deallocated")
 *         return <CCArray*>self.inst             # <<<<<<<<<<<<<<
 * 
 *     @thread_sync
 */
  __pyx_r = ((CCArray *)__pyx_v_self->__pyx_base.inst);
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/GDArray.pyx":6
 * cdef public class PyCCArray(PyCCObject) [object _CCArray, type __CCArray]:
 * 
 *     cdef CCArray* arr_inst(self):             # <<<<<<<<<<<<<<
 *         if  <long>self.inst == 0L:
 *             raise ValueError("Array got deallocated")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_WriteUnraisable("main.PyCCArray.arr_inst", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GDArray.pyx":12
 * 
 *     @thread_sync
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.arr_inst().count()
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_pw_4main_9PyCCArray_1__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pw_4main_9PyCCArray_1__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_9PyCCArray___len__(((struct _CCArray *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_pf_4main_9PyCCArray___len__(struct _CCArray *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "../../pyedit_engine/cy/GDArray.pyx":13
 *     @thread_sync
 *     def __len__(self):
 *         return self.arr_inst().count()             # <<<<<<<<<<<<<<
 * 
 *     @thread_sync
 */
  __pyx_r = ((struct __pyx_vtabstruct_4main_PyCCArray *)__pyx_v_self->__pyx_base.__pyx_vtab)->arr_inst(__pyx_v_self)->count();
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/GDArray.pyx":12
 * 
 *     @thread_sync
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.arr_inst().count()
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GDArray.pyx":16
 * 
 *     @thread_sync
 *     def __getitem__(self, e):             # <<<<<<<<<<<<<<
 *         if type(e) != int:
 *             raise ValueError("Invalid index")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_9PyCCArray_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_e); /*proto*/
static PyObject *__pyx_pw_4main_9PyCCArray_3__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_9PyCCArray_2__getitem__(((struct _CCArray *)__pyx_v_self), ((PyObject *)__pyx_v_e));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_9PyCCArray_2__getitem__(struct _CCArray *__pyx_v_self, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "../../pyedit_engine/cy/GDArray.pyx":17
 *     @thread_sync
 *     def __getitem__(self, e):
 *         if type(e) != int:             # <<<<<<<<<<<<<<
 *             raise ValueError("Invalid index")
 *         if e >= len(self):
 */
  __pyx_t_1 = PyObject_RichCompare(((PyObject *)Py_TYPE(__pyx_v_e)), ((PyObject *)(&PyInt_Type)), Py_NE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 17, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(3, 17, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(__pyx_t_2)) {

    /* "../../pyedit_engine/cy/GDArray.pyx":18
 *     def __getitem__(self, e):
 *         if type(e) != int:
 *             raise ValueError("Invalid index")             # <<<<<<<<<<<<<<
 *         if e >= len(self):
 *             raise IndexError("CCArray index out of range")
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 18, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(3, 18, __pyx_L1_error)

    /* "../../pyedit_engine/cy/GDArray.pyx":17
 *     @thread_sync
 *     def __getitem__(self, e):
 *         if type(e) != int:             # <<<<<<<<<<<<<<
 *             raise ValueError("Invalid index")
 *         if e >= len(self):
 */
  }

  /* "../../pyedit_engine/cy/GDArray.pyx":19
 *         if type(e) != int:
 *             raise ValueError("Invalid index")
 *         if e >= len(self):             # <<<<<<<<<<<<<<
 *             raise IndexError("CCArray index out of range")
 *         return PyCCObject().fromPtr(self.arr_inst().objectAtIndex(e)).reinterpret_cast()
 */
  __pyx_t_3 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_3 == ((Py_ssize_t)-1))) __PYX_ERR(3, 19, __pyx_L1_error)
  __pyx_t_1 = PyInt_FromSsize_t(__pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyObject_RichCompare(__pyx_v_e, __pyx_t_1, Py_GE); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(3, 19, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(3, 19, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(__pyx_t_2)) {

    /* "../../pyedit_engine/cy/GDArray.pyx":20
 *             raise ValueError("Invalid index")
 *         if e >= len(self):
 *             raise IndexError("CCArray index out of range")             # <<<<<<<<<<<<<<
 *         return PyCCObject().fromPtr(self.arr_inst().objectAtIndex(e)).reinterpret_cast()
 *     def sortBy(self, toSort):
 */
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_IndexError, __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(3, 20, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(3, 20, __pyx_L1_error)

    /* "../../pyedit_engine/cy/GDArray.pyx":19
 *         if type(e) != int:
 *             raise ValueError("Invalid index")
 *         if e >= len(self):             # <<<<<<<<<<<<<<
 *             raise IndexError("CCArray index out of range")
 *         return PyCCObject().fromPtr(self.arr_inst().objectAtIndex(e)).reinterpret_cast()
 */
  }

  /* "../../pyedit_engine/cy/GDArray.pyx":21
 *         if e >= len(self):
 *             raise IndexError("CCArray index out of range")
 *         return PyCCObject().fromPtr(self.arr_inst().objectAtIndex(e)).reinterpret_cast()             # <<<<<<<<<<<<<<
 *     def sortBy(self, toSort):
 *         return list(sorted(self, key=toSort))
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_4main_PyCCObject)); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyInt_As_unsigned_int(__pyx_v_e); if (unlikely((__pyx_t_5 == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(3, 21, __pyx_L1_error)
  __pyx_t_6 = ((struct __pyx_vtabstruct_4main_PyCCObject *)((struct _CCObject *)__pyx_t_1)->__pyx_vtab)->fromPtr(((struct _CCObject *)__pyx_t_1), ((struct __pyx_vtabstruct_4main_PyCCArray *)__pyx_v_self->__pyx_base.__pyx_vtab)->arr_inst(__pyx_v_self)->objectAtIndex(__pyx_t_5)); if (unlikely(!__pyx_t_6)) __PYX_ERR(3, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_reinterpret_cast); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_6) : __Pyx_PyObject_CallNoArg(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(3, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/GDArray.pyx":16
 * 
 *     @thread_sync
 *     def __getitem__(self, e):             # <<<<<<<<<<<<<<
 *         if type(e) != int:
 *             raise ValueError("Invalid index")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("main.PyCCArray.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GDArray.pyx":22
 *             raise IndexError("CCArray index out of range")
 *         return PyCCObject().fromPtr(self.arr_inst().objectAtIndex(e)).reinterpret_cast()
 *     def sortBy(self, toSort):             # <<<<<<<<<<<<<<
 *         return list(sorted(self, key=toSort))
 *     def collect(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_9PyCCArray_5sortBy(PyObject *__pyx_v_self, PyObject *__pyx_v_toSort); /*proto*/
static PyObject *__pyx_pw_4main_9PyCCArray_5sortBy(PyObject *__pyx_v_self, PyObject *__pyx_v_toSort) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sortBy (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_9PyCCArray_4sortBy(((struct _CCArray *)__pyx_v_self), ((PyObject *)__pyx_v_toSort));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_9PyCCArray_4sortBy(struct _CCArray *__pyx_v_self, PyObject *__pyx_v_toSort) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("sortBy", 0);

  /* "../../pyedit_engine/cy/GDArray.pyx":23
 *         return PyCCObject().fromPtr(self.arr_inst().objectAtIndex(e)).reinterpret_cast()
 *     def sortBy(self, toSort):
 *         return list(sorted(self, key=toSort))             # <<<<<<<<<<<<<<
 *     def collect(self):
 *         return [x for x in self]
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self));
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(3, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_key, __pyx_v_toSort) < 0) __PYX_ERR(3, 23, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_sorted, __pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(3, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PySequence_List(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(3, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/GDArray.pyx":22
 *             raise IndexError("CCArray index out of range")
 *         return PyCCObject().fromPtr(self.arr_inst().objectAtIndex(e)).reinterpret_cast()
 *     def sortBy(self, toSort):             # <<<<<<<<<<<<<<
 *         return list(sorted(self, key=toSort))
 *     def collect(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("main.PyCCArray.sortBy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GDArray.pyx":24
 *     def sortBy(self, toSort):
 *         return list(sorted(self, key=toSort))
 *     def collect(self):             # <<<<<<<<<<<<<<
 *         return [x for x in self]
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_9PyCCArray_7collect(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4main_9PyCCArray_7collect(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("collect (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_9PyCCArray_6collect(((struct _CCArray *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_9PyCCArray_6collect(struct _CCArray *__pyx_v_self) {
  PyObject *__pyx_7genexpr__pyx_v_x = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("collect", 0);

  /* "../../pyedit_engine/cy/GDArray.pyx":25
 *         return list(sorted(self, key=toSort))
 *     def collect(self):
 *         return [x for x in self]             # <<<<<<<<<<<<<<
 * 
 *     def init(self, stuff=[]):
 */
  __Pyx_XDECREF(__pyx_r);
  { /* enter inner scope */
    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 25, __pyx_L5_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (likely(PyList_CheckExact(((PyObject *)__pyx_v_self))) || PyTuple_CheckExact(((PyObject *)__pyx_v_self))) {
      __pyx_t_2 = ((PyObject *)__pyx_v_self); __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
      __pyx_t_4 = NULL;
    } else {
      __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_2)) __PYX_ERR(3, 25, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) __PYX_ERR(3, 25, __pyx_L5_error)
    }
    for (;;) {
      if (likely(!__pyx_t_4)) {
        if (likely(PyList_CheckExact(__pyx_t_2))) {
          if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_5 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_5); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(3, 25, __pyx_L5_error)
          #else
          __pyx_t_5 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_5)) __PYX_ERR(3, 25, __pyx_L5_error)
          __Pyx_GOTREF(__pyx_t_5);
          #endif
        } else {
          if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_5); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(3, 25, __pyx_L5_error)
          #else
          __pyx_t_5 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_5)) __PYX_ERR(3, 25, __pyx_L5_error)
          __Pyx_GOTREF(__pyx_t_5);
          #endif
        }
      } else {
        __pyx_t_5 = __pyx_t_4(__pyx_t_2);
        if (unlikely(!__pyx_t_5)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(3, 25, __pyx_L5_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_5);
      }
      __Pyx_XDECREF_SET(__pyx_7genexpr__pyx_v_x, __pyx_t_5);
      __pyx_t_5 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_7genexpr__pyx_v_x))) __PYX_ERR(3, 25, __pyx_L5_error)
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_7genexpr__pyx_v_x); __pyx_7genexpr__pyx_v_x = 0;
    goto __pyx_L8_exit_scope;
    __pyx_L5_error:;
    __Pyx_XDECREF(__pyx_7genexpr__pyx_v_x); __pyx_7genexpr__pyx_v_x = 0;
    goto __pyx_L1_error;
    __pyx_L8_exit_scope:;
  } /* exit inner scope */
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/GDArray.pyx":24
 *     def sortBy(self, toSort):
 *         return list(sorted(self, key=toSort))
 *     def collect(self):             # <<<<<<<<<<<<<<
 *         return [x for x in self]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("main.PyCCArray.collect", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_7genexpr__pyx_v_x);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GDArray.pyx":27
 *         return [x for x in self]
 * 
 *     def init(self, stuff=[]):             # <<<<<<<<<<<<<<
 *         if not issubclass(type(stuff), PyCCArray) and type(stuff) != list:
 *             raise ValueError("Input must be a list or subclass of PyCCArray")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_9PyCCArray_9init(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4main_9PyCCArray_9init(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_stuff = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_stuff,0};
    PyObject* values[1] = {0};
    values[0] = __pyx_k__13;
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_stuff);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "init") < 0)) __PYX_ERR(3, 27, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_stuff = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("init", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(3, 27, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("main.PyCCArray.init", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4main_9PyCCArray_8init(((struct _CCArray *)__pyx_v_self), __pyx_v_stuff);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_9PyCCArray_8init(struct _CCArray *__pyx_v_self, PyObject *__pyx_v_stuff) {
  CCArray *__pyx_v_ptr;
  struct _CCObject *__pyx_v_obj = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  Py_ssize_t __pyx_t_9;
  Py_UCS4 __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("init", 0);
  __Pyx_INCREF(__pyx_v_stuff);

  /* "../../pyedit_engine/cy/GDArray.pyx":28
 * 
 *     def init(self, stuff=[]):
 *         if not issubclass(type(stuff), PyCCArray) and type(stuff) != list:             # <<<<<<<<<<<<<<
 *             raise ValueError("Input must be a list or subclass of PyCCArray")
 * 
 */
  __pyx_t_2 = PyObject_IsSubclass(((PyObject *)Py_TYPE(__pyx_v_stuff)), ((PyObject *)__pyx_ptype_4main_PyCCArray)); if (unlikely(__pyx_t_2 == ((int)-1))) __PYX_ERR(3, 28, __pyx_L1_error)
  __pyx_t_3 = ((!(__pyx_t_2 != 0)) != 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_4 = PyObject_RichCompare(((PyObject *)Py_TYPE(__pyx_v_stuff)), ((PyObject *)(&PyList_Type)), Py_NE); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(3, 28, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(3, 28, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_1 = __pyx_t_3;
  __pyx_L4_bool_binop_done:;
  if (unlikely(__pyx_t_1)) {

    /* "../../pyedit_engine/cy/GDArray.pyx":29
 *     def init(self, stuff=[]):
 *         if not issubclass(type(stuff), PyCCArray) and type(stuff) != list:
 *             raise ValueError("Input must be a list or subclass of PyCCArray")             # <<<<<<<<<<<<<<
 * 
 *         if type(stuff) != list:
 */
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__14, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(3, 29, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(3, 29, __pyx_L1_error)

    /* "../../pyedit_engine/cy/GDArray.pyx":28
 * 
 *     def init(self, stuff=[]):
 *         if not issubclass(type(stuff), PyCCArray) and type(stuff) != list:             # <<<<<<<<<<<<<<
 *             raise ValueError("Input must be a list or subclass of PyCCArray")
 * 
 */
  }

  /* "../../pyedit_engine/cy/GDArray.pyx":31
 *             raise ValueError("Input must be a list or subclass of PyCCArray")
 * 
 *         if type(stuff) != list:             # <<<<<<<<<<<<<<
 *             stuff = stuff.collect()
 * 
 */
  __pyx_t_4 = PyObject_RichCompare(((PyObject *)Py_TYPE(__pyx_v_stuff)), ((PyObject *)(&PyList_Type)), Py_NE); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(3, 31, __pyx_L1_error)
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(3, 31, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__pyx_t_1) {

    /* "../../pyedit_engine/cy/GDArray.pyx":32
 * 
 *         if type(stuff) != list:
 *             stuff = stuff.collect()             # <<<<<<<<<<<<<<
 * 
 *         cdef CCArray* ptr = CCArray.create()
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_stuff, __pyx_n_s_collect); if (unlikely(!__pyx_t_5)) __PYX_ERR(3, 32, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6) : __Pyx_PyObject_CallNoArg(__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(3, 32, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF_SET(__pyx_v_stuff, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "../../pyedit_engine/cy/GDArray.pyx":31
 *             raise ValueError("Input must be a list or subclass of PyCCArray")
 * 
 *         if type(stuff) != list:             # <<<<<<<<<<<<<<
 *             stuff = stuff.collect()
 * 
 */
  }

  /* "../../pyedit_engine/cy/GDArray.pyx":34
 *             stuff = stuff.collect()
 * 
 *         cdef CCArray* ptr = CCArray.create()             # <<<<<<<<<<<<<<
 *         ptr.retain()
 * 
 */
  __pyx_v_ptr = CCArray::create();

  /* "../../pyedit_engine/cy/GDArray.pyx":35
 * 
 *         cdef CCArray* ptr = CCArray.create()
 *         ptr.retain()             # <<<<<<<<<<<<<<
 * 
 *         cdef PyCCObject obj
 */
  __pyx_v_ptr->retain();

  /* "../../pyedit_engine/cy/GDArray.pyx":38
 * 
 *         cdef PyCCObject obj
 *         for obj in stuff:             # <<<<<<<<<<<<<<
 *             if not issubclass(type(obj), PyCCObject):
 *                 raise ValueError(f"Invalid type '{obj.__class__.__name__}' for item inside list")
 */
  if (likely(PyList_CheckExact(__pyx_v_stuff)) || PyTuple_CheckExact(__pyx_v_stuff)) {
    __pyx_t_4 = __pyx_v_stuff; __Pyx_INCREF(__pyx_t_4); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_v_stuff); if (unlikely(!__pyx_t_4)) __PYX_ERR(3, 38, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_8 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_8)) __PYX_ERR(3, 38, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_8)) {
      if (likely(PyList_CheckExact(__pyx_t_4))) {
        if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_4)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_5 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_7); __Pyx_INCREF(__pyx_t_5); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(3, 38, __pyx_L1_error)
        #else
        __pyx_t_5 = PySequence_ITEM(__pyx_t_4, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_5)) __PYX_ERR(3, 38, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        #endif
      } else {
        if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_7); __Pyx_INCREF(__pyx_t_5); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(3, 38, __pyx_L1_error)
        #else
        __pyx_t_5 = PySequence_ITEM(__pyx_t_4, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_5)) __PYX_ERR(3, 38, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        #endif
      }
    } else {
      __pyx_t_5 = __pyx_t_8(__pyx_t_4);
      if (unlikely(!__pyx_t_5)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(3, 38, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_5);
    }
    if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_4main_PyCCObject))))) __PYX_ERR(3, 38, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_obj, ((struct _CCObject *)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "../../pyedit_engine/cy/GDArray.pyx":39
 *         cdef PyCCObject obj
 *         for obj in stuff:
 *             if not issubclass(type(obj), PyCCObject):             # <<<<<<<<<<<<<<
 *                 raise ValueError(f"Invalid type '{obj.__class__.__name__}' for item inside list")
 *             ptr.addObject(obj.inst)
 */
    __pyx_t_1 = PyObject_IsSubclass(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_obj))), ((PyObject *)__pyx_ptype_4main_PyCCObject)); if (unlikely(__pyx_t_1 == ((int)-1))) __PYX_ERR(3, 39, __pyx_L1_error)
    __pyx_t_3 = ((!(__pyx_t_1 != 0)) != 0);
    if (unlikely(__pyx_t_3)) {

      /* "../../pyedit_engine/cy/GDArray.pyx":40
 *         for obj in stuff:
 *             if not issubclass(type(obj), PyCCObject):
 *                 raise ValueError(f"Invalid type '{obj.__class__.__name__}' for item inside list")             # <<<<<<<<<<<<<<
 *             ptr.addObject(obj.inst)
 *         self.inst = <CCObject*>ptr
 */
      __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(3, 40, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_9 = 0;
      __pyx_t_10 = 127;
      __Pyx_INCREF(__pyx_kp_u_Invalid_type);
      __pyx_t_9 += 14;
      __Pyx_GIVEREF(__pyx_kp_u_Invalid_type);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_kp_u_Invalid_type);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_obj), __pyx_n_s_class); if (unlikely(!__pyx_t_6)) __PYX_ERR(3, 40, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_name); if (unlikely(!__pyx_t_11)) __PYX_ERR(3, 40, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_11, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(3, 40, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_10 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_10) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_10;
      __pyx_t_9 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
      __pyx_t_6 = 0;
      __Pyx_INCREF(__pyx_kp_u_for_item_inside_list);
      __pyx_t_9 += 22;
      __Pyx_GIVEREF(__pyx_kp_u_for_item_inside_list);
      PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_kp_u_for_item_inside_list);
      __pyx_t_6 = __Pyx_PyUnicode_Join(__pyx_t_5, 3, __pyx_t_9, __pyx_t_10); if (unlikely(!__pyx_t_6)) __PYX_ERR(3, 40, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(3, 40, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_Raise(__pyx_t_5, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __PYX_ERR(3, 40, __pyx_L1_error)

      /* "../../pyedit_engine/cy/GDArray.pyx":39
 *         cdef PyCCObject obj
 *         for obj in stuff:
 *             if not issubclass(type(obj), PyCCObject):             # <<<<<<<<<<<<<<
 *                 raise ValueError(f"Invalid type '{obj.__class__.__name__}' for item inside list")
 *             ptr.addObject(obj.inst)
 */
    }

    /* "../../pyedit_engine/cy/GDArray.pyx":41
 *             if not issubclass(type(obj), PyCCObject):
 *                 raise ValueError(f"Invalid type '{obj.__class__.__name__}' for item inside list")
 *             ptr.addObject(obj.inst)             # <<<<<<<<<<<<<<
 *         self.inst = <CCObject*>ptr
 *         return self
 */
    __pyx_v_ptr->addObject(__pyx_v_obj->inst);

    /* "../../pyedit_engine/cy/GDArray.pyx":38
 * 
 *         cdef PyCCObject obj
 *         for obj in stuff:             # <<<<<<<<<<<<<<
 *             if not issubclass(type(obj), PyCCObject):
 *                 raise ValueError(f"Invalid type '{obj.__class__.__name__}' for item inside list")
 */
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "../../pyedit_engine/cy/GDArray.pyx":42
 *                 raise ValueError(f"Invalid type '{obj.__class__.__name__}' for item inside list")
 *             ptr.addObject(obj.inst)
 *         self.inst = <CCObject*>ptr             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __pyx_v_self->__pyx_base.inst = ((CCObject *)__pyx_v_ptr);

  /* "../../pyedit_engine/cy/GDArray.pyx":43
 *             ptr.addObject(obj.inst)
 *         self.inst = <CCObject*>ptr
 *         return self             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/GDArray.pyx":27
 *         return [x for x in self]
 * 
 *     def init(self, stuff=[]):             # <<<<<<<<<<<<<<
 *         if not issubclass(type(stuff), PyCCArray) and type(stuff) != list:
 *             raise ValueError("Input must be a list or subclass of PyCCArray")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("main.PyCCArray.init", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_obj);
  __Pyx_XDECREF(__pyx_v_stuff);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_9PyCCArray_11__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4main_9PyCCArray_11__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_9PyCCArray_10__reduce_cython__(((struct _CCArray *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_9PyCCArray_10__reduce_cython__(CYTHON_UNUSED struct _CCArray *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__15, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("main.PyCCArray.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_9PyCCArray_13__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_4main_9PyCCArray_13__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_9PyCCArray_12__setstate_cython__(((struct _CCArray *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_9PyCCArray_12__setstate_cython__(CYTHON_UNUSED struct _CCArray *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__16, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("main.PyCCArray.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GDArray.pyx":49
 * cdef public class GameObjArray(PyCCArray) [object _GOArray, type __GOArray]:
 *     @thread_sync
 *     def __getattr__(self, attr):             # <<<<<<<<<<<<<<
 *         stuff = [getattr(self[x], attr) for x in range(len(self))]
 *         if stuff[0].__class__.__name__ != "builtin_function_or_method":
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12GameObjArray_1__getattr__(PyObject *__pyx_v_self, PyObject *__pyx_v_attr); /*proto*/
static PyObject *__pyx_pw_4main_12GameObjArray_1__getattr__(PyObject *__pyx_v_self, PyObject *__pyx_v_attr) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getattr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_12GameObjArray___getattr__(((struct _GOArray *)__pyx_v_self), ((PyObject *)__pyx_v_attr));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GDArray.pyx":54
 *             print(stuff[0])
 *             raise AttributeError(f"'GameObjArray' object has no attribute '{attr}'")
 *         return lambda *args: [s(*args) for s in stuff]             # <<<<<<<<<<<<<<
 *     def sortX(self):
 *         return sorted(self, key=lambda x: x.positionX)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12GameObjArray_11__getattr___lambda1(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_4main_12GameObjArray_11__getattr___lambda1 = {"lambda1", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_12GameObjArray_11__getattr___lambda1, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_4main_12GameObjArray_11__getattr___lambda1(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("lambda1 (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "lambda1", 0))) return NULL;
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_lambda_funcdef_lambda1(__pyx_self, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_lambda_funcdef_lambda1(PyObject *__pyx_self, PyObject *__pyx_v_args) {
  struct __pyx_obj_4main___pyx_scope_struct_4___getattr__ *__pyx_cur_scope;
  struct __pyx_obj_4main___pyx_scope_struct_4___getattr__ *__pyx_outer_scope;
  PyObject *__pyx_8genexpr2__pyx_v_s = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("lambda1", 0);
  __pyx_outer_scope = (struct __pyx_obj_4main___pyx_scope_struct_4___getattr__ *) __Pyx_CyFunction_GetClosure(__pyx_self);
  __pyx_cur_scope = __pyx_outer_scope;
  __Pyx_XDECREF(__pyx_r);
  { /* enter inner scope */
    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 54, __pyx_L5_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(!__pyx_cur_scope->__pyx_v_stuff)) { __Pyx_RaiseClosureNameError("stuff"); __PYX_ERR(3, 54, __pyx_L5_error) }
    if (unlikely(__pyx_cur_scope->__pyx_v_stuff == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
      __PYX_ERR(3, 54, __pyx_L5_error)
    }
    __pyx_t_2 = __pyx_cur_scope->__pyx_v_stuff; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
    for (;;) {
      if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_4 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_4); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(3, 54, __pyx_L5_error)
      #else
      __pyx_t_4 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_4)) __PYX_ERR(3, 54, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_4);
      #endif
      __Pyx_XDECREF_SET(__pyx_8genexpr2__pyx_v_s, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_8genexpr2__pyx_v_s, __pyx_v_args, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(3, 54, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_4))) __PYX_ERR(3, 54, __pyx_L5_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_8genexpr2__pyx_v_s); __pyx_8genexpr2__pyx_v_s = 0;
    goto __pyx_L8_exit_scope;
    __pyx_L5_error:;
    __Pyx_XDECREF(__pyx_8genexpr2__pyx_v_s); __pyx_8genexpr2__pyx_v_s = 0;
    goto __pyx_L1_error;
    __pyx_L8_exit_scope:;
  } /* exit inner scope */
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("main.GameObjArray.__getattr__.lambda1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_8genexpr2__pyx_v_s);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GDArray.pyx":49
 * cdef public class GameObjArray(PyCCArray) [object _GOArray, type __GOArray]:
 *     @thread_sync
 *     def __getattr__(self, attr):             # <<<<<<<<<<<<<<
 *         stuff = [getattr(self[x], attr) for x in range(len(self))]
 *         if stuff[0].__class__.__name__ != "builtin_function_or_method":
 */

static PyObject *__pyx_pf_4main_12GameObjArray___getattr__(struct _GOArray *__pyx_v_self, PyObject *__pyx_v_attr) {
  struct __pyx_obj_4main___pyx_scope_struct_4___getattr__ *__pyx_cur_scope;
  Py_ssize_t __pyx_8genexpr1__pyx_v_x;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  Py_UCS4 __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getattr__", 0);
  __pyx_cur_scope = (struct __pyx_obj_4main___pyx_scope_struct_4___getattr__ *)__pyx_tp_new_4main___pyx_scope_struct_4___getattr__(__pyx_ptype_4main___pyx_scope_struct_4___getattr__, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_4main___pyx_scope_struct_4___getattr__ *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(3, 49, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }

  /* "../../pyedit_engine/cy/GDArray.pyx":50
 *     @thread_sync
 *     def __getattr__(self, attr):
 *         stuff = [getattr(self[x], attr) for x in range(len(self))]             # <<<<<<<<<<<<<<
 *         if stuff[0].__class__.__name__ != "builtin_function_or_method":
 *             print(stuff[0])
 */
  { /* enter inner scope */
    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 50, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_Length(((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(3, 50, __pyx_L1_error)
    __pyx_t_3 = __pyx_t_2;
    for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
      __pyx_8genexpr1__pyx_v_x = __pyx_t_4;
      __pyx_t_5 = __Pyx_GetItemInt(((PyObject *)__pyx_v_self), __pyx_8genexpr1__pyx_v_x, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(3, 50, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_GetAttr(__pyx_t_5, __pyx_v_attr); if (unlikely(!__pyx_t_6)) __PYX_ERR(3, 50, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_6))) __PYX_ERR(3, 50, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
  } /* exit inner scope */
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_cur_scope->__pyx_v_stuff = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/GDArray.pyx":51
 *     def __getattr__(self, attr):
 *         stuff = [getattr(self[x], attr) for x in range(len(self))]
 *         if stuff[0].__class__.__name__ != "builtin_function_or_method":             # <<<<<<<<<<<<<<
 *             print(stuff[0])
 *             raise AttributeError(f"'GameObjArray' object has no attribute '{attr}'")
 */
  __pyx_t_1 = __Pyx_GetItemInt_List(__pyx_cur_scope->__pyx_v_stuff, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_class); if (unlikely(!__pyx_t_6)) __PYX_ERR(3, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_name); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_builtin_function_or_method, Py_NE)); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(3, 51, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(__pyx_t_7)) {

    /* "../../pyedit_engine/cy/GDArray.pyx":52
 *         stuff = [getattr(self[x], attr) for x in range(len(self))]
 *         if stuff[0].__class__.__name__ != "builtin_function_or_method":
 *             print(stuff[0])             # <<<<<<<<<<<<<<
 *             raise AttributeError(f"'GameObjArray' object has no attribute '{attr}'")
 *         return lambda *args: [s(*args) for s in stuff]
 */
    __pyx_t_1 = __Pyx_GetItemInt_List(__pyx_cur_scope->__pyx_v_stuff, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 52, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(3, 52, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "../../pyedit_engine/cy/GDArray.pyx":53
 *         if stuff[0].__class__.__name__ != "builtin_function_or_method":
 *             print(stuff[0])
 *             raise AttributeError(f"'GameObjArray' object has no attribute '{attr}'")             # <<<<<<<<<<<<<<
 *         return lambda *args: [s(*args) for s in stuff]
 *     def sortX(self):
 */
    __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(3, 53, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = 0;
    __pyx_t_8 = 127;
    __Pyx_INCREF(__pyx_kp_u_GameObjArray_object_has_no_attr);
    __pyx_t_2 += 40;
    __Pyx_GIVEREF(__pyx_kp_u_GameObjArray_object_has_no_attr);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_kp_u_GameObjArray_object_has_no_attr);
    __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_v_attr, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 53, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_8) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_8;
    __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_1);
    __pyx_t_1 = 0;
    __Pyx_INCREF(__pyx_kp_u__17);
    __pyx_t_2 += 1;
    __Pyx_GIVEREF(__pyx_kp_u__17);
    PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_kp_u__17);
    __pyx_t_1 = __Pyx_PyUnicode_Join(__pyx_t_6, 3, __pyx_t_2, __pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 53, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_AttributeError, __pyx_t_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(3, 53, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_6, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __PYX_ERR(3, 53, __pyx_L1_error)

    /* "../../pyedit_engine/cy/GDArray.pyx":51
 *     def __getattr__(self, attr):
 *         stuff = [getattr(self[x], attr) for x in range(len(self))]
 *         if stuff[0].__class__.__name__ != "builtin_function_or_method":             # <<<<<<<<<<<<<<
 *             print(stuff[0])
 *             raise AttributeError(f"'GameObjArray' object has no attribute '{attr}'")
 */
  }

  /* "../../pyedit_engine/cy/GDArray.pyx":54
 *             print(stuff[0])
 *             raise AttributeError(f"'GameObjArray' object has no attribute '{attr}'")
 *         return lambda *args: [s(*args) for s in stuff]             # <<<<<<<<<<<<<<
 *     def sortX(self):
 *         return sorted(self, key=lambda x: x.positionX)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_6 = __Pyx_CyFunction_New(&__pyx_mdef_4main_12GameObjArray_11__getattr___lambda1, 0, __pyx_n_s_getattr___locals_lambda, ((PyObject*)__pyx_cur_scope), __pyx_n_s_main, __pyx_d, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(3, 54, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_r = __pyx_t_6;
  __pyx_t_6 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/GDArray.pyx":49
 * cdef public class GameObjArray(PyCCArray) [object _GOArray, type __GOArray]:
 *     @thread_sync
 *     def __getattr__(self, attr):             # <<<<<<<<<<<<<<
 *         stuff = [getattr(self[x], attr) for x in range(len(self))]
 *         if stuff[0].__class__.__name__ != "builtin_function_or_method":
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("main.GameObjArray.__getattr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GDArray.pyx":55
 *             raise AttributeError(f"'GameObjArray' object has no attribute '{attr}'")
 *         return lambda *args: [s(*args) for s in stuff]
 *     def sortX(self):             # <<<<<<<<<<<<<<
 *         return sorted(self, key=lambda x: x.positionX)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12GameObjArray_3sortX(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4main_12GameObjArray_3sortX(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sortX (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_12GameObjArray_2sortX(((struct _GOArray *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GDArray.pyx":56
 *         return lambda *args: [s(*args) for s in stuff]
 *     def sortX(self):
 *         return sorted(self, key=lambda x: x.positionX)             # <<<<<<<<<<<<<<
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12GameObjArray_5sortX_lambda2(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static PyMethodDef __pyx_mdef_4main_12GameObjArray_5sortX_lambda2 = {"lambda2", (PyCFunction)__pyx_pw_4main_12GameObjArray_5sortX_lambda2, METH_O, 0};
static PyObject *__pyx_pw_4main_12GameObjArray_5sortX_lambda2(PyObject *__pyx_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("lambda2 (wrapper)", 0);
  __pyx_r = __pyx_lambda_funcdef_lambda2(__pyx_self, ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_lambda_funcdef_lambda2(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("lambda2", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_positionX); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("main.GameObjArray.sortX.lambda2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GDArray.pyx":55
 *             raise AttributeError(f"'GameObjArray' object has no attribute '{attr}'")
 *         return lambda *args: [s(*args) for s in stuff]
 *     def sortX(self):             # <<<<<<<<<<<<<<
 *         return sorted(self, key=lambda x: x.positionX)
 */

static PyObject *__pyx_pf_4main_12GameObjArray_2sortX(struct _GOArray *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("sortX", 0);

  /* "../../pyedit_engine/cy/GDArray.pyx":56
 *         return lambda *args: [s(*args) for s in stuff]
 *     def sortX(self):
 *         return sorted(self, key=lambda x: x.positionX)             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self));
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(3, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_4main_12GameObjArray_5sortX_lambda2, 0, __pyx_n_s_sortX_locals_lambda, NULL, __pyx_n_s_main, __pyx_d, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(3, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_key, __pyx_t_3) < 0) __PYX_ERR(3, 56, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_sorted, __pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(3, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/GDArray.pyx":55
 *             raise AttributeError(f"'GameObjArray' object has no attribute '{attr}'")
 *         return lambda *args: [s(*args) for s in stuff]
 *     def sortX(self):             # <<<<<<<<<<<<<<
 *         return sorted(self, key=lambda x: x.positionX)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("main.GameObjArray.sortX", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12GameObjArray_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4main_12GameObjArray_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_12GameObjArray_4__reduce_cython__(((struct _GOArray *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_12GameObjArray_4__reduce_cython__(CYTHON_UNUSED struct _GOArray *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__18, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("main.GameObjArray.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12GameObjArray_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_4main_12GameObjArray_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_12GameObjArray_6__setstate_cython__(((struct _GOArray *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_12GameObjArray_6__setstate_cython__(CYTHON_UNUSED struct _GOArray *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__19, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("main.GameObjArray.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/EditorUI.pyx":7
 * cdef public class Editor(PyCCObject) [object PyEditorUI, type PyEditUI]:
 * 
 *     cdef EditorUI* edit_inst(self):             # <<<<<<<<<<<<<<
 *         if makeUsable(self.inst) == 0:
 *             raise RuntimeError("Unable to fetch editor")
 */

static EditorUI *__pyx_f_4main_6Editor_edit_inst(struct PyEditorUI *__pyx_v_self) {
  EditorUI *__pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("edit_inst", 0);

  /* "../../pyedit_engine/cy/EditorUI.pyx":8
 * 
 *     cdef EditorUI* edit_inst(self):
 *         if makeUsable(self.inst) == 0:             # <<<<<<<<<<<<<<
 *             raise RuntimeError("Unable to fetch editor")
 *         return <EditorUI*>self.inst
 */
  __pyx_t_1 = ((makeUsable(__pyx_v_self->__pyx_base.inst) == 0) != 0);
  if (unlikely(__pyx_t_1)) {

    /* "../../pyedit_engine/cy/EditorUI.pyx":9
 *     cdef EditorUI* edit_inst(self):
 *         if makeUsable(self.inst) == 0:
 *             raise RuntimeError("Unable to fetch editor")             # <<<<<<<<<<<<<<
 *         return <EditorUI*>self.inst
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__20, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(4, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(4, 9, __pyx_L1_error)

    /* "../../pyedit_engine/cy/EditorUI.pyx":8
 * 
 *     cdef EditorUI* edit_inst(self):
 *         if makeUsable(self.inst) == 0:             # <<<<<<<<<<<<<<
 *             raise RuntimeError("Unable to fetch editor")
 *         return <EditorUI*>self.inst
 */
  }

  /* "../../pyedit_engine/cy/EditorUI.pyx":10
 *         if makeUsable(self.inst) == 0:
 *             raise RuntimeError("Unable to fetch editor")
 *         return <EditorUI*>self.inst             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self):
 */
  __pyx_r = ((EditorUI *)__pyx_v_self->__pyx_base.inst);
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/EditorUI.pyx":7
 * cdef public class Editor(PyCCObject) [object PyEditorUI, type PyEditUI]:
 * 
 *     cdef EditorUI* edit_inst(self):             # <<<<<<<<<<<<<<
 *         if makeUsable(self.inst) == 0:
 *             raise RuntimeError("Unable to fetch editor")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_WriteUnraisable("main.Editor.edit_inst", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/EditorUI.pyx":12
 *         return <EditorUI*>self.inst
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.inst = <CCObject*>EditorUI_shared()
 *         if makeUsable(self.inst) == 0:
 */

/* Python wrapper */
static int __pyx_pw_4main_6Editor_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4main_6Editor_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_4main_6Editor___init__(((struct PyEditorUI *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4main_6Editor___init__(struct PyEditorUI *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "../../pyedit_engine/cy/EditorUI.pyx":13
 * 
 *     def __init__(self):
 *         self.inst = <CCObject*>EditorUI_shared()             # <<<<<<<<<<<<<<
 *         if makeUsable(self.inst) == 0:
 *             raise RuntimeError("Unable to fetch editor")
 */
  __pyx_v_self->__pyx_base.inst = ((CCObject *)EditorUI_shared());

  /* "../../pyedit_engine/cy/EditorUI.pyx":14
 *     def __init__(self):
 *         self.inst = <CCObject*>EditorUI_shared()
 *         if makeUsable(self.inst) == 0:             # <<<<<<<<<<<<<<
 *             raise RuntimeError("Unable to fetch editor")
 *     @thread_async
 */
  __pyx_t_1 = ((makeUsable(__pyx_v_self->__pyx_base.inst) == 0) != 0);
  if (unlikely(__pyx_t_1)) {

    /* "../../pyedit_engine/cy/EditorUI.pyx":15
 *         self.inst = <CCObject*>EditorUI_shared()
 *         if makeUsable(self.inst) == 0:
 *             raise RuntimeError("Unable to fetch editor")             # <<<<<<<<<<<<<<
 *     @thread_async
 *     def pasteStr(self, obs):
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__20, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(4, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(4, 15, __pyx_L1_error)

    /* "../../pyedit_engine/cy/EditorUI.pyx":14
 *     def __init__(self):
 *         self.inst = <CCObject*>EditorUI_shared()
 *         if makeUsable(self.inst) == 0:             # <<<<<<<<<<<<<<
 *             raise RuntimeError("Unable to fetch editor")
 *     @thread_async
 */
  }

  /* "../../pyedit_engine/cy/EditorUI.pyx":12
 *         return <EditorUI*>self.inst
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.inst = <CCObject*>EditorUI_shared()
 *         if makeUsable(self.inst) == 0:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("main.Editor.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/EditorUI.pyx":17
 *             raise RuntimeError("Unable to fetch editor")
 *     @thread_async
 *     def pasteStr(self, obs):             # <<<<<<<<<<<<<<
 *         if type(obs)==str:
 *             obs = obs.encode()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_6Editor_3pasteStr(PyObject *__pyx_v_self, PyObject *__pyx_v_obs); /*proto*/
static PyObject *__pyx_pw_4main_6Editor_3pasteStr(PyObject *__pyx_v_self, PyObject *__pyx_v_obs) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pasteStr (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_6Editor_2pasteStr(((struct PyEditorUI *)__pyx_v_self), ((PyObject *)__pyx_v_obs));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_6Editor_2pasteStr(struct PyEditorUI *__pyx_v_self, PyObject *__pyx_v_obs) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  std::string __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pasteStr", 0);
  __Pyx_INCREF(__pyx_v_obs);

  /* "../../pyedit_engine/cy/EditorUI.pyx":18
 *     @thread_async
 *     def pasteStr(self, obs):
 *         if type(obs)==str:             # <<<<<<<<<<<<<<
 *             obs = obs.encode()
 *         self.edit_inst().pasteObjects(obs)
 */
  __pyx_t_1 = PyObject_RichCompare(((PyObject *)Py_TYPE(__pyx_v_obs)), ((PyObject *)(&PyUnicode_Type)), Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(4, 18, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(4, 18, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "../../pyedit_engine/cy/EditorUI.pyx":19
 *     def pasteStr(self, obs):
 *         if type(obs)==str:
 *             obs = obs.encode()             # <<<<<<<<<<<<<<
 *         self.edit_inst().pasteObjects(obs)
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_obs, __pyx_n_s_encode); if (unlikely(!__pyx_t_3)) __PYX_ERR(4, 19, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(4, 19, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF_SET(__pyx_v_obs, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "../../pyedit_engine/cy/EditorUI.pyx":18
 *     @thread_async
 *     def pasteStr(self, obs):
 *         if type(obs)==str:             # <<<<<<<<<<<<<<
 *             obs = obs.encode()
 *         self.edit_inst().pasteObjects(obs)
 */
  }

  /* "../../pyedit_engine/cy/EditorUI.pyx":20
 *         if type(obs)==str:
 *             obs = obs.encode()
 *         self.edit_inst().pasteObjects(obs)             # <<<<<<<<<<<<<<
 * 
 *     @thread_sync
 */
  __pyx_t_5 = __pyx_convert_string_from_py_std__in_string(__pyx_v_obs); if (unlikely(PyErr_Occurred())) __PYX_ERR(4, 20, __pyx_L1_error)
  ((struct __pyx_vtabstruct_4main_Editor *)__pyx_v_self->__pyx_base.__pyx_vtab)->edit_inst(__pyx_v_self)->pasteObjects(__pyx_t_5);

  /* "../../pyedit_engine/cy/EditorUI.pyx":17
 *             raise RuntimeError("Unable to fetch editor")
 *     @thread_async
 *     def pasteStr(self, obs):             # <<<<<<<<<<<<<<
 *         if type(obs)==str:
 *             obs = obs.encode()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("main.Editor.pasteStr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_obs);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/EditorUI.pyx":23
 * 
 *     @thread_sync
 *     def createObject(self, objectid, x=0.0, y=0.0):             # <<<<<<<<<<<<<<
 *         objectid = int(objectid)
 *         cdef CCPoint p
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_6Editor_5createObject(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4main_6Editor_5createObject(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_objectid = 0;
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("createObject (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_objectid,&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[3] = {0,0,0};
    values[1] = ((PyObject *)__pyx_float_0_0);
    values[2] = ((PyObject *)__pyx_float_0_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_objectid)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x);
          if (value) { values[1] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_y);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "createObject") < 0)) __PYX_ERR(4, 23, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_objectid = values[0];
    __pyx_v_x = values[1];
    __pyx_v_y = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("createObject", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(4, 23, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("main.Editor.createObject", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4main_6Editor_4createObject(((struct PyEditorUI *)__pyx_v_self), __pyx_v_objectid, __pyx_v_x, __pyx_v_y);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_6Editor_4createObject(struct PyEditorUI *__pyx_v_self, PyObject *__pyx_v_objectid, PyObject *__pyx_v_x, PyObject *__pyx_v_y) {
  struct CCPoint __pyx_v_p;
  GameObject *__pyx_v_o;
  PyObject *__pyx_v_pyo = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  double __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("createObject", 0);
  __Pyx_INCREF(__pyx_v_objectid);

  /* "../../pyedit_engine/cy/EditorUI.pyx":24
 *     @thread_sync
 *     def createObject(self, objectid, x=0.0, y=0.0):
 *         objectid = int(objectid)             # <<<<<<<<<<<<<<
 *         cdef CCPoint p
 *         p.x = float(x)
 */
  __pyx_t_1 = __Pyx_PyNumber_Int(__pyx_v_objectid); if (unlikely(!__pyx_t_1)) __PYX_ERR(4, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF_SET(__pyx_v_objectid, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/EditorUI.pyx":26
 *         objectid = int(objectid)
 *         cdef CCPoint p
 *         p.x = float(x)             # <<<<<<<<<<<<<<
 *         p.y = float(y)+90.0
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_AsDouble(__pyx_v_x); if (unlikely(__pyx_t_2 == ((double)((double)-1)) && PyErr_Occurred())) __PYX_ERR(4, 26, __pyx_L1_error)
  __pyx_v_p.x = __pyx_t_2;

  /* "../../pyedit_engine/cy/EditorUI.pyx":27
 *         cdef CCPoint p
 *         p.x = float(x)
 *         p.y = float(y)+90.0             # <<<<<<<<<<<<<<
 * 
 *         cdef GameObject* o = getEditorLayer(self.edit_inst()).createObject(objectid, p, True)
 */
  __pyx_t_2 = __Pyx_PyObject_AsDouble(__pyx_v_y); if (unlikely(__pyx_t_2 == ((double)((double)-1)) && PyErr_Occurred())) __PYX_ERR(4, 27, __pyx_L1_error)
  __pyx_v_p.y = (__pyx_t_2 + 90.0);

  /* "../../pyedit_engine/cy/EditorUI.pyx":29
 *         p.y = float(y)+90.0
 * 
 *         cdef GameObject* o = getEditorLayer(self.edit_inst()).createObject(objectid, p, True)             # <<<<<<<<<<<<<<
 *         pyo = PyGameObject().fromPtr(<CCObject*>o)
 *         return pyo
 */
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_v_objectid); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(4, 29, __pyx_L1_error)
  __pyx_v_o = getEditorLayer(((struct __pyx_vtabstruct_4main_Editor *)__pyx_v_self->__pyx_base.__pyx_vtab)->edit_inst(__pyx_v_self))->createObject(__pyx_t_3, __pyx_v_p, 1);

  /* "../../pyedit_engine/cy/EditorUI.pyx":30
 * 
 *         cdef GameObject* o = getEditorLayer(self.edit_inst()).createObject(objectid, p, True)
 *         pyo = PyGameObject().fromPtr(<CCObject*>o)             # <<<<<<<<<<<<<<
 *         return pyo
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_4main_PyGameObject)); if (unlikely(!__pyx_t_1)) __PYX_ERR(4, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = ((struct __pyx_vtabstruct_4main_PyGameObject *)((struct PyGameOb *)__pyx_t_1)->__pyx_base.__pyx_vtab)->__pyx_base.fromPtr(((struct _CCObject *)__pyx_t_1), ((CCObject *)__pyx_v_o)); if (unlikely(!__pyx_t_4)) __PYX_ERR(4, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_pyo = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "../../pyedit_engine/cy/EditorUI.pyx":31
 *         cdef GameObject* o = getEditorLayer(self.edit_inst()).createObject(objectid, p, True)
 *         pyo = PyGameObject().fromPtr(<CCObject*>o)
 *         return pyo             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_pyo);
  __pyx_r = __pyx_v_pyo;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/EditorUI.pyx":23
 * 
 *     @thread_sync
 *     def createObject(self, objectid, x=0.0, y=0.0):             # <<<<<<<<<<<<<<
 *         objectid = int(objectid)
 *         cdef CCPoint p
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("main.Editor.createObject", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_pyo);
  __Pyx_XDECREF(__pyx_v_objectid);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/EditorUI.pyx":34
 * 
 *     @property
 *     def selection(self):             # <<<<<<<<<<<<<<
 *         c = thread_sync(lambda:GameObjArray().fromPtr(self.edit_inst().getSelectedObjects()))()
 *         return c
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_6Editor_9selection_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4main_6Editor_9selection_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_6Editor_9selection___get__(((struct PyEditorUI *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/EditorUI.pyx":35
 *     @property
 *     def selection(self):
 *         c = thread_sync(lambda:GameObjArray().fromPtr(self.edit_inst().getSelectedObjects()))()             # <<<<<<<<<<<<<<
 *         return c
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_6Editor_9selection_7__get___lambda3(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_4main_6Editor_9selection_7__get___lambda3 = {"lambda3", (PyCFunction)__pyx_pw_4main_6Editor_9selection_7__get___lambda3, METH_NOARGS, 0};
static PyObject *__pyx_pw_4main_6Editor_9selection_7__get___lambda3(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("lambda3 (wrapper)", 0);
  __pyx_r = __pyx_lambda_funcdef_lambda3(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_lambda_funcdef_lambda3(PyObject *__pyx_self) {
  struct __pyx_obj_4main___pyx_scope_struct_5___get__ *__pyx_cur_scope;
  struct __pyx_obj_4main___pyx_scope_struct_5___get__ *__pyx_outer_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("lambda3", 0);
  __pyx_outer_scope = (struct __pyx_obj_4main___pyx_scope_struct_5___get__ *) __Pyx_CyFunction_GetClosure(__pyx_self);
  __pyx_cur_scope = __pyx_outer_scope;
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_4main_GameObjArray)); if (unlikely(!__pyx_t_1)) __PYX_ERR(4, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(!__pyx_cur_scope->__pyx_v_self)) { __Pyx_RaiseClosureNameError("self"); __PYX_ERR(4, 35, __pyx_L1_error) }
  __pyx_t_2 = ((struct __pyx_vtabstruct_4main_GameObjArray *)((struct _GOArray *)__pyx_t_1)->__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.__pyx_base.fromPtr(((struct _CCObject *)__pyx_t_1), ((struct __pyx_vtabstruct_4main_Editor *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_vtab)->edit_inst(__pyx_cur_scope->__pyx_v_self)->getSelectedObjects()); if (unlikely(!__pyx_t_2)) __PYX_ERR(4, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("main.Editor.selection.__get__.lambda3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/EditorUI.pyx":34
 * 
 *     @property
 *     def selection(self):             # <<<<<<<<<<<<<<
 *         c = thread_sync(lambda:GameObjArray().fromPtr(self.edit_inst().getSelectedObjects()))()
 *         return c
 */

static PyObject *__pyx_pf_4main_6Editor_9selection___get__(struct PyEditorUI *__pyx_v_self) {
  struct __pyx_obj_4main___pyx_scope_struct_5___get__ *__pyx_cur_scope;
  PyObject *__pyx_v_c = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __pyx_cur_scope = (struct __pyx_obj_4main___pyx_scope_struct_5___get__ *)__pyx_tp_new_4main___pyx_scope_struct_5___get__(__pyx_ptype_4main___pyx_scope_struct_5___get__, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_4main___pyx_scope_struct_5___get__ *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(4, 34, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);

  /* "../../pyedit_engine/cy/EditorUI.pyx":35
 *     @property
 *     def selection(self):
 *         c = thread_sync(lambda:GameObjArray().fromPtr(self.edit_inst().getSelectedObjects()))()             # <<<<<<<<<<<<<<
 *         return c
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_thread_sync); if (unlikely(!__pyx_t_3)) __PYX_ERR(4, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_4main_6Editor_9selection_7__get___lambda3, 0, __pyx_n_s_Editor___get___locals_lambda, ((PyObject*)__pyx_cur_scope), __pyx_n_s_main, __pyx_d, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(4, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(4, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(4, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_c = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/EditorUI.pyx":36
 *     def selection(self):
 *         c = thread_sync(lambda:GameObjArray().fromPtr(self.edit_inst().getSelectedObjects()))()
 *         return c             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_c);
  __pyx_r = __pyx_v_c;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/EditorUI.pyx":34
 * 
 *     @property
 *     def selection(self):             # <<<<<<<<<<<<<<
 *         c = thread_sync(lambda:GameObjArray().fromPtr(self.edit_inst().getSelectedObjects()))()
 *         return c
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("main.Editor.selection.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_c);
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/EditorUI.pyx":56
 * 
 *     @selection.setter
 *     def selection(self, objects):             # <<<<<<<<<<<<<<
 *         cdef GameObjArray ccar = GameObjArray().init(objects)
 *         thread_sync(lambda: self.edit_inst().selectObjects(ccar.arr_inst(), False))()
 */

/* Python wrapper */
static int __pyx_pw_4main_6Editor_9selection_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_objects); /*proto*/
static int __pyx_pw_4main_6Editor_9selection_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_objects) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_6Editor_9selection_2__set__(((struct PyEditorUI *)__pyx_v_self), ((PyObject *)__pyx_v_objects));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/EditorUI.pyx":58
 *     def selection(self, objects):
 *         cdef GameObjArray ccar = GameObjArray().init(objects)
 *         thread_sync(lambda: self.edit_inst().selectObjects(ccar.arr_inst(), False))()             # <<<<<<<<<<<<<<
 * 
 *     def select(self, object_s):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_6Editor_9selection_7__set___lambda4(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_4main_6Editor_9selection_7__set___lambda4 = {"lambda4", (PyCFunction)__pyx_pw_4main_6Editor_9selection_7__set___lambda4, METH_NOARGS, 0};
static PyObject *__pyx_pw_4main_6Editor_9selection_7__set___lambda4(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("lambda4 (wrapper)", 0);
  __pyx_r = __pyx_lambda_funcdef_lambda4(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_lambda_funcdef_lambda4(PyObject *__pyx_self) {
  struct __pyx_obj_4main___pyx_scope_struct_6___set__ *__pyx_cur_scope;
  struct __pyx_obj_4main___pyx_scope_struct_6___set__ *__pyx_outer_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("lambda4", 0);
  __pyx_outer_scope = (struct __pyx_obj_4main___pyx_scope_struct_6___set__ *) __Pyx_CyFunction_GetClosure(__pyx_self);
  __pyx_cur_scope = __pyx_outer_scope;
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(!__pyx_cur_scope->__pyx_v_self)) { __Pyx_RaiseClosureNameError("self"); __PYX_ERR(4, 58, __pyx_L1_error) }
  if (unlikely(!__pyx_cur_scope->__pyx_v_ccar)) { __Pyx_RaiseClosureNameError("ccar"); __PYX_ERR(4, 58, __pyx_L1_error) }
  __pyx_t_1 = __Pyx_void_to_None(((struct __pyx_vtabstruct_4main_Editor *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_vtab)->edit_inst(__pyx_cur_scope->__pyx_v_self)->selectObjects(((struct __pyx_vtabstruct_4main_GameObjArray *)__pyx_cur_scope->__pyx_v_ccar->__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.arr_inst(((struct _CCArray *)__pyx_cur_scope->__pyx_v_ccar)), 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(4, 58, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("main.Editor.selection.__set__.lambda4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/EditorUI.pyx":56
 * 
 *     @selection.setter
 *     def selection(self, objects):             # <<<<<<<<<<<<<<
 *         cdef GameObjArray ccar = GameObjArray().init(objects)
 *         thread_sync(lambda: self.edit_inst().selectObjects(ccar.arr_inst(), False))()
 */

static int __pyx_pf_4main_6Editor_9selection_2__set__(struct PyEditorUI *__pyx_v_self, PyObject *__pyx_v_objects) {
  struct __pyx_obj_4main___pyx_scope_struct_6___set__ *__pyx_cur_scope;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_cur_scope = (struct __pyx_obj_4main___pyx_scope_struct_6___set__ *)__pyx_tp_new_4main___pyx_scope_struct_6___set__(__pyx_ptype_4main___pyx_scope_struct_6___set__, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_4main___pyx_scope_struct_6___set__ *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(4, 56, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);

  /* "../../pyedit_engine/cy/EditorUI.pyx":57
 *     @selection.setter
 *     def selection(self, objects):
 *         cdef GameObjArray ccar = GameObjArray().init(objects)             # <<<<<<<<<<<<<<
 *         thread_sync(lambda: self.edit_inst().selectObjects(ccar.arr_inst(), False))()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_4main_GameObjArray)); if (unlikely(!__pyx_t_2)) __PYX_ERR(4, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_init); if (unlikely(!__pyx_t_3)) __PYX_ERR(4, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_v_objects) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_objects);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(4, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_4main_GameObjArray))))) __PYX_ERR(4, 57, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_cur_scope->__pyx_v_ccar = ((struct _GOArray *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/EditorUI.pyx":58
 *     def selection(self, objects):
 *         cdef GameObjArray ccar = GameObjArray().init(objects)
 *         thread_sync(lambda: self.edit_inst().selectObjects(ccar.arr_inst(), False))()             # <<<<<<<<<<<<<<
 * 
 *     def select(self, object_s):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_thread_sync); if (unlikely(!__pyx_t_2)) __PYX_ERR(4, 58, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_4main_6Editor_9selection_7__set___lambda4, 0, __pyx_n_s_Editor___set___locals_lambda, ((PyObject*)__pyx_cur_scope), __pyx_n_s_main, __pyx_d, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(4, 58, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(4, 58, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(4, 58, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/EditorUI.pyx":56
 * 
 *     @selection.setter
 *     def selection(self, objects):             # <<<<<<<<<<<<<<
 *         cdef GameObjArray ccar = GameObjArray().init(objects)
 *         thread_sync(lambda: self.edit_inst().selectObjects(ccar.arr_inst(), False))()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("main.Editor.selection.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/EditorUI.pyx":39
 * 
 *     @property
 *     def objects(self):             # <<<<<<<<<<<<<<
 *         c = thread_sync(lambda:GameObjArray().fromPtr(getEditorLayer(self.edit_inst()).getAllObjects()))()
 *         return c
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_6Editor_7objects_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4main_6Editor_7objects_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_6Editor_7objects___get__(((struct PyEditorUI *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/EditorUI.pyx":40
 *     @property
 *     def objects(self):
 *         c = thread_sync(lambda:GameObjArray().fromPtr(getEditorLayer(self.edit_inst()).getAllObjects()))()             # <<<<<<<<<<<<<<
 *         return c
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_6Editor_7objects_7__get___lambda5(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_4main_6Editor_7objects_7__get___lambda5 = {"lambda5", (PyCFunction)__pyx_pw_4main_6Editor_7objects_7__get___lambda5, METH_NOARGS, 0};
static PyObject *__pyx_pw_4main_6Editor_7objects_7__get___lambda5(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("lambda5 (wrapper)", 0);
  __pyx_r = __pyx_lambda_funcdef_lambda5(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_lambda_funcdef_lambda5(PyObject *__pyx_self) {
  struct __pyx_obj_4main___pyx_scope_struct_7___get__ *__pyx_cur_scope;
  struct __pyx_obj_4main___pyx_scope_struct_7___get__ *__pyx_outer_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("lambda5", 0);
  __pyx_outer_scope = (struct __pyx_obj_4main___pyx_scope_struct_7___get__ *) __Pyx_CyFunction_GetClosure(__pyx_self);
  __pyx_cur_scope = __pyx_outer_scope;
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_4main_GameObjArray)); if (unlikely(!__pyx_t_1)) __PYX_ERR(4, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(!__pyx_cur_scope->__pyx_v_self)) { __Pyx_RaiseClosureNameError("self"); __PYX_ERR(4, 40, __pyx_L1_error) }
  __pyx_t_2 = ((struct __pyx_vtabstruct_4main_GameObjArray *)((struct _GOArray *)__pyx_t_1)->__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.__pyx_base.fromPtr(((struct _CCObject *)__pyx_t_1), getEditorLayer(((struct __pyx_vtabstruct_4main_Editor *)__pyx_cur_scope->__pyx_v_self->__pyx_base.__pyx_vtab)->edit_inst(__pyx_cur_scope->__pyx_v_self))->getAllObjects()); if (unlikely(!__pyx_t_2)) __PYX_ERR(4, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("main.Editor.objects.__get__.lambda5", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/EditorUI.pyx":39
 * 
 *     @property
 *     def objects(self):             # <<<<<<<<<<<<<<
 *         c = thread_sync(lambda:GameObjArray().fromPtr(getEditorLayer(self.edit_inst()).getAllObjects()))()
 *         return c
 */

static PyObject *__pyx_pf_4main_6Editor_7objects___get__(struct PyEditorUI *__pyx_v_self) {
  struct __pyx_obj_4main___pyx_scope_struct_7___get__ *__pyx_cur_scope;
  PyObject *__pyx_v_c = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __pyx_cur_scope = (struct __pyx_obj_4main___pyx_scope_struct_7___get__ *)__pyx_tp_new_4main___pyx_scope_struct_7___get__(__pyx_ptype_4main___pyx_scope_struct_7___get__, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_4main___pyx_scope_struct_7___get__ *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(4, 39, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);

  /* "../../pyedit_engine/cy/EditorUI.pyx":40
 *     @property
 *     def objects(self):
 *         c = thread_sync(lambda:GameObjArray().fromPtr(getEditorLayer(self.edit_inst()).getAllObjects()))()             # <<<<<<<<<<<<<<
 *         return c
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_thread_sync); if (unlikely(!__pyx_t_3)) __PYX_ERR(4, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_4main_6Editor_7objects_7__get___lambda5, 0, __pyx_n_s_Editor___get___locals_lambda, ((PyObject*)__pyx_cur_scope), __pyx_n_s_main, __pyx_d, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(4, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(4, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(4, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_c = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/EditorUI.pyx":41
 *     def objects(self):
 *         c = thread_sync(lambda:GameObjArray().fromPtr(getEditorLayer(self.edit_inst()).getAllObjects()))()
 *         return c             # <<<<<<<<<<<<<<
 * 
 *     def deselect(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_c);
  __pyx_r = __pyx_v_c;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/EditorUI.pyx":39
 * 
 *     @property
 *     def objects(self):             # <<<<<<<<<<<<<<
 *         c = thread_sync(lambda:GameObjArray().fromPtr(getEditorLayer(self.edit_inst()).getAllObjects()))()
 *         return c
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("main.Editor.objects.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_c);
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/EditorUI.pyx":43
 *         return c
 * 
 *     def deselect(self):             # <<<<<<<<<<<<<<
 *         self.edit_inst().deselectAll()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_6Editor_7deselect(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4main_6Editor_7deselect(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("deselect (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_6Editor_6deselect(((struct PyEditorUI *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_6Editor_6deselect(struct PyEditorUI *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("deselect", 0);

  /* "../../pyedit_engine/cy/EditorUI.pyx":44
 * 
 *     def deselect(self):
 *         self.edit_inst().deselectAll()             # <<<<<<<<<<<<<<
 * 
 *     @thread_sync
 */
  ((struct __pyx_vtabstruct_4main_Editor *)__pyx_v_self->__pyx_base.__pyx_vtab)->edit_inst(__pyx_v_self)->deselectAll();

  /* "../../pyedit_engine/cy/EditorUI.pyx":43
 *         return c
 * 
 *     def deselect(self):             # <<<<<<<<<<<<<<
 *         self.edit_inst().deselectAll()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/EditorUI.pyx":47
 * 
 *     @thread_sync
 *     def deleteSelection(self):             # <<<<<<<<<<<<<<
 *         self.edit_inst().onDeleteSelected(<CCObject*>self.edit_inst())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_6Editor_9deleteSelection(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4main_6Editor_9deleteSelection(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("deleteSelection (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_6Editor_8deleteSelection(((struct PyEditorUI *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_6Editor_8deleteSelection(struct PyEditorUI *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("deleteSelection", 0);

  /* "../../pyedit_engine/cy/EditorUI.pyx":48
 *     @thread_sync
 *     def deleteSelection(self):
 *         self.edit_inst().onDeleteSelected(<CCObject*>self.edit_inst())             # <<<<<<<<<<<<<<
 * 
 *     @thread_sync
 */
  ((struct __pyx_vtabstruct_4main_Editor *)__pyx_v_self->__pyx_base.__pyx_vtab)->edit_inst(__pyx_v_self)->onDeleteSelected(((CCObject *)((struct __pyx_vtabstruct_4main_Editor *)__pyx_v_self->__pyx_base.__pyx_vtab)->edit_inst(__pyx_v_self)));

  /* "../../pyedit_engine/cy/EditorUI.pyx":47
 * 
 *     @thread_sync
 *     def deleteSelection(self):             # <<<<<<<<<<<<<<
 *         self.edit_inst().onDeleteSelected(<CCObject*>self.edit_inst())
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/EditorUI.pyx":51
 * 
 *     @thread_sync
 *     def duplicate(self):             # <<<<<<<<<<<<<<
 *         self.edit_inst().onDuplicate(<CCObject*>self.edit_inst())
 *         return self.selection
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_6Editor_11duplicate(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4main_6Editor_11duplicate(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("duplicate (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_6Editor_10duplicate(((struct PyEditorUI *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_6Editor_10duplicate(struct PyEditorUI *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("duplicate", 0);

  /* "../../pyedit_engine/cy/EditorUI.pyx":52
 *     @thread_sync
 *     def duplicate(self):
 *         self.edit_inst().onDuplicate(<CCObject*>self.edit_inst())             # <<<<<<<<<<<<<<
 *         return self.selection
 * 
 */
  ((struct __pyx_vtabstruct_4main_Editor *)__pyx_v_self->__pyx_base.__pyx_vtab)->edit_inst(__pyx_v_self)->onDuplicate(((CCObject *)((struct __pyx_vtabstruct_4main_Editor *)__pyx_v_self->__pyx_base.__pyx_vtab)->edit_inst(__pyx_v_self)));

  /* "../../pyedit_engine/cy/EditorUI.pyx":53
 *     def duplicate(self):
 *         self.edit_inst().onDuplicate(<CCObject*>self.edit_inst())
 *         return self.selection             # <<<<<<<<<<<<<<
 * 
 *     @selection.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_selection); if (unlikely(!__pyx_t_1)) __PYX_ERR(4, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/EditorUI.pyx":51
 * 
 *     @thread_sync
 *     def duplicate(self):             # <<<<<<<<<<<<<<
 *         self.edit_inst().onDuplicate(<CCObject*>self.edit_inst())
 *         return self.selection
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("main.Editor.duplicate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/EditorUI.pyx":60
 *         thread_sync(lambda: self.edit_inst().selectObjects(ccar.arr_inst(), False))()
 * 
 *     def select(self, object_s):             # <<<<<<<<<<<<<<
 *         if issubclass(type(object_s), PyGameObject):
 *             object_s = [object_s]
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_6Editor_13select(PyObject *__pyx_v_self, PyObject *__pyx_v_object_s); /*proto*/
static PyObject *__pyx_pw_4main_6Editor_13select(PyObject *__pyx_v_self, PyObject *__pyx_v_object_s) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("select (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_6Editor_12select(((struct PyEditorUI *)__pyx_v_self), ((PyObject *)__pyx_v_object_s));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_6Editor_12select(struct PyEditorUI *__pyx_v_self, PyObject *__pyx_v_object_s) {
  struct _GOArray *__pyx_v_ccar = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("select", 0);
  __Pyx_INCREF(__pyx_v_object_s);

  /* "../../pyedit_engine/cy/EditorUI.pyx":61
 * 
 *     def select(self, object_s):
 *         if issubclass(type(object_s), PyGameObject):             # <<<<<<<<<<<<<<
 *             object_s = [object_s]
 *         cdef GameObjArray ccar = GameObjArray().init(object_s)
 */
  __pyx_t_1 = PyObject_IsSubclass(((PyObject *)Py_TYPE(__pyx_v_object_s)), ((PyObject *)__pyx_ptype_4main_PyGameObject)); if (unlikely(__pyx_t_1 == ((int)-1))) __PYX_ERR(4, 61, __pyx_L1_error)
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "../../pyedit_engine/cy/EditorUI.pyx":62
 *     def select(self, object_s):
 *         if issubclass(type(object_s), PyGameObject):
 *             object_s = [object_s]             # <<<<<<<<<<<<<<
 *         cdef GameObjArray ccar = GameObjArray().init(object_s)
 *         self.edit_inst().selectObjects(ccar.arr_inst(), True)
 */
    __pyx_t_3 = PyList_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(4, 62, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_object_s);
    __Pyx_GIVEREF(__pyx_v_object_s);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_v_object_s);
    __Pyx_DECREF_SET(__pyx_v_object_s, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "../../pyedit_engine/cy/EditorUI.pyx":61
 * 
 *     def select(self, object_s):
 *         if issubclass(type(object_s), PyGameObject):             # <<<<<<<<<<<<<<
 *             object_s = [object_s]
 *         cdef GameObjArray ccar = GameObjArray().init(object_s)
 */
  }

  /* "../../pyedit_engine/cy/EditorUI.pyx":63
 *         if issubclass(type(object_s), PyGameObject):
 *             object_s = [object_s]
 *         cdef GameObjArray ccar = GameObjArray().init(object_s)             # <<<<<<<<<<<<<<
 *         self.edit_inst().selectObjects(ccar.arr_inst(), True)
 */
  __pyx_t_4 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_4main_GameObjArray)); if (unlikely(!__pyx_t_4)) __PYX_ERR(4, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_init); if (unlikely(!__pyx_t_5)) __PYX_ERR(4, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_v_object_s) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_object_s);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(4, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_4main_GameObjArray))))) __PYX_ERR(4, 63, __pyx_L1_error)
  __pyx_v_ccar = ((struct _GOArray *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/EditorUI.pyx":64
 *             object_s = [object_s]
 *         cdef GameObjArray ccar = GameObjArray().init(object_s)
 *         self.edit_inst().selectObjects(ccar.arr_inst(), True)             # <<<<<<<<<<<<<<
 */
  ((struct __pyx_vtabstruct_4main_Editor *)__pyx_v_self->__pyx_base.__pyx_vtab)->edit_inst(__pyx_v_self)->selectObjects(((struct __pyx_vtabstruct_4main_GameObjArray *)__pyx_v_ccar->__pyx_base.__pyx_base.__pyx_vtab)->__pyx_base.arr_inst(((struct _CCArray *)__pyx_v_ccar)), 1);

  /* "../../pyedit_engine/cy/EditorUI.pyx":60
 *         thread_sync(lambda: self.edit_inst().selectObjects(ccar.arr_inst(), False))()
 * 
 *     def select(self, object_s):             # <<<<<<<<<<<<<<
 *         if issubclass(type(object_s), PyGameObject):
 *             object_s = [object_s]
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("main.Editor.select", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_ccar);
  __Pyx_XDECREF(__pyx_v_object_s);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_6Editor_15__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4main_6Editor_15__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_6Editor_14__reduce_cython__(((struct PyEditorUI *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_6Editor_14__reduce_cython__(CYTHON_UNUSED struct PyEditorUI *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__21, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("main.Editor.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_6Editor_17__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_4main_6Editor_17__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_6Editor_16__setstate_cython__(((struct PyEditorUI *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_6Editor_16__setstate_cython__(CYTHON_UNUSED struct PyEditorUI *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__22, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("main.Editor.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GameObject.pyx":6
 * 
 * cdef public class PyGameObject(PyCCObject) [object PyGameOb, type PyGameObj]:
 *     cdef GameObject* gameob_inst(self):             # <<<<<<<<<<<<<<
 *         return <GameObject*>self.inst
 * 
 */

static GameObject *__pyx_f_4main_12PyGameObject_gameob_inst(struct PyGameOb *__pyx_v_self) {
  GameObject *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("gameob_inst", 0);

  /* "../../pyedit_engine/cy/GameObject.pyx":7
 * cdef public class PyGameObject(PyCCObject) [object PyGameOb, type PyGameObj]:
 *     cdef GameObject* gameob_inst(self):
 *         return <GameObject*>self.inst             # <<<<<<<<<<<<<<
 * 
 *     def moveTo(self, x, y):
 */
  __pyx_r = ((GameObject *)__pyx_v_self->__pyx_base.inst);
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/GameObject.pyx":6
 * 
 * cdef public class PyGameObject(PyCCObject) [object PyGameOb, type PyGameObj]:
 *     cdef GameObject* gameob_inst(self):             # <<<<<<<<<<<<<<
 *         return <GameObject*>self.inst
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GameObject.pyx":9
 *         return <GameObject*>self.inst
 * 
 *     def moveTo(self, x, y):             # <<<<<<<<<<<<<<
 *         cdef CCPoint p
 *         p.x = x
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12PyGameObject_1moveTo(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4main_12PyGameObject_1moveTo(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("moveTo (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("moveTo", 1, 2, 2, 1); __PYX_ERR(5, 9, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "moveTo") < 0)) __PYX_ERR(5, 9, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = values[0];
    __pyx_v_y = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("moveTo", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(5, 9, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("main.PyGameObject.moveTo", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4main_12PyGameObject_moveTo(((struct PyGameOb *)__pyx_v_self), __pyx_v_x, __pyx_v_y);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_12PyGameObject_moveTo(struct PyGameOb *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y) {
  struct CCPoint __pyx_v_p;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  float __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("moveTo", 0);

  /* "../../pyedit_engine/cy/GameObject.pyx":11
 *     def moveTo(self, x, y):
 *         cdef CCPoint p
 *         p.x = x             # <<<<<<<<<<<<<<
 *         p.y = y+90
 *         self.gameob_inst().setPosition(p)
 */
  __pyx_t_1 = __pyx_PyFloat_AsFloat(__pyx_v_x); if (unlikely((__pyx_t_1 == (float)-1) && PyErr_Occurred())) __PYX_ERR(5, 11, __pyx_L1_error)
  __pyx_v_p.x = __pyx_t_1;

  /* "../../pyedit_engine/cy/GameObject.pyx":12
 *         cdef CCPoint p
 *         p.x = x
 *         p.y = y+90             # <<<<<<<<<<<<<<
 *         self.gameob_inst().setPosition(p)
 *         return self
 */
  __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_v_y, __pyx_int_90, 90, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(5, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __pyx_PyFloat_AsFloat(__pyx_t_2); if (unlikely((__pyx_t_1 == (float)-1) && PyErr_Occurred())) __PYX_ERR(5, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_p.y = __pyx_t_1;

  /* "../../pyedit_engine/cy/GameObject.pyx":13
 *         p.x = x
 *         p.y = y+90
 *         self.gameob_inst().setPosition(p)             # <<<<<<<<<<<<<<
 *         return self
 *     def move(self, x, y):
 */
  ((struct __pyx_vtabstruct_4main_PyGameObject *)__pyx_v_self->__pyx_base.__pyx_vtab)->gameob_inst(__pyx_v_self)->setPosition(__pyx_v_p);

  /* "../../pyedit_engine/cy/GameObject.pyx":14
 *         p.y = y+90
 *         self.gameob_inst().setPosition(p)
 *         return self             # <<<<<<<<<<<<<<
 *     def move(self, x, y):
 *         cdef CCPoint p = self.gameob_inst().getPosition()
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/GameObject.pyx":9
 *         return <GameObject*>self.inst
 * 
 *     def moveTo(self, x, y):             # <<<<<<<<<<<<<<
 *         cdef CCPoint p
 *         p.x = x
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("main.PyGameObject.moveTo", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GameObject.pyx":15
 *         self.gameob_inst().setPosition(p)
 *         return self
 *     def move(self, x, y):             # <<<<<<<<<<<<<<
 *         cdef CCPoint p = self.gameob_inst().getPosition()
 *         p.x += x
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12PyGameObject_3move(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4main_12PyGameObject_3move(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("move", 1, 2, 2, 1); __PYX_ERR(5, 15, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "move") < 0)) __PYX_ERR(5, 15, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = values[0];
    __pyx_v_y = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("move", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(5, 15, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("main.PyGameObject.move", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4main_12PyGameObject_2move(((struct PyGameOb *)__pyx_v_self), __pyx_v_x, __pyx_v_y);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_12PyGameObject_2move(struct PyGameOb *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y) {
  struct CCPoint __pyx_v_p;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  float __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move", 0);

  /* "../../pyedit_engine/cy/GameObject.pyx":16
 *         return self
 *     def move(self, x, y):
 *         cdef CCPoint p = self.gameob_inst().getPosition()             # <<<<<<<<<<<<<<
 *         p.x += x
 *         p.y += y
 */
  __pyx_v_p = ((struct __pyx_vtabstruct_4main_PyGameObject *)__pyx_v_self->__pyx_base.__pyx_vtab)->gameob_inst(__pyx_v_self)->getPosition();

  /* "../../pyedit_engine/cy/GameObject.pyx":17
 *     def move(self, x, y):
 *         cdef CCPoint p = self.gameob_inst().getPosition()
 *         p.x += x             # <<<<<<<<<<<<<<
 *         p.y += y
 *         self.gameob_inst().setPosition(p)
 */
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_p.x); if (unlikely(!__pyx_t_1)) __PYX_ERR(5, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyNumber_InPlaceAdd(__pyx_t_1, __pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(5, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __pyx_PyFloat_AsFloat(__pyx_t_2); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) __PYX_ERR(5, 17, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_p.x = __pyx_t_3;

  /* "../../pyedit_engine/cy/GameObject.pyx":18
 *         cdef CCPoint p = self.gameob_inst().getPosition()
 *         p.x += x
 *         p.y += y             # <<<<<<<<<<<<<<
 *         self.gameob_inst().setPosition(p)
 *         return self
 */
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_p.y); if (unlikely(!__pyx_t_2)) __PYX_ERR(5, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyNumber_InPlaceAdd(__pyx_t_2, __pyx_v_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(5, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_3 = __pyx_PyFloat_AsFloat(__pyx_t_1); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) __PYX_ERR(5, 18, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_p.y = __pyx_t_3;

  /* "../../pyedit_engine/cy/GameObject.pyx":19
 *         p.x += x
 *         p.y += y
 *         self.gameob_inst().setPosition(p)             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  ((struct __pyx_vtabstruct_4main_PyGameObject *)__pyx_v_self->__pyx_base.__pyx_vtab)->gameob_inst(__pyx_v_self)->setPosition(__pyx_v_p);

  /* "../../pyedit_engine/cy/GameObject.pyx":20
 *         p.y += y
 *         self.gameob_inst().setPosition(p)
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/GameObject.pyx":15
 *         self.gameob_inst().setPosition(p)
 *         return self
 *     def move(self, x, y):             # <<<<<<<<<<<<<<
 *         cdef CCPoint p = self.gameob_inst().getPosition()
 *         p.x += x
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("main.PyGameObject.move", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GameObject.pyx":23
 * 
 *     @property
 *     def base_hue(self):             # <<<<<<<<<<<<<<
 *         if <long>getRelSpriteColor(self.gameob_inst(), 0) != 0:
 *             return getRelSpriteColor(self.gameob_inst(), 0).hue
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12PyGameObject_8base_hue_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4main_12PyGameObject_8base_hue_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_12PyGameObject_8base_hue___get__(((struct PyGameOb *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_12PyGameObject_8base_hue___get__(struct PyGameOb *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "../../pyedit_engine/cy/GameObject.pyx":24
 *     @property
 *     def base_hue(self):
 *         if <long>getRelSpriteColor(self.gameob_inst(), 0) != 0:             # <<<<<<<<<<<<<<
 *             return getRelSpriteColor(self.gameob_inst(), 0).hue
 *         else:
 */
  __pyx_t_1 = ((((long)getRelSpriteColor(((struct __pyx_vtabstruct_4main_PyGameObject *)__pyx_v_self->__pyx_base.__pyx_vtab)->gameob_inst(__pyx_v_self), 0)) != 0) != 0);
  if (__pyx_t_1) {

    /* "../../pyedit_engine/cy/GameObject.pyx":25
 *     def base_hue(self):
 *         if <long>getRelSpriteColor(self.gameob_inst(), 0) != 0:
 *             return getRelSpriteColor(self.gameob_inst(), 0).hue             # <<<<<<<<<<<<<<
 *         else:
 *             return 0.0
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = PyFloat_FromDouble(getRelSpriteColor(((struct __pyx_vtabstruct_4main_PyGameObject *)__pyx_v_self->__pyx_base.__pyx_vtab)->gameob_inst(__pyx_v_self), 0)->hue); if (unlikely(!__pyx_t_2)) __PYX_ERR(5, 25, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;

    /* "../../pyedit_engine/cy/GameObject.pyx":24
 *     @property
 *     def base_hue(self):
 *         if <long>getRelSpriteColor(self.gameob_inst(), 0) != 0:             # <<<<<<<<<<<<<<
 *             return getRelSpriteColor(self.gameob_inst(), 0).hue
 *         else:
 */
  }

  /* "../../pyedit_engine/cy/GameObject.pyx":27
 *             return getRelSpriteColor(self.gameob_inst(), 0).hue
 *         else:
 *             return 0.0             # <<<<<<<<<<<<<<
 * 
 *     @base_hue.setter
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_float_0_0);
    __pyx_r = __pyx_float_0_0;
    goto __pyx_L0;
  }

  /* "../../pyedit_engine/cy/GameObject.pyx":23
 * 
 *     @property
 *     def base_hue(self):             # <<<<<<<<<<<<<<
 *         if <long>getRelSpriteColor(self.gameob_inst(), 0) != 0:
 *             return getRelSpriteColor(self.gameob_inst(), 0).hue
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("main.PyGameObject.base_hue.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GameObject.pyx":30
 * 
 *     @base_hue.setter
 *     def base_hue(self, v):             # <<<<<<<<<<<<<<
 *         if <long>getRelSpriteColor(self.gameob_inst(), 0) != 0:
 *             getRelSpriteColor(self.gameob_inst(), 0).hue = v
 */

/* Python wrapper */
static int __pyx_pw_4main_12PyGameObject_8base_hue_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_v); /*proto*/
static int __pyx_pw_4main_12PyGameObject_8base_hue_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_v) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_12PyGameObject_8base_hue_2__set__(((struct PyGameOb *)__pyx_v_self), ((PyObject *)__pyx_v_v));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4main_12PyGameObject_8base_hue_2__set__(struct PyGameOb *__pyx_v_self, PyObject *__pyx_v_v) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  float __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "../../pyedit_engine/cy/GameObject.pyx":31
 *     @base_hue.setter
 *     def base_hue(self, v):
 *         if <long>getRelSpriteColor(self.gameob_inst(), 0) != 0:             # <<<<<<<<<<<<<<
 *             getRelSpriteColor(self.gameob_inst(), 0).hue = v
 *         else:
 */
  __pyx_t_1 = ((((long)getRelSpriteColor(((struct __pyx_vtabstruct_4main_PyGameObject *)__pyx_v_self->__pyx_base.__pyx_vtab)->gameob_inst(__pyx_v_self), 0)) != 0) != 0);
  if (__pyx_t_1) {

    /* "../../pyedit_engine/cy/GameObject.pyx":32
 *     def base_hue(self, v):
 *         if <long>getRelSpriteColor(self.gameob_inst(), 0) != 0:
 *             getRelSpriteColor(self.gameob_inst(), 0).hue = v             # <<<<<<<<<<<<<<
 *         else:
 *             pass
 */
    __pyx_t_2 = __pyx_PyFloat_AsFloat(__pyx_v_v); if (unlikely((__pyx_t_2 == (float)-1) && PyErr_Occurred())) __PYX_ERR(5, 32, __pyx_L1_error)
    getRelSpriteColor(((struct __pyx_vtabstruct_4main_PyGameObject *)__pyx_v_self->__pyx_base.__pyx_vtab)->gameob_inst(__pyx_v_self), 0)->hue = __pyx_t_2;

    /* "../../pyedit_engine/cy/GameObject.pyx":31
 *     @base_hue.setter
 *     def base_hue(self, v):
 *         if <long>getRelSpriteColor(self.gameob_inst(), 0) != 0:             # <<<<<<<<<<<<<<
 *             getRelSpriteColor(self.gameob_inst(), 0).hue = v
 *         else:
 */
    goto __pyx_L3;
  }

  /* "../../pyedit_engine/cy/GameObject.pyx":34
 *             getRelSpriteColor(self.gameob_inst(), 0).hue = v
 *         else:
 *             pass             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  /*else*/ {
  }
  __pyx_L3:;

  /* "../../pyedit_engine/cy/GameObject.pyx":30
 * 
 *     @base_hue.setter
 *     def base_hue(self, v):             # <<<<<<<<<<<<<<
 *         if <long>getRelSpriteColor(self.gameob_inst(), 0) != 0:
 *             getRelSpriteColor(self.gameob_inst(), 0).hue = v
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("main.PyGameObject.base_hue.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GameObject.pyx":37
 * 
 *     @property
 *     def detail_hue(self):             # <<<<<<<<<<<<<<
 *         if <long>getRelSpriteColor(self.gameob_inst(), 2) != 0:
 *             return getRelSpriteColor(self.gameob_inst(), 2).hue
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12PyGameObject_10detail_hue_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4main_12PyGameObject_10detail_hue_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_12PyGameObject_10detail_hue___get__(((struct PyGameOb *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_12PyGameObject_10detail_hue___get__(struct PyGameOb *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "../../pyedit_engine/cy/GameObject.pyx":38
 *     @property
 *     def detail_hue(self):
 *         if <long>getRelSpriteColor(self.gameob_inst(), 2) != 0:             # <<<<<<<<<<<<<<
 *             return getRelSpriteColor(self.gameob_inst(), 2).hue
 *         else:
 */
  __pyx_t_1 = ((((long)getRelSpriteColor(((struct __pyx_vtabstruct_4main_PyGameObject *)__pyx_v_self->__pyx_base.__pyx_vtab)->gameob_inst(__pyx_v_self), 2)) != 0) != 0);
  if (__pyx_t_1) {

    /* "../../pyedit_engine/cy/GameObject.pyx":39
 *     def detail_hue(self):
 *         if <long>getRelSpriteColor(self.gameob_inst(), 2) != 0:
 *             return getRelSpriteColor(self.gameob_inst(), 2).hue             # <<<<<<<<<<<<<<
 *         else:
 *             return 0.0
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = PyFloat_FromDouble(getRelSpriteColor(((struct __pyx_vtabstruct_4main_PyGameObject *)__pyx_v_self->__pyx_base.__pyx_vtab)->gameob_inst(__pyx_v_self), 2)->hue); if (unlikely(!__pyx_t_2)) __PYX_ERR(5, 39, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;

    /* "../../pyedit_engine/cy/GameObject.pyx":38
 *     @property
 *     def detail_hue(self):
 *         if <long>getRelSpriteColor(self.gameob_inst(), 2) != 0:             # <<<<<<<<<<<<<<
 *             return getRelSpriteColor(self.gameob_inst(), 2).hue
 *         else:
 */
  }

  /* "../../pyedit_engine/cy/GameObject.pyx":41
 *             return getRelSpriteColor(self.gameob_inst(), 2).hue
 *         else:
 *             return 0.0             # <<<<<<<<<<<<<<
 * 
 *     @detail_hue.setter
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_float_0_0);
    __pyx_r = __pyx_float_0_0;
    goto __pyx_L0;
  }

  /* "../../pyedit_engine/cy/GameObject.pyx":37
 * 
 *     @property
 *     def detail_hue(self):             # <<<<<<<<<<<<<<
 *         if <long>getRelSpriteColor(self.gameob_inst(), 2) != 0:
 *             return getRelSpriteColor(self.gameob_inst(), 2).hue
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("main.PyGameObject.detail_hue.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GameObject.pyx":44
 * 
 *     @detail_hue.setter
 *     def detail_hue(self, v):             # <<<<<<<<<<<<<<
 *         if <long>getRelSpriteColor(self.gameob_inst(), 2) != 0:
 *             getRelSpriteColor(self.gameob_inst(), 2).hue = v
 */

/* Python wrapper */
static int __pyx_pw_4main_12PyGameObject_10detail_hue_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_v); /*proto*/
static int __pyx_pw_4main_12PyGameObject_10detail_hue_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_v) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_12PyGameObject_10detail_hue_2__set__(((struct PyGameOb *)__pyx_v_self), ((PyObject *)__pyx_v_v));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4main_12PyGameObject_10detail_hue_2__set__(struct PyGameOb *__pyx_v_self, PyObject *__pyx_v_v) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  float __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "../../pyedit_engine/cy/GameObject.pyx":45
 *     @detail_hue.setter
 *     def detail_hue(self, v):
 *         if <long>getRelSpriteColor(self.gameob_inst(), 2) != 0:             # <<<<<<<<<<<<<<
 *             getRelSpriteColor(self.gameob_inst(), 2).hue = v
 *         else:
 */
  __pyx_t_1 = ((((long)getRelSpriteColor(((struct __pyx_vtabstruct_4main_PyGameObject *)__pyx_v_self->__pyx_base.__pyx_vtab)->gameob_inst(__pyx_v_self), 2)) != 0) != 0);
  if (__pyx_t_1) {

    /* "../../pyedit_engine/cy/GameObject.pyx":46
 *     def detail_hue(self, v):
 *         if <long>getRelSpriteColor(self.gameob_inst(), 2) != 0:
 *             getRelSpriteColor(self.gameob_inst(), 2).hue = v             # <<<<<<<<<<<<<<
 *         else:
 *             pass
 */
    __pyx_t_2 = __pyx_PyFloat_AsFloat(__pyx_v_v); if (unlikely((__pyx_t_2 == (float)-1) && PyErr_Occurred())) __PYX_ERR(5, 46, __pyx_L1_error)
    getRelSpriteColor(((struct __pyx_vtabstruct_4main_PyGameObject *)__pyx_v_self->__pyx_base.__pyx_vtab)->gameob_inst(__pyx_v_self), 2)->hue = __pyx_t_2;

    /* "../../pyedit_engine/cy/GameObject.pyx":45
 *     @detail_hue.setter
 *     def detail_hue(self, v):
 *         if <long>getRelSpriteColor(self.gameob_inst(), 2) != 0:             # <<<<<<<<<<<<<<
 *             getRelSpriteColor(self.gameob_inst(), 2).hue = v
 *         else:
 */
    goto __pyx_L3;
  }

  /* "../../pyedit_engine/cy/GameObject.pyx":48
 *             getRelSpriteColor(self.gameob_inst(), 2).hue = v
 *         else:
 *             pass             # <<<<<<<<<<<<<<
 * 
 *     def incrementZ(self):
 */
  /*else*/ {
  }
  __pyx_L3:;

  /* "../../pyedit_engine/cy/GameObject.pyx":44
 * 
 *     @detail_hue.setter
 *     def detail_hue(self, v):             # <<<<<<<<<<<<<<
 *         if <long>getRelSpriteColor(self.gameob_inst(), 2) != 0:
 *             getRelSpriteColor(self.gameob_inst(), 2).hue = v
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("main.PyGameObject.detail_hue.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GameObject.pyx":50
 *             pass
 * 
 *     def incrementZ(self):             # <<<<<<<<<<<<<<
 *         (&gob_getZOrder(self.gameob_inst()))[0] = gob_getZOrder(self.gameob_inst()) + 1
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12PyGameObject_5incrementZ(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4main_12PyGameObject_5incrementZ(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("incrementZ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_12PyGameObject_4incrementZ(((struct PyGameOb *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_12PyGameObject_4incrementZ(struct PyGameOb *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("incrementZ", 0);

  /* "../../pyedit_engine/cy/GameObject.pyx":51
 * 
 *     def incrementZ(self):
 *         (&gob_getZOrder(self.gameob_inst()))[0] = gob_getZOrder(self.gameob_inst()) + 1             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  ((&gob_getZOrder(((struct __pyx_vtabstruct_4main_PyGameObject *)__pyx_v_self->__pyx_base.__pyx_vtab)->gameob_inst(__pyx_v_self)))[0]) = (gob_getZOrder(((struct __pyx_vtabstruct_4main_PyGameObject *)__pyx_v_self->__pyx_base.__pyx_vtab)->gameob_inst(__pyx_v_self)) + 1);

  /* "../../pyedit_engine/cy/GameObject.pyx":50
 *             pass
 * 
 *     def incrementZ(self):             # <<<<<<<<<<<<<<
 *         (&gob_getZOrder(self.gameob_inst()))[0] = gob_getZOrder(self.gameob_inst()) + 1
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GameObject.pyx":54
 * 
 *     @property
 *     def size(self):             # <<<<<<<<<<<<<<
 *         return self.gameob_inst().getScale()
 *     def scaleTo(self, sc):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12PyGameObject_4size_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4main_12PyGameObject_4size_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_12PyGameObject_4size___get__(((struct PyGameOb *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_12PyGameObject_4size___get__(struct PyGameOb *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "../../pyedit_engine/cy/GameObject.pyx":55
 *     @property
 *     def size(self):
 *         return self.gameob_inst().getScale()             # <<<<<<<<<<<<<<
 *     def scaleTo(self, sc):
 *         self.gameob_inst().updateCustomScale(sc)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_vtabstruct_4main_PyGameObject *)__pyx_v_self->__pyx_base.__pyx_vtab)->gameob_inst(__pyx_v_self)->getScale()); if (unlikely(!__pyx_t_1)) __PYX_ERR(5, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/GameObject.pyx":54
 * 
 *     @property
 *     def size(self):             # <<<<<<<<<<<<<<
 *         return self.gameob_inst().getScale()
 *     def scaleTo(self, sc):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("main.PyGameObject.size.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GameObject.pyx":56
 *     def size(self):
 *         return self.gameob_inst().getScale()
 *     def scaleTo(self, sc):             # <<<<<<<<<<<<<<
 *         self.gameob_inst().updateCustomScale(sc)
 *         return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12PyGameObject_7scaleTo(PyObject *__pyx_v_self, PyObject *__pyx_v_sc); /*proto*/
static PyObject *__pyx_pw_4main_12PyGameObject_7scaleTo(PyObject *__pyx_v_self, PyObject *__pyx_v_sc) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scaleTo (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_12PyGameObject_6scaleTo(((struct PyGameOb *)__pyx_v_self), ((PyObject *)__pyx_v_sc));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_12PyGameObject_6scaleTo(struct PyGameOb *__pyx_v_self, PyObject *__pyx_v_sc) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  float __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scaleTo", 0);

  /* "../../pyedit_engine/cy/GameObject.pyx":57
 *         return self.gameob_inst().getScale()
 *     def scaleTo(self, sc):
 *         self.gameob_inst().updateCustomScale(sc)             # <<<<<<<<<<<<<<
 *         return self
 *     def scale(self, sc):
 */
  __pyx_t_1 = __pyx_PyFloat_AsFloat(__pyx_v_sc); if (unlikely((__pyx_t_1 == (float)-1) && PyErr_Occurred())) __PYX_ERR(5, 57, __pyx_L1_error)
  ((struct __pyx_vtabstruct_4main_PyGameObject *)__pyx_v_self->__pyx_base.__pyx_vtab)->gameob_inst(__pyx_v_self)->updateCustomScale(__pyx_t_1);

  /* "../../pyedit_engine/cy/GameObject.pyx":58
 *     def scaleTo(self, sc):
 *         self.gameob_inst().updateCustomScale(sc)
 *         return self             # <<<<<<<<<<<<<<
 *     def scale(self, sc):
 *         return self.scaleTo(self.size + sc)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/GameObject.pyx":56
 *     def size(self):
 *         return self.gameob_inst().getScale()
 *     def scaleTo(self, sc):             # <<<<<<<<<<<<<<
 *         self.gameob_inst().updateCustomScale(sc)
 *         return self
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("main.PyGameObject.scaleTo", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GameObject.pyx":59
 *         self.gameob_inst().updateCustomScale(sc)
 *         return self
 *     def scale(self, sc):             # <<<<<<<<<<<<<<
 *         return self.scaleTo(self.size + sc)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12PyGameObject_9scale(PyObject *__pyx_v_self, PyObject *__pyx_v_sc); /*proto*/
static PyObject *__pyx_pw_4main_12PyGameObject_9scale(PyObject *__pyx_v_self, PyObject *__pyx_v_sc) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scale (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_12PyGameObject_8scale(((struct PyGameOb *)__pyx_v_self), ((PyObject *)__pyx_v_sc));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_12PyGameObject_8scale(struct PyGameOb *__pyx_v_self, PyObject *__pyx_v_sc) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scale", 0);

  /* "../../pyedit_engine/cy/GameObject.pyx":60
 *         return self
 *     def scale(self, sc):
 *         return self.scaleTo(self.size + sc)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_scaleTo); if (unlikely(!__pyx_t_2)) __PYX_ERR(5, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_size); if (unlikely(!__pyx_t_3)) __PYX_ERR(5, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyNumber_Add(__pyx_t_3, __pyx_v_sc); if (unlikely(!__pyx_t_4)) __PYX_ERR(5, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(5, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/GameObject.pyx":59
 *         self.gameob_inst().updateCustomScale(sc)
 *         return self
 *     def scale(self, sc):             # <<<<<<<<<<<<<<
 *         return self.scaleTo(self.size + sc)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("main.PyGameObject.scale", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GameObject.pyx":63
 * 
 *     @property
 *     def id(self):             # <<<<<<<<<<<<<<
 *         return gob_getID(self.gameob_inst())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12PyGameObject_2id_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4main_12PyGameObject_2id_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_12PyGameObject_2id___get__(((struct PyGameOb *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_12PyGameObject_2id___get__(struct PyGameOb *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "../../pyedit_engine/cy/GameObject.pyx":64
 *     @property
 *     def id(self):
 *         return gob_getID(self.gameob_inst())             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(gob_getID(((struct __pyx_vtabstruct_4main_PyGameObject *)__pyx_v_self->__pyx_base.__pyx_vtab)->gameob_inst(__pyx_v_self))); if (unlikely(!__pyx_t_1)) __PYX_ERR(5, 64, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/GameObject.pyx":63
 * 
 *     @property
 *     def id(self):             # <<<<<<<<<<<<<<
 *         return gob_getID(self.gameob_inst())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("main.PyGameObject.id.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GameObject.pyx":67
 * 
 *     @property
 *     def position(self):             # <<<<<<<<<<<<<<
 *         cdef CCPoint p = self.gameob_inst().getPosition()
 *         return (p.x, p.y-90)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12PyGameObject_8position_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4main_12PyGameObject_8position_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_12PyGameObject_8position___get__(((struct PyGameOb *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_12PyGameObject_8position___get__(struct PyGameOb *__pyx_v_self) {
  struct CCPoint __pyx_v_p;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "../../pyedit_engine/cy/GameObject.pyx":68
 *     @property
 *     def position(self):
 *         cdef CCPoint p = self.gameob_inst().getPosition()             # <<<<<<<<<<<<<<
 *         return (p.x, p.y-90)
 *     @property
 */
  __pyx_v_p = ((struct __pyx_vtabstruct_4main_PyGameObject *)__pyx_v_self->__pyx_base.__pyx_vtab)->gameob_inst(__pyx_v_self)->getPosition();

  /* "../../pyedit_engine/cy/GameObject.pyx":69
 *     def position(self):
 *         cdef CCPoint p = self.gameob_inst().getPosition()
 *         return (p.x, p.y-90)             # <<<<<<<<<<<<<<
 *     @property
 *     def positionX(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_p.x); if (unlikely(!__pyx_t_1)) __PYX_ERR(5, 69, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble((__pyx_v_p.y - 90.0)); if (unlikely(!__pyx_t_2)) __PYX_ERR(5, 69, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(5, 69, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/GameObject.pyx":67
 * 
 *     @property
 *     def position(self):             # <<<<<<<<<<<<<<
 *         cdef CCPoint p = self.gameob_inst().getPosition()
 *         return (p.x, p.y-90)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("main.PyGameObject.position.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GameObject.pyx":71
 *         return (p.x, p.y-90)
 *     @property
 *     def positionX(self):             # <<<<<<<<<<<<<<
 *         cdef CCPoint p = self.gameob_inst().getPosition()
 *         return p.x
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12PyGameObject_9positionX_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4main_12PyGameObject_9positionX_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_12PyGameObject_9positionX___get__(((struct PyGameOb *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_12PyGameObject_9positionX___get__(struct PyGameOb *__pyx_v_self) {
  struct CCPoint __pyx_v_p;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "../../pyedit_engine/cy/GameObject.pyx":72
 *     @property
 *     def positionX(self):
 *         cdef CCPoint p = self.gameob_inst().getPosition()             # <<<<<<<<<<<<<<
 *         return p.x
 *     @property
 */
  __pyx_v_p = ((struct __pyx_vtabstruct_4main_PyGameObject *)__pyx_v_self->__pyx_base.__pyx_vtab)->gameob_inst(__pyx_v_self)->getPosition();

  /* "../../pyedit_engine/cy/GameObject.pyx":73
 *     def positionX(self):
 *         cdef CCPoint p = self.gameob_inst().getPosition()
 *         return p.x             # <<<<<<<<<<<<<<
 *     @property
 *     def positionY(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_p.x); if (unlikely(!__pyx_t_1)) __PYX_ERR(5, 73, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/GameObject.pyx":71
 *         return (p.x, p.y-90)
 *     @property
 *     def positionX(self):             # <<<<<<<<<<<<<<
 *         cdef CCPoint p = self.gameob_inst().getPosition()
 *         return p.x
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("main.PyGameObject.positionX.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GameObject.pyx":75
 *         return p.x
 *     @property
 *     def positionY(self):             # <<<<<<<<<<<<<<
 *         cdef CCPoint p = self.gameob_inst().getPosition()
 *         return p.y-90
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12PyGameObject_9positionY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4main_12PyGameObject_9positionY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_12PyGameObject_9positionY___get__(((struct PyGameOb *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_12PyGameObject_9positionY___get__(struct PyGameOb *__pyx_v_self) {
  struct CCPoint __pyx_v_p;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "../../pyedit_engine/cy/GameObject.pyx":76
 *     @property
 *     def positionY(self):
 *         cdef CCPoint p = self.gameob_inst().getPosition()             # <<<<<<<<<<<<<<
 *         return p.y-90
 *     @property
 */
  __pyx_v_p = ((struct __pyx_vtabstruct_4main_PyGameObject *)__pyx_v_self->__pyx_base.__pyx_vtab)->gameob_inst(__pyx_v_self)->getPosition();

  /* "../../pyedit_engine/cy/GameObject.pyx":77
 *     def positionY(self):
 *         cdef CCPoint p = self.gameob_inst().getPosition()
 *         return p.y-90             # <<<<<<<<<<<<<<
 *     @property
 *     def levelStr(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((__pyx_v_p.y - 90.0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(5, 77, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/GameObject.pyx":75
 *         return p.x
 *     @property
 *     def positionY(self):             # <<<<<<<<<<<<<<
 *         cdef CCPoint p = self.gameob_inst().getPosition()
 *         return p.y-90
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("main.PyGameObject.positionY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GameObject.pyx":79
 *         return p.y-90
 *     @property
 *     def levelStr(self):             # <<<<<<<<<<<<<<
 *         return self.gameob_inst().getSaveString()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12PyGameObject_8levelStr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4main_12PyGameObject_8levelStr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_12PyGameObject_8levelStr___get__(((struct PyGameOb *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_12PyGameObject_8levelStr___get__(struct PyGameOb *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "../../pyedit_engine/cy/GameObject.pyx":80
 *     @property
 *     def levelStr(self):
 *         return self.gameob_inst().getSaveString()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_PyBytes_string_to_py_std__in_string(((struct __pyx_vtabstruct_4main_PyGameObject *)__pyx_v_self->__pyx_base.__pyx_vtab)->gameob_inst(__pyx_v_self)->getSaveString()); if (unlikely(!__pyx_t_1)) __PYX_ERR(5, 80, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/GameObject.pyx":79
 *         return p.y-90
 *     @property
 *     def levelStr(self):             # <<<<<<<<<<<<<<
 *         return self.gameob_inst().getSaveString()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("main.PyGameObject.levelStr.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GameObject.pyx":83
 * 
 *     @property
 *     def groups(self):             # <<<<<<<<<<<<<<
 *         return getObjGroups(self.gameob_inst())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12PyGameObject_6groups_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4main_12PyGameObject_6groups_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_12PyGameObject_6groups___get__(((struct PyGameOb *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_12PyGameObject_6groups___get__(struct PyGameOb *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "../../pyedit_engine/cy/GameObject.pyx":84
 *     @property
 *     def groups(self):
 *         return getObjGroups(self.gameob_inst())             # <<<<<<<<<<<<<<
 * 
 *     def rotate(self, deg):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_int(getObjGroups(((struct __pyx_vtabstruct_4main_PyGameObject *)__pyx_v_self->__pyx_base.__pyx_vtab)->gameob_inst(__pyx_v_self))); if (unlikely(!__pyx_t_1)) __PYX_ERR(5, 84, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/GameObject.pyx":83
 * 
 *     @property
 *     def groups(self):             # <<<<<<<<<<<<<<
 *         return getObjGroups(self.gameob_inst())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("main.PyGameObject.groups.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GameObject.pyx":86
 *         return getObjGroups(self.gameob_inst())
 * 
 *     def rotate(self, deg):             # <<<<<<<<<<<<<<
 *         return self.rotateTo(self.rotation + deg)
 *     def rotateTo(self, deg):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12PyGameObject_11rotate(PyObject *__pyx_v_self, PyObject *__pyx_v_deg); /*proto*/
static PyObject *__pyx_pw_4main_12PyGameObject_11rotate(PyObject *__pyx_v_self, PyObject *__pyx_v_deg) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rotate (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_12PyGameObject_10rotate(((struct PyGameOb *)__pyx_v_self), ((PyObject *)__pyx_v_deg));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_12PyGameObject_10rotate(struct PyGameOb *__pyx_v_self, PyObject *__pyx_v_deg) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("rotate", 0);

  /* "../../pyedit_engine/cy/GameObject.pyx":87
 * 
 *     def rotate(self, deg):
 *         return self.rotateTo(self.rotation + deg)             # <<<<<<<<<<<<<<
 *     def rotateTo(self, deg):
 *         self.gameob_inst().setRotation(deg)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_rotateTo); if (unlikely(!__pyx_t_2)) __PYX_ERR(5, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_rotation); if (unlikely(!__pyx_t_3)) __PYX_ERR(5, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyNumber_Add(__pyx_t_3, __pyx_v_deg); if (unlikely(!__pyx_t_4)) __PYX_ERR(5, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(5, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/GameObject.pyx":86
 *         return getObjGroups(self.gameob_inst())
 * 
 *     def rotate(self, deg):             # <<<<<<<<<<<<<<
 *         return self.rotateTo(self.rotation + deg)
 *     def rotateTo(self, deg):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("main.PyGameObject.rotate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GameObject.pyx":88
 *     def rotate(self, deg):
 *         return self.rotateTo(self.rotation + deg)
 *     def rotateTo(self, deg):             # <<<<<<<<<<<<<<
 *         self.gameob_inst().setRotation(deg)
 *         return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12PyGameObject_13rotateTo(PyObject *__pyx_v_self, PyObject *__pyx_v_deg); /*proto*/
static PyObject *__pyx_pw_4main_12PyGameObject_13rotateTo(PyObject *__pyx_v_self, PyObject *__pyx_v_deg) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rotateTo (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_12PyGameObject_12rotateTo(((struct PyGameOb *)__pyx_v_self), ((PyObject *)__pyx_v_deg));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_12PyGameObject_12rotateTo(struct PyGameOb *__pyx_v_self, PyObject *__pyx_v_deg) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  float __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("rotateTo", 0);

  /* "../../pyedit_engine/cy/GameObject.pyx":89
 *         return self.rotateTo(self.rotation + deg)
 *     def rotateTo(self, deg):
 *         self.gameob_inst().setRotation(deg)             # <<<<<<<<<<<<<<
 *         return self
 *     @property
 */
  __pyx_t_1 = __pyx_PyFloat_AsFloat(__pyx_v_deg); if (unlikely((__pyx_t_1 == (float)-1) && PyErr_Occurred())) __PYX_ERR(5, 89, __pyx_L1_error)
  ((struct __pyx_vtabstruct_4main_PyGameObject *)__pyx_v_self->__pyx_base.__pyx_vtab)->gameob_inst(__pyx_v_self)->setRotation(__pyx_t_1);

  /* "../../pyedit_engine/cy/GameObject.pyx":90
 *     def rotateTo(self, deg):
 *         self.gameob_inst().setRotation(deg)
 *         return self             # <<<<<<<<<<<<<<
 *     @property
 *     def rotation(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/GameObject.pyx":88
 *     def rotate(self, deg):
 *         return self.rotateTo(self.rotation + deg)
 *     def rotateTo(self, deg):             # <<<<<<<<<<<<<<
 *         self.gameob_inst().setRotation(deg)
 *         return self
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("main.PyGameObject.rotateTo", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/GameObject.pyx":92
 *         return self
 *     @property
 *     def rotation(self):             # <<<<<<<<<<<<<<
 *         return self.gameob_inst().getRotation()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12PyGameObject_8rotation_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4main_12PyGameObject_8rotation_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_12PyGameObject_8rotation___get__(((struct PyGameOb *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_12PyGameObject_8rotation___get__(struct PyGameOb *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "../../pyedit_engine/cy/GameObject.pyx":93
 *     @property
 *     def rotation(self):
 *         return self.gameob_inst().getRotation()             # <<<<<<<<<<<<<<
 * 
 * include "ObjectExtensions.pyx"
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_vtabstruct_4main_PyGameObject *)__pyx_v_self->__pyx_base.__pyx_vtab)->gameob_inst(__pyx_v_self)->getRotation()); if (unlikely(!__pyx_t_1)) __PYX_ERR(5, 93, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/GameObject.pyx":92
 *         return self
 *     @property
 *     def rotation(self):             # <<<<<<<<<<<<<<
 *         return self.gameob_inst().getRotation()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("main.PyGameObject.rotation.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12PyGameObject_15__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4main_12PyGameObject_15__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_12PyGameObject_14__reduce_cython__(((struct PyGameOb *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_12PyGameObject_14__reduce_cython__(CYTHON_UNUSED struct PyGameOb *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__23, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("main.PyGameObject.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_12PyGameObject_17__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_4main_12PyGameObject_17__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_12PyGameObject_16__setstate_cython__(((struct PyGameOb *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_12PyGameObject_16__setstate_cython__(CYTHON_UNUSED struct PyGameOb *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("main.PyGameObject.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":13
 * 	import urllib2
 * from math import sqrt
 * def makeSeed(encoded):             # <<<<<<<<<<<<<<
 * 	if len(encoded)< 49:
 * 		seed2 = encoded
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_5makeSeed(PyObject *__pyx_self, PyObject *__pyx_v_encoded); /*proto*/
static PyMethodDef __pyx_mdef_4main_5makeSeed = {"makeSeed", (PyCFunction)__pyx_pw_4main_5makeSeed, METH_O, 0};
static PyObject *__pyx_pw_4main_5makeSeed(PyObject *__pyx_self, PyObject *__pyx_v_encoded) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("makeSeed (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_4makeSeed(__pyx_self, ((PyObject *)__pyx_v_encoded));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_4makeSeed(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_encoded) {
  PyObject *__pyx_v_seed2 = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("makeSeed", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":14
 * from math import sqrt
 * def makeSeed(encoded):
 * 	if len(encoded)< 49:             # <<<<<<<<<<<<<<
 * 		seed2 = encoded
 * 	else:
 */
  __pyx_t_1 = PyObject_Length(__pyx_v_encoded); if (unlikely(__pyx_t_1 == ((Py_ssize_t)-1))) __PYX_ERR(0, 14, __pyx_L1_error)
  __pyx_t_2 = ((__pyx_t_1 < 49) != 0);
  if (__pyx_t_2) {

    /* "../../pyedit_engine/cy/PyLvl.pyx":15
 * def makeSeed(encoded):
 * 	if len(encoded)< 49:
 * 		seed2 = encoded             # <<<<<<<<<<<<<<
 * 	else:
 * 		seed2=""
 */
    __Pyx_INCREF(__pyx_v_encoded);
    __pyx_v_seed2 = __pyx_v_encoded;

    /* "../../pyedit_engine/cy/PyLvl.pyx":14
 * from math import sqrt
 * def makeSeed(encoded):
 * 	if len(encoded)< 49:             # <<<<<<<<<<<<<<
 * 		seed2 = encoded
 * 	else:
 */
    goto __pyx_L3;
  }

  /* "../../pyedit_engine/cy/PyLvl.pyx":17
 * 		seed2 = encoded
 * 	else:
 * 		seed2=""             # <<<<<<<<<<<<<<
 * 		i=0
 * 		while i<50:
 */
  /*else*/ {
    __Pyx_INCREF(__pyx_kp_u__25);
    __pyx_v_seed2 = __pyx_kp_u__25;

    /* "../../pyedit_engine/cy/PyLvl.pyx":18
 * 	else:
 * 		seed2=""
 * 		i=0             # <<<<<<<<<<<<<<
 * 		while i<50:
 * 			seed2+= encoded[(len(encoded)//50)*i]
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_i = __pyx_int_0;

    /* "../../pyedit_engine/cy/PyLvl.pyx":19
 * 		seed2=""
 * 		i=0
 * 		while i<50:             # <<<<<<<<<<<<<<
 * 			seed2+= encoded[(len(encoded)//50)*i]
 * 			i+=1
 */
    while (1) {
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_i, __pyx_int_50, Py_LT); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 19, __pyx_L1_error)
      __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 19, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (!__pyx_t_2) break;

      /* "../../pyedit_engine/cy/PyLvl.pyx":20
 * 		i=0
 * 		while i<50:
 * 			seed2+= encoded[(len(encoded)//50)*i]             # <<<<<<<<<<<<<<
 * 			i+=1
 * 	return xor(hashlib.sha1(seed2.encode()+b"xI25fpAapCQg").hexdigest(),"41274")
 */
      __pyx_t_1 = PyObject_Length(__pyx_v_encoded); if (unlikely(__pyx_t_1 == ((Py_ssize_t)-1))) __PYX_ERR(0, 20, __pyx_L1_error)
      __pyx_t_3 = PyInt_FromSsize_t(__Pyx_div_Py_ssize_t(__pyx_t_1, 50)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 20, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyNumber_Multiply(__pyx_t_3, __pyx_v_i); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 20, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_encoded, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 20, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = PyNumber_InPlaceAdd(__pyx_v_seed2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 20, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF_SET(__pyx_v_seed2, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "../../pyedit_engine/cy/PyLvl.pyx":21
 * 		while i<50:
 * 			seed2+= encoded[(len(encoded)//50)*i]
 * 			i+=1             # <<<<<<<<<<<<<<
 * 	return xor(hashlib.sha1(seed2.encode()+b"xI25fpAapCQg").hexdigest(),"41274")
 * def urlopen(url,p):
 */
      __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_v_i, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 21, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_4 = 0;
    }
  }
  __pyx_L3:;

  /* "../../pyedit_engine/cy/PyLvl.pyx":22
 * 			seed2+= encoded[(len(encoded)//50)*i]
 * 			i+=1
 * 	return xor(hashlib.sha1(seed2.encode()+b"xI25fpAapCQg").hexdigest(),"41274")             # <<<<<<<<<<<<<<
 * def urlopen(url,p):
 * 	t = urllib2.Request(url,p.encode())
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_xor); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_hashlib); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_sha1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_seed2, __pyx_n_s_encode); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_10 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
    __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_9);
    if (likely(__pyx_t_10)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
      __Pyx_INCREF(__pyx_t_10);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_9, function);
    }
  }
  __pyx_t_7 = (__pyx_t_10) ? __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_10) : __Pyx_PyObject_CallNoArg(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
  if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __pyx_t_9 = PyNumber_Add(__pyx_t_7, __pyx_n_b_xI25fpAapCQg); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
    }
  }
  __pyx_t_6 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_7, __pyx_t_9) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_9);
  __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_hexdigest); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
    }
  }
  __pyx_t_5 = (__pyx_t_6) ? __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_6) : __Pyx_PyObject_CallNoArg(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = NULL;
  __pyx_t_11 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_11 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_3)) {
    PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_t_5, __pyx_kp_u_41274};
    __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_11, 2+__pyx_t_11); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 22, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
    PyObject *__pyx_temp[3] = {__pyx_t_8, __pyx_t_5, __pyx_kp_u_41274};
    __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_11, 2+__pyx_t_11); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 22, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(2+__pyx_t_11); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 22, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_8) {
      __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_8); __pyx_t_8 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_11, __pyx_t_5);
    __Pyx_INCREF(__pyx_kp_u_41274);
    __Pyx_GIVEREF(__pyx_kp_u_41274);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_11, __pyx_kp_u_41274);
    __pyx_t_5 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 22, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":13
 * 	import urllib2
 * from math import sqrt
 * def makeSeed(encoded):             # <<<<<<<<<<<<<<
 * 	if len(encoded)< 49:
 * 		seed2 = encoded
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("main.makeSeed", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_seed2);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":23
 * 			i+=1
 * 	return xor(hashlib.sha1(seed2.encode()+b"xI25fpAapCQg").hexdigest(),"41274")
 * def urlopen(url,p):             # <<<<<<<<<<<<<<
 * 	t = urllib2.Request(url,p.encode())
 * 	return urllib2.urlopen(t)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_7urlopen(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_4main_7urlopen = {"urlopen", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_7urlopen, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_4main_7urlopen(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_url = 0;
  PyObject *__pyx_v_p = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("urlopen (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_url,&__pyx_n_s_p,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_url)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_p)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("urlopen", 1, 2, 2, 1); __PYX_ERR(0, 23, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "urlopen") < 0)) __PYX_ERR(0, 23, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_url = values[0];
    __pyx_v_p = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("urlopen", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 23, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("main.urlopen", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4main_6urlopen(__pyx_self, __pyx_v_url, __pyx_v_p);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_6urlopen(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_url, PyObject *__pyx_v_p) {
  PyObject *__pyx_v_t = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("urlopen", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":24
 * 	return xor(hashlib.sha1(seed2.encode()+b"xI25fpAapCQg").hexdigest(),"41274")
 * def urlopen(url,p):
 * 	t = urllib2.Request(url,p.encode())             # <<<<<<<<<<<<<<
 * 	return urllib2.urlopen(t)
 * starting = {"gameVersion":"21","binaryVersion":"35","gdw":"0"}
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_urllib2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_Request); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_p, __pyx_n_s_encode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_3)) {
    PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_v_url, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 24, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
    PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_v_url, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 24, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else
  #endif
  {
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 24, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_v_url);
    __Pyx_GIVEREF(__pyx_v_url);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_v_url);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 24, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_t = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":25
 * def urlopen(url,p):
 * 	t = urllib2.Request(url,p.encode())
 * 	return urllib2.urlopen(t)             # <<<<<<<<<<<<<<
 * starting = {"gameVersion":"21","binaryVersion":"35","gdw":"0"}
 * def getAccountID(username):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_urllib2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_urlopen); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_v_t) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_t);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":23
 * 			i+=1
 * 	return xor(hashlib.sha1(seed2.encode()+b"xI25fpAapCQg").hexdigest(),"41274")
 * def urlopen(url,p):             # <<<<<<<<<<<<<<
 * 	t = urllib2.Request(url,p.encode())
 * 	return urllib2.urlopen(t)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("main.urlopen", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_t);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":27
 * 	return urllib2.urlopen(t)
 * starting = {"gameVersion":"21","binaryVersion":"35","gdw":"0"}
 * def getAccountID(username):             # <<<<<<<<<<<<<<
 * 	diction = {"str":username,"total":"0","page":"0","secret":"Wmfd2893gb7"}
 * 	d = dict(diction)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_9getAccountID(PyObject *__pyx_self, PyObject *__pyx_v_username); /*proto*/
static PyMethodDef __pyx_mdef_4main_9getAccountID = {"getAccountID", (PyCFunction)__pyx_pw_4main_9getAccountID, METH_O, 0};
static PyObject *__pyx_pw_4main_9getAccountID(PyObject *__pyx_self, PyObject *__pyx_v_username) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getAccountID (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_8getAccountID(__pyx_self, ((PyObject *)__pyx_v_username));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_8getAccountID(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_username) {
  PyObject *__pyx_v_diction = NULL;
  PyObject *__pyx_v_d = NULL;
  PyObject *__pyx_v_r = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getAccountID", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":28
 * starting = {"gameVersion":"21","binaryVersion":"35","gdw":"0"}
 * def getAccountID(username):
 * 	diction = {"str":username,"total":"0","page":"0","secret":"Wmfd2893gb7"}             # <<<<<<<<<<<<<<
 * 	d = dict(diction)
 * 	d.update(starting)
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_str, __pyx_v_username) < 0) __PYX_ERR(0, 28, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_total, __pyx_kp_u_0) < 0) __PYX_ERR(0, 28, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_page, __pyx_kp_u_0) < 0) __PYX_ERR(0, 28, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_secret, __pyx_n_u_Wmfd2893gb7) < 0) __PYX_ERR(0, 28, __pyx_L1_error)
  __pyx_v_diction = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":29
 * def getAccountID(username):
 * 	diction = {"str":username,"total":"0","page":"0","secret":"Wmfd2893gb7"}
 * 	d = dict(diction)             # <<<<<<<<<<<<<<
 * 	d.update(starting)
 * 
 */
  __pyx_t_1 = PyDict_Copy(__pyx_v_diction); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_d = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":30
 * 	diction = {"str":username,"total":"0","page":"0","secret":"Wmfd2893gb7"}
 * 	d = dict(diction)
 * 	d.update(starting)             # <<<<<<<<<<<<<<
 * 
 * 	r = requests.post("http://www.boomlings.com/database/getGJUsers20.php",data=d)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_starting); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyDict_Type_update, __pyx_v_d, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":32
 * 	d.update(starting)
 * 
 * 	r = requests.post("http://www.boomlings.com/database/getGJUsers20.php",data=d)             # <<<<<<<<<<<<<<
 * 
 * 	try: return r.text.split(":")[21]
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_requests); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_post); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_data, __pyx_v_d) < 0) __PYX_ERR(0, 32, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__26, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_r = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":34
 * 	r = requests.post("http://www.boomlings.com/database/getGJUsers20.php",data=d)
 * 
 * 	try: return r.text.split(":")[21]             # <<<<<<<<<<<<<<
 * 	except: raise ValueError("Incorrect Username")
 * def xor(data, key):
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_4, &__pyx_t_5, &__pyx_t_6);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_6);
    /*try:*/ {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_r, __pyx_n_s_text); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 34, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 34, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
        __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
        if (likely(__pyx_t_2)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
          __Pyx_INCREF(__pyx_t_2);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_1, function);
        }
      }
      __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_2, __pyx_kp_u__27) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_kp_u__27);
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 34, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_GetItemInt(__pyx_t_3, 21, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 34, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_1;
      __pyx_t_1 = 0;
      goto __pyx_L7_try_return;
    }
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "../../pyedit_engine/cy/PyLvl.pyx":35
 * 
 * 	try: return r.text.split(":")[21]
 * 	except: raise ValueError("Incorrect Username")             # <<<<<<<<<<<<<<
 * def xor(data, key):
 * 	xored = ''.join(chr(ord(x) ^ ord(y)) for (x,y) in zip(data, cycle(key)))
 */
    /*except:*/ {
      __Pyx_AddTraceback("main.getAccountID", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_3, &__pyx_t_2) < 0) __PYX_ERR(0, 35, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_7 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__28, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 35, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_Raise(__pyx_t_7, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __PYX_ERR(0, 35, __pyx_L5_except_error)
    }
    __pyx_L5_except_error:;

    /* "../../pyedit_engine/cy/PyLvl.pyx":34
 * 	r = requests.post("http://www.boomlings.com/database/getGJUsers20.php",data=d)
 * 
 * 	try: return r.text.split(":")[21]             # <<<<<<<<<<<<<<
 * 	except: raise ValueError("Incorrect Username")
 * def xor(data, key):
 */
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_ExceptionReset(__pyx_t_4, __pyx_t_5, __pyx_t_6);
    goto __pyx_L1_error;
    __pyx_L7_try_return:;
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_ExceptionReset(__pyx_t_4, __pyx_t_5, __pyx_t_6);
    goto __pyx_L0;
  }

  /* "../../pyedit_engine/cy/PyLvl.pyx":27
 * 	return urllib2.urlopen(t)
 * starting = {"gameVersion":"21","binaryVersion":"35","gdw":"0"}
 * def getAccountID(username):             # <<<<<<<<<<<<<<
 * 	diction = {"str":username,"total":"0","page":"0","secret":"Wmfd2893gb7"}
 * 	d = dict(diction)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("main.getAccountID", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_diction);
  __Pyx_XDECREF(__pyx_v_d);
  __Pyx_XDECREF(__pyx_v_r);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":36
 * 	try: return r.text.split(":")[21]
 * 	except: raise ValueError("Incorrect Username")
 * def xor(data, key):             # <<<<<<<<<<<<<<
 * 	xored = ''.join(chr(ord(x) ^ ord(y)) for (x,y) in zip(data, cycle(key)))
 * 	return base64.encodestring(xored.encode()).strip()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_11xor(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_4main_11xor = {"xor", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_11xor, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_4main_11xor(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_data = 0;
  PyObject *__pyx_v_key = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xor (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_data,&__pyx_n_s_key,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_data)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_key)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xor", 1, 2, 2, 1); __PYX_ERR(0, 36, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xor") < 0)) __PYX_ERR(0, 36, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_data = values[0];
    __pyx_v_key = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xor", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 36, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("main.xor", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4main_10xor(__pyx_self, __pyx_v_data, __pyx_v_key);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_4main_3xor_2generator(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "../../pyedit_engine/cy/PyLvl.pyx":37
 * 	except: raise ValueError("Incorrect Username")
 * def xor(data, key):
 * 	xored = ''.join(chr(ord(x) ^ ord(y)) for (x,y) in zip(data, cycle(key)))             # <<<<<<<<<<<<<<
 * 	return base64.encodestring(xored.encode()).strip()
 * class Block:
 */

static PyObject *__pyx_pf_4main_3xor_genexpr(PyObject *__pyx_self) {
  struct __pyx_obj_4main___pyx_scope_struct_9_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_4main___pyx_scope_struct_9_genexpr *)__pyx_tp_new_4main___pyx_scope_struct_9_genexpr(__pyx_ptype_4main___pyx_scope_struct_9_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_4main___pyx_scope_struct_9_genexpr *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 37, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_outer_scope = (struct __pyx_obj_4main___pyx_scope_struct_8_xor *) __pyx_self;
  __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_outer_scope));
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_outer_scope);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_4main_3xor_2generator, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_xor_locals_genexpr, __pyx_n_s_main); if (unlikely(!gen)) __PYX_ERR(0, 37, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("main.xor.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_4main_3xor_2generator(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_4main___pyx_scope_struct_9_genexpr *__pyx_cur_scope = ((struct __pyx_obj_4main___pyx_scope_struct_9_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *(*__pyx_t_5)(PyObject *);
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *(*__pyx_t_8)(PyObject *);
  long __pyx_t_9;
  long __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("genexpr", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 37, __pyx_L1_error)
  __pyx_r = PyList_New(0); if (unlikely(!__pyx_r)) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_r);
  if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_data)) { __Pyx_RaiseClosureNameError("data"); __PYX_ERR(0, 37, __pyx_L1_error) }
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_cycle); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (unlikely(!__pyx_cur_scope->__pyx_outer_scope->__pyx_v_key)) { __Pyx_RaiseClosureNameError("key"); __PYX_ERR(0, 37, __pyx_L1_error) }
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_cur_scope->__pyx_outer_scope->__pyx_v_key) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_cur_scope->__pyx_outer_scope->__pyx_v_key);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_data);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_outer_scope->__pyx_v_data);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_cur_scope->__pyx_outer_scope->__pyx_v_data);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_zip, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_4 = 0;
    __pyx_t_5 = NULL;
  } else {
    __pyx_t_4 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 37, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 37, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_5)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 37, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 37, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 37, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 37, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_5(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 37, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    if ((likely(PyTuple_CheckExact(__pyx_t_1))) || (PyList_CheckExact(__pyx_t_1))) {
      PyObject* sequence = __pyx_t_1;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 37, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_3 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 37, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 37, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_7 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 37, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_7)->tp_iternext;
      index = 0; __pyx_t_3 = __pyx_t_8(__pyx_t_7); if (unlikely(!__pyx_t_3)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      index = 1; __pyx_t_6 = __pyx_t_8(__pyx_t_7); if (unlikely(!__pyx_t_6)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_6);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_7), 2) < 0) __PYX_ERR(0, 37, __pyx_L1_error)
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L7_unpacking_done;
      __pyx_L6_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 37, __pyx_L1_error)
      __pyx_L7_unpacking_done:;
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_x);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_x, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_y);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_y, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    __pyx_t_6 = 0;
    __pyx_t_9 = __Pyx_PyObject_Ord(__pyx_cur_scope->__pyx_v_x); if (unlikely(__pyx_t_9 == ((long)(long)(Py_UCS4)-1))) __PYX_ERR(0, 37, __pyx_L1_error)
    __pyx_t_10 = __Pyx_PyObject_Ord(__pyx_cur_scope->__pyx_v_y); if (unlikely(__pyx_t_10 == ((long)(long)(Py_UCS4)-1))) __PYX_ERR(0, 37, __pyx_L1_error)
    __pyx_t_1 = __Pyx_PyInt_From_long((__pyx_t_9 ^ __pyx_t_10)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 37, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_chr, __pyx_t_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 37, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_r, (PyObject*)__pyx_t_6))) __PYX_ERR(0, 37, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":36
 * 	try: return r.text.split(":")[21]
 * 	except: raise ValueError("Incorrect Username")
 * def xor(data, key):             # <<<<<<<<<<<<<<
 * 	xored = ''.join(chr(ord(x) ^ ord(y)) for (x,y) in zip(data, cycle(key)))
 * 	return base64.encodestring(xored.encode()).strip()
 */

static PyObject *__pyx_pf_4main_10xor(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_data, PyObject *__pyx_v_key) {
  struct __pyx_obj_4main___pyx_scope_struct_8_xor *__pyx_cur_scope;
  PyObject *__pyx_v_xored = NULL;
  PyObject *__pyx_gb_4main_3xor_2generator = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("xor", 0);
  __pyx_cur_scope = (struct __pyx_obj_4main___pyx_scope_struct_8_xor *)__pyx_tp_new_4main___pyx_scope_struct_8_xor(__pyx_ptype_4main___pyx_scope_struct_8_xor, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_4main___pyx_scope_struct_8_xor *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 36, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_data = __pyx_v_data;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_data);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_data);
  __pyx_cur_scope->__pyx_v_key = __pyx_v_key;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_key);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_key);

  /* "../../pyedit_engine/cy/PyLvl.pyx":37
 * 	except: raise ValueError("Incorrect Username")
 * def xor(data, key):
 * 	xored = ''.join(chr(ord(x) ^ ord(y)) for (x,y) in zip(data, cycle(key)))             # <<<<<<<<<<<<<<
 * 	return base64.encodestring(xored.encode()).strip()
 * class Block:
 */
  __pyx_t_1 = __pyx_pf_4main_3xor_genexpr(((PyObject*)__pyx_cur_scope)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_Generator_Next(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyUnicode_Join(__pyx_kp_u__25, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_xored = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":38
 * def xor(data, key):
 * 	xored = ''.join(chr(ord(x) ^ ord(y)) for (x,y) in zip(data, cycle(key)))
 * 	return base64.encodestring(xored.encode()).strip()             # <<<<<<<<<<<<<<
 * class Block:
 * 	items = {"1_9_color":"19","green":"8","player_color_1":"15","player_color_2":"16","text":"31","rotation_times_360":"69","target_group_id":"51","z_layer":"24","instant_count_comparison":"88","copy_opacity":"60","custom_rotation_speed":"97","substract_count":"78","pulse_target_type":"52","move_target_enabled":"100","count":"77","spawn_delay":"63","color1":"21","pulse_exclusive":"86","color2":"22","rotation":"6","group_ids":"57","follow_player_y_offset":"92","move_trigger_9_units":"29","multi_trigger":"87","rotation_lock":"70","red":"7","group_parent":"34","dont_enter":"67","touch_dual_mode":"89","spawn_triggered":"62","is_flipped_horizontal":"4","duration":"10","blue":"9","activate_group":"56","dynamic_block":"93","follow_player_y_delay":"91","move_lock_to_player_y":"59","move_lock_to_player_x":"58","target_color_id":"23","follow_y_mod":"73","follow_player_y_speed":"90","is_flipped_vertical":"5","touch_toggle":"82","item_id":"80","glow_disabled":"96","copied_color_hsv_values":"49","hold_mode":"81","pickup_mode":"79","editor_layer_2":"61","editor_layer_1":"20","pulse_detail_only":"66","hsv_enabled_1":"41","hsv_enabled_2":"42","shake_strength":"75","is_active_trigger_type":"36","move_target_pos_coordinates":"101","portal_checked":"13","teleportation_yellow_distance":"54","blending":"17","pulse_hold":"46","pulsing_animation_randomize":"106","size":"32","disable_rotation":"98","collision_block_b_id":"95","high_detail":"103","rotation_degrees":"68","pulse_main_only":"65","pulse_fade_out":"47","x_position":"2","z_order":"25","dont_fade":"64","easing_rate":"85","hsv_values_1":"43","hsv_values_2":"44","follow_x_mod":"72","pulse_fade_in":"45","spawn_editor_disable":"102","move_trigger_x_units":"28","blockid":"1","linked_group":"108","follow_player_y_max_speed":"105","touch_triggered":"11","opacity":"35","copied_color_id":"50","pulse_mode":"48","y_position":"3","shake_interval":"84","pulsing_animation_speed":"107","count_multi_activate":"99","easing":"30","follow_group_id":"71"}
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_base64); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_encodestring); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(__pyx_v_xored == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 38, __pyx_L1_error)
  }
  __pyx_t_3 = PyUnicode_AsEncodedString(__pyx_v_xored, NULL, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_strip); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":36
 * 	try: return r.text.split(":")[21]
 * 	except: raise ValueError("Incorrect Username")
 * def xor(data, key):             # <<<<<<<<<<<<<<
 * 	xored = ''.join(chr(ord(x) ^ ord(y)) for (x,y) in zip(data, cycle(key)))
 * 	return base64.encodestring(xored.encode()).strip()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("main.xor", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_xored);
  __Pyx_XDECREF(__pyx_gb_4main_3xor_2generator);
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":42
 * 	items = {"1_9_color":"19","green":"8","player_color_1":"15","player_color_2":"16","text":"31","rotation_times_360":"69","target_group_id":"51","z_layer":"24","instant_count_comparison":"88","copy_opacity":"60","custom_rotation_speed":"97","substract_count":"78","pulse_target_type":"52","move_target_enabled":"100","count":"77","spawn_delay":"63","color1":"21","pulse_exclusive":"86","color2":"22","rotation":"6","group_ids":"57","follow_player_y_offset":"92","move_trigger_9_units":"29","multi_trigger":"87","rotation_lock":"70","red":"7","group_parent":"34","dont_enter":"67","touch_dual_mode":"89","spawn_triggered":"62","is_flipped_horizontal":"4","duration":"10","blue":"9","activate_group":"56","dynamic_block":"93","follow_player_y_delay":"91","move_lock_to_player_y":"59","move_lock_to_player_x":"58","target_color_id":"23","follow_y_mod":"73","follow_player_y_speed":"90","is_flipped_vertical":"5","touch_toggle":"82","item_id":"80","glow_disabled":"96","copied_color_hsv_values":"49","hold_mode":"81","pickup_mode":"79","editor_layer_2":"61","editor_layer_1":"20","pulse_detail_only":"66","hsv_enabled_1":"41","hsv_enabled_2":"42","shake_strength":"75","is_active_trigger_type":"36","move_target_pos_coordinates":"101","portal_checked":"13","teleportation_yellow_distance":"54","blending":"17","pulse_hold":"46","pulsing_animation_randomize":"106","size":"32","disable_rotation":"98","collision_block_b_id":"95","high_detail":"103","rotation_degrees":"68","pulse_main_only":"65","pulse_fade_out":"47","x_position":"2","z_order":"25","dont_fade":"64","easing_rate":"85","hsv_values_1":"43","hsv_values_2":"44","follow_x_mod":"72","pulse_fade_in":"45","spawn_editor_disable":"102","move_trigger_x_units":"28","blockid":"1","linked_group":"108","follow_player_y_max_speed":"105","touch_triggered":"11","opacity":"35","copied_color_id":"50","pulse_mode":"48","y_position":"3","shake_interval":"84","pulsing_animation_speed":"107","count_multi_activate":"99","easing":"30","follow_group_id":"71"}
 * 	otheritems = {v: k for k, v in items.items()}
 * 	def __init__(self,**kwargs):             # <<<<<<<<<<<<<<
 * 		self.levelstring = ""
 * 		self.json = {"blockid":str(kwargs.get("blockid")),"x_position":str(kwargs.get("x_position")),"y_position":str(kwargs.get("y_position"))}
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_5Block_1__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_4main_5Block_1__init__ = {"__init__", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_5Block_1__init__, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_4main_5Block_1__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_kwargs = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return NULL;
  __Pyx_GOTREF(__pyx_v_kwargs);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kwargs, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 42, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 42, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
  __Pyx_AddTraceback("main.Block.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4main_5Block___init__(__pyx_self, __pyx_v_self, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_5Block___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_kwargs) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":43
 * 	otheritems = {v: k for k, v in items.items()}
 * 	def __init__(self,**kwargs):
 * 		self.levelstring = ""             # <<<<<<<<<<<<<<
 * 		self.json = {"blockid":str(kwargs.get("blockid")),"x_position":str(kwargs.get("x_position")),"y_position":str(kwargs.get("y_position"))}
 * 		for i in kwargs: self.json[i] = kwargs[i]
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_levelstring, __pyx_kp_u__25) < 0) __PYX_ERR(0, 43, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":44
 * 	def __init__(self,**kwargs):
 * 		self.levelstring = ""
 * 		self.json = {"blockid":str(kwargs.get("blockid")),"x_position":str(kwargs.get("x_position")),"y_position":str(kwargs.get("y_position"))}             # <<<<<<<<<<<<<<
 * 		for i in kwargs: self.json[i] = kwargs[i]
 * 	def __getitem__(self,e):
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyDict_GetItemDefault(__pyx_v_kwargs, __pyx_n_u_blockid, Py_None); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_blockid, __pyx_t_3) < 0) __PYX_ERR(0, 44, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_GetItemDefault(__pyx_v_kwargs, __pyx_n_u_x_position, Py_None); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_x_position, __pyx_t_2) < 0) __PYX_ERR(0, 44, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyDict_GetItemDefault(__pyx_v_kwargs, __pyx_n_u_y_position, Py_None); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_y_position, __pyx_t_3) < 0) __PYX_ERR(0, 44, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_json, __pyx_t_1) < 0) __PYX_ERR(0, 44, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":45
 * 		self.levelstring = ""
 * 		self.json = {"blockid":str(kwargs.get("blockid")),"x_position":str(kwargs.get("x_position")),"y_position":str(kwargs.get("y_position"))}
 * 		for i in kwargs: self.json[i] = kwargs[i]             # <<<<<<<<<<<<<<
 * 	def __getitem__(self,e):
 * 		if e in self.json:
 */
  __pyx_t_4 = 0;
  __pyx_t_3 = __Pyx_dict_iterator(__pyx_v_kwargs, 1, ((PyObject *)NULL), (&__pyx_t_5), (&__pyx_t_6)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_3;
  __pyx_t_3 = 0;
  while (1) {
    __pyx_t_7 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_5, &__pyx_t_4, &__pyx_t_3, NULL, NULL, __pyx_t_6);
    if (unlikely(__pyx_t_7 == 0)) break;
    if (unlikely(__pyx_t_7 == -1)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyDict_GetItem(__pyx_v_kwargs, __pyx_v_i); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_json); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely(PyObject_SetItem(__pyx_t_2, __pyx_v_i, __pyx_t_3) < 0)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":42
 * 	items = {"1_9_color":"19","green":"8","player_color_1":"15","player_color_2":"16","text":"31","rotation_times_360":"69","target_group_id":"51","z_layer":"24","instant_count_comparison":"88","copy_opacity":"60","custom_rotation_speed":"97","substract_count":"78","pulse_target_type":"52","move_target_enabled":"100","count":"77","spawn_delay":"63","color1":"21","pulse_exclusive":"86","color2":"22","rotation":"6","group_ids":"57","follow_player_y_offset":"92","move_trigger_9_units":"29","multi_trigger":"87","rotation_lock":"70","red":"7","group_parent":"34","dont_enter":"67","touch_dual_mode":"89","spawn_triggered":"62","is_flipped_horizontal":"4","duration":"10","blue":"9","activate_group":"56","dynamic_block":"93","follow_player_y_delay":"91","move_lock_to_player_y":"59","move_lock_to_player_x":"58","target_color_id":"23","follow_y_mod":"73","follow_player_y_speed":"90","is_flipped_vertical":"5","touch_toggle":"82","item_id":"80","glow_disabled":"96","copied_color_hsv_values":"49","hold_mode":"81","pickup_mode":"79","editor_layer_2":"61","editor_layer_1":"20","pulse_detail_only":"66","hsv_enabled_1":"41","hsv_enabled_2":"42","shake_strength":"75","is_active_trigger_type":"36","move_target_pos_coordinates":"101","portal_checked":"13","teleportation_yellow_distance":"54","blending":"17","pulse_hold":"46","pulsing_animation_randomize":"106","size":"32","disable_rotation":"98","collision_block_b_id":"95","high_detail":"103","rotation_degrees":"68","pulse_main_only":"65","pulse_fade_out":"47","x_position":"2","z_order":"25","dont_fade":"64","easing_rate":"85","hsv_values_1":"43","hsv_values_2":"44","follow_x_mod":"72","pulse_fade_in":"45","spawn_editor_disable":"102","move_trigger_x_units":"28","blockid":"1","linked_group":"108","follow_player_y_max_speed":"105","touch_triggered":"11","opacity":"35","copied_color_id":"50","pulse_mode":"48","y_position":"3","shake_interval":"84","pulsing_animation_speed":"107","count_multi_activate":"99","easing":"30","follow_group_id":"71"}
 * 	otheritems = {v: k for k, v in items.items()}
 * 	def __init__(self,**kwargs):             # <<<<<<<<<<<<<<
 * 		self.levelstring = ""
 * 		self.json = {"blockid":str(kwargs.get("blockid")),"x_position":str(kwargs.get("x_position")),"y_position":str(kwargs.get("y_position"))}
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("main.Block.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":46
 * 		self.json = {"blockid":str(kwargs.get("blockid")),"x_position":str(kwargs.get("x_position")),"y_position":str(kwargs.get("y_position"))}
 * 		for i in kwargs: self.json[i] = kwargs[i]
 * 	def __getitem__(self,e):             # <<<<<<<<<<<<<<
 * 		if e in self.json:
 * 			return self.json[e]
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_5Block_3__getitem__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_4main_5Block_3__getitem__ = {"__getitem__", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_5Block_3__getitem__, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_4main_5Block_3__getitem__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_e = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_e,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_e)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__getitem__", 1, 2, 2, 1); __PYX_ERR(0, 46, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__getitem__") < 0)) __PYX_ERR(0, 46, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_e = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__getitem__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 46, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("main.Block.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4main_5Block_2__getitem__(__pyx_self, __pyx_v_self, __pyx_v_e);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_5Block_2__getitem__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":47
 * 		for i in kwargs: self.json[i] = kwargs[i]
 * 	def __getitem__(self,e):
 * 		if e in self.json:             # <<<<<<<<<<<<<<
 * 			return self.json[e]
 * 		else:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_json); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 47, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_v_e, __pyx_t_1, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 47, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "../../pyedit_engine/cy/PyLvl.pyx":48
 * 	def __getitem__(self,e):
 * 		if e in self.json:
 * 			return self.json[e]             # <<<<<<<<<<<<<<
 * 		else:
 * 			return '0'
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_json); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 48, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_e); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 48, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "../../pyedit_engine/cy/PyLvl.pyx":47
 * 		for i in kwargs: self.json[i] = kwargs[i]
 * 	def __getitem__(self,e):
 * 		if e in self.json:             # <<<<<<<<<<<<<<
 * 			return self.json[e]
 * 		else:
 */
  }

  /* "../../pyedit_engine/cy/PyLvl.pyx":50
 * 			return self.json[e]
 * 		else:
 * 			return '0'             # <<<<<<<<<<<<<<
 * 	def __setitem__(self,e,f):
 * 		self.json[e] = f
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_kp_u_0);
    __pyx_r = __pyx_kp_u_0;
    goto __pyx_L0;
  }

  /* "../../pyedit_engine/cy/PyLvl.pyx":46
 * 		self.json = {"blockid":str(kwargs.get("blockid")),"x_position":str(kwargs.get("x_position")),"y_position":str(kwargs.get("y_position"))}
 * 		for i in kwargs: self.json[i] = kwargs[i]
 * 	def __getitem__(self,e):             # <<<<<<<<<<<<<<
 * 		if e in self.json:
 * 			return self.json[e]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("main.Block.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":51
 * 		else:
 * 			return '0'
 * 	def __setitem__(self,e,f):             # <<<<<<<<<<<<<<
 * 		self.json[e] = f
 * 	def __str__(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_5Block_5__setitem__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_4main_5Block_5__setitem__ = {"__setitem__", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_5Block_5__setitem__, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_4main_5Block_5__setitem__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_e = 0;
  PyObject *__pyx_v_f = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_e,&__pyx_n_s_f,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_e)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__setitem__", 1, 3, 3, 1); __PYX_ERR(0, 51, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_f)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__setitem__", 1, 3, 3, 2); __PYX_ERR(0, 51, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__setitem__") < 0)) __PYX_ERR(0, 51, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_self = values[0];
    __pyx_v_e = values[1];
    __pyx_v_f = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setitem__", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 51, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("main.Block.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4main_5Block_4__setitem__(__pyx_self, __pyx_v_self, __pyx_v_e, __pyx_v_f);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_5Block_4__setitem__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_e, PyObject *__pyx_v_f) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":52
 * 			return '0'
 * 	def __setitem__(self,e,f):
 * 		self.json[e] = f             # <<<<<<<<<<<<<<
 * 	def __str__(self):
 * 		ar = []
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_json); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 52, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyObject_SetItem(__pyx_t_1, __pyx_v_e, __pyx_v_f) < 0)) __PYX_ERR(0, 52, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":51
 * 		else:
 * 			return '0'
 * 	def __setitem__(self,e,f):             # <<<<<<<<<<<<<<
 * 		self.json[e] = f
 * 	def __str__(self):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("main.Block.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":53
 * 	def __setitem__(self,e,f):
 * 		self.json[e] = f
 * 	def __str__(self):             # <<<<<<<<<<<<<<
 * 		ar = []
 * 		for i in self.json:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_5Block_7__str__(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_4main_5Block_7__str__ = {"__str__", (PyCFunction)__pyx_pw_4main_5Block_7__str__, METH_O, 0};
static PyObject *__pyx_pw_4main_5Block_7__str__(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_5Block_6__str__(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_5Block_6__str__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_v_ar = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__str__", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":54
 * 		self.json[e] = f
 * 	def __str__(self):
 * 		ar = []             # <<<<<<<<<<<<<<
 * 		for i in self.json:
 * 			ar.append(str(Block.items[i]))
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 54, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_ar = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":55
 * 	def __str__(self):
 * 		ar = []
 * 		for i in self.json:             # <<<<<<<<<<<<<<
 * 			ar.append(str(Block.items[i]))
 * 			ar.append(str(self.json[i]))
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_json); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 55, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 55, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 55, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 55, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 55, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 55, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_4(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 55, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "../../pyedit_engine/cy/PyLvl.pyx":56
 * 		ar = []
 * 		for i in self.json:
 * 			ar.append(str(Block.items[i]))             # <<<<<<<<<<<<<<
 * 			ar.append(str(self.json[i]))
 * 		return ','.join(ar)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_Block); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 56, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_items); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 56, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_t_5, __pyx_v_i); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 56, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 56, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_6 = __Pyx_PyList_Append(__pyx_v_ar, __pyx_t_5); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(0, 56, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "../../pyedit_engine/cy/PyLvl.pyx":57
 * 		for i in self.json:
 * 			ar.append(str(Block.items[i]))
 * 			ar.append(str(self.json[i]))             # <<<<<<<<<<<<<<
 * 		return ','.join(ar)
 * 	def change(self,**kwargs):
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_json); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 57, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_t_5, __pyx_v_i); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 57, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 57, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_6 = __Pyx_PyList_Append(__pyx_v_ar, __pyx_t_5); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(0, 57, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "../../pyedit_engine/cy/PyLvl.pyx":55
 * 	def __str__(self):
 * 		ar = []
 * 		for i in self.json:             # <<<<<<<<<<<<<<
 * 			ar.append(str(Block.items[i]))
 * 			ar.append(str(self.json[i]))
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":58
 * 			ar.append(str(Block.items[i]))
 * 			ar.append(str(self.json[i]))
 * 		return ','.join(ar)             # <<<<<<<<<<<<<<
 * 	def change(self,**kwargs):
 * 		a = Block(**self.json)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyUnicode_Join(__pyx_kp_u__29, __pyx_v_ar); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 58, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":53
 * 	def __setitem__(self,e,f):
 * 		self.json[e] = f
 * 	def __str__(self):             # <<<<<<<<<<<<<<
 * 		ar = []
 * 		for i in self.json:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("main.Block.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ar);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":59
 * 			ar.append(str(self.json[i]))
 * 		return ','.join(ar)
 * 	def change(self,**kwargs):             # <<<<<<<<<<<<<<
 * 		a = Block(**self.json)
 * 		for i in kwargs:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_5Block_9change(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_4main_5Block_9change = {"change", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_5Block_9change, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_4main_5Block_9change(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_kwargs = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("change (wrapper)", 0);
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return NULL;
  __Pyx_GOTREF(__pyx_v_kwargs);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kwargs, values, pos_args, "change") < 0)) __PYX_ERR(0, 59, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("change", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 59, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
  __Pyx_AddTraceback("main.Block.change", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4main_5Block_8change(__pyx_self, __pyx_v_self, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_5Block_8change(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_kwargs) {
  PyObject *__pyx_v_a = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("change", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":60
 * 		return ','.join(ar)
 * 	def change(self,**kwargs):
 * 		a = Block(**self.json)             # <<<<<<<<<<<<<<
 * 		for i in kwargs:
 * 			a[i] = kwargs[i]
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_Block); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_json); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (unlikely(__pyx_t_3 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "argument after ** must be a mapping, not NoneType");
    __PYX_ERR(0, 60, __pyx_L1_error)
  }
  if (likely(PyDict_CheckExact(__pyx_t_3))) {
    __pyx_t_2 = PyDict_Copy(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 60, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_2 = PyObject_CallFunctionObjArgs((PyObject*)&PyDict_Type, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 60, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_empty_tuple, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_a = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":61
 * 	def change(self,**kwargs):
 * 		a = Block(**self.json)
 * 		for i in kwargs:             # <<<<<<<<<<<<<<
 * 			a[i] = kwargs[i]
 * 		return a
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = __Pyx_dict_iterator(__pyx_v_kwargs, 1, ((PyObject *)NULL), (&__pyx_t_5), (&__pyx_t_6)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __pyx_t_3 = __pyx_t_2;
  __pyx_t_2 = 0;
  while (1) {
    __pyx_t_7 = __Pyx_dict_iter_next(__pyx_t_3, __pyx_t_5, &__pyx_t_4, &__pyx_t_2, NULL, NULL, __pyx_t_6);
    if (unlikely(__pyx_t_7 == 0)) break;
    if (unlikely(__pyx_t_7 == -1)) __PYX_ERR(0, 61, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "../../pyedit_engine/cy/PyLvl.pyx":62
 * 		a = Block(**self.json)
 * 		for i in kwargs:
 * 			a[i] = kwargs[i]             # <<<<<<<<<<<<<<
 * 		return a
 * 	@staticmethod
 */
    __pyx_t_2 = __Pyx_PyDict_GetItem(__pyx_v_kwargs, __pyx_v_i); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 62, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely(PyObject_SetItem(__pyx_v_a, __pyx_v_i, __pyx_t_2) < 0)) __PYX_ERR(0, 62, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":63
 * 		for i in kwargs:
 * 			a[i] = kwargs[i]
 * 		return a             # <<<<<<<<<<<<<<
 * 	@staticmethod
 * 	def blockFromString(stri):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_a);
  __pyx_r = __pyx_v_a;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":59
 * 			ar.append(str(self.json[i]))
 * 		return ','.join(ar)
 * 	def change(self,**kwargs):             # <<<<<<<<<<<<<<
 * 		a = Block(**self.json)
 * 		for i in kwargs:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("main.Block.change", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_a);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":65
 * 		return a
 * 	@staticmethod
 * 	def blockFromString(stri):             # <<<<<<<<<<<<<<
 * 		a = stri.split(',')
 * 		evens = a[1::2]
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_5Block_11blockFromString(PyObject *__pyx_self, PyObject *__pyx_v_stri); /*proto*/
static PyMethodDef __pyx_mdef_4main_5Block_11blockFromString = {"blockFromString", (PyCFunction)__pyx_pw_4main_5Block_11blockFromString, METH_O, 0};
static PyObject *__pyx_pw_4main_5Block_11blockFromString(PyObject *__pyx_self, PyObject *__pyx_v_stri) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("blockFromString (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_5Block_10blockFromString(__pyx_self, ((PyObject *)__pyx_v_stri));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_5Block_10blockFromString(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_stri) {
  PyObject *__pyx_v_a = NULL;
  PyObject *__pyx_v_evens = NULL;
  PyObject *__pyx_v_odds = NULL;
  PyObject *__pyx_v_jso = NULL;
  Py_ssize_t __pyx_v_x;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_bloc = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("blockFromString", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":66
 * 	@staticmethod
 * 	def blockFromString(stri):
 * 		a = stri.split(',')             # <<<<<<<<<<<<<<
 * 		evens = a[1::2]
 * 		odds = a[0::2]
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_stri, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_kp_u__29) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_u__29);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_a = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":67
 * 	def blockFromString(stri):
 * 		a = stri.split(',')
 * 		evens = a[1::2]             # <<<<<<<<<<<<<<
 * 		odds = a[0::2]
 * 		jso = {}
 */
  __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_a, __pyx_slice__30); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_evens = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":68
 * 		a = stri.split(',')
 * 		evens = a[1::2]
 * 		odds = a[0::2]             # <<<<<<<<<<<<<<
 * 		jso = {}
 * 		for x in range(len(odds)):
 */
  __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_a, __pyx_slice__31); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_odds = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":69
 * 		evens = a[1::2]
 * 		odds = a[0::2]
 * 		jso = {}             # <<<<<<<<<<<<<<
 * 		for x in range(len(odds)):
 * 			i = odds[x]
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 69, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_jso = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":70
 * 		odds = a[0::2]
 * 		jso = {}
 * 		for x in range(len(odds)):             # <<<<<<<<<<<<<<
 * 			i = odds[x]
 * 			if i in Block.otheritems:
 */
  __pyx_t_4 = PyObject_Length(__pyx_v_odds); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(0, 70, __pyx_L1_error)
  __pyx_t_5 = __pyx_t_4;
  for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
    __pyx_v_x = __pyx_t_6;

    /* "../../pyedit_engine/cy/PyLvl.pyx":71
 * 		jso = {}
 * 		for x in range(len(odds)):
 * 			i = odds[x]             # <<<<<<<<<<<<<<
 * 			if i in Block.otheritems:
 * 				jso[Block.otheritems[i]] = evens[x]
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_odds, __pyx_v_x, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 71, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "../../pyedit_engine/cy/PyLvl.pyx":72
 * 		for x in range(len(odds)):
 * 			i = odds[x]
 * 			if i in Block.otheritems:             # <<<<<<<<<<<<<<
 * 				jso[Block.otheritems[i]] = evens[x]
 * 		bloc = Block(**jso)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_Block); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 72, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_otheritems); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 72, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_7 = (__Pyx_PySequence_ContainsTF(__pyx_v_i, __pyx_t_2, Py_EQ)); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 72, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_8 = (__pyx_t_7 != 0);
    if (__pyx_t_8) {

      /* "../../pyedit_engine/cy/PyLvl.pyx":73
 * 			i = odds[x]
 * 			if i in Block.otheritems:
 * 				jso[Block.otheritems[i]] = evens[x]             # <<<<<<<<<<<<<<
 * 		bloc = Block(**jso)
 * 		return bloc
 */
      __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_evens, __pyx_v_x, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 73, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_Block); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 73, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_otheritems); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 73, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_t_3, __pyx_v_i); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 73, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(PyDict_SetItem(__pyx_v_jso, __pyx_t_1, __pyx_t_2) < 0)) __PYX_ERR(0, 73, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "../../pyedit_engine/cy/PyLvl.pyx":72
 * 		for x in range(len(odds)):
 * 			i = odds[x]
 * 			if i in Block.otheritems:             # <<<<<<<<<<<<<<
 * 				jso[Block.otheritems[i]] = evens[x]
 * 		bloc = Block(**jso)
 */
    }
  }

  /* "../../pyedit_engine/cy/PyLvl.pyx":74
 * 			if i in Block.otheritems:
 * 				jso[Block.otheritems[i]] = evens[x]
 * 		bloc = Block(**jso)             # <<<<<<<<<<<<<<
 * 		return bloc
 * 	def __repr__(self):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Block); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 74, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyDict_Copy(__pyx_v_jso); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 74, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 74, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_bloc = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":75
 * 				jso[Block.otheritems[i]] = evens[x]
 * 		bloc = Block(**jso)
 * 		return bloc             # <<<<<<<<<<<<<<
 * 	def __repr__(self):
 * 		return self.__str__()
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_bloc);
  __pyx_r = __pyx_v_bloc;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":65
 * 		return a
 * 	@staticmethod
 * 	def blockFromString(stri):             # <<<<<<<<<<<<<<
 * 		a = stri.split(',')
 * 		evens = a[1::2]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("main.Block.blockFromString", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_a);
  __Pyx_XDECREF(__pyx_v_evens);
  __Pyx_XDECREF(__pyx_v_odds);
  __Pyx_XDECREF(__pyx_v_jso);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_bloc);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":76
 * 		bloc = Block(**jso)
 * 		return bloc
 * 	def __repr__(self):             # <<<<<<<<<<<<<<
 * 		return self.__str__()
 * 	def coords(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_5Block_13__repr__(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_4main_5Block_13__repr__ = {"__repr__", (PyCFunction)__pyx_pw_4main_5Block_13__repr__, METH_O, 0};
static PyObject *__pyx_pw_4main_5Block_13__repr__(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_5Block_12__repr__(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_5Block_12__repr__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":77
 * 		return bloc
 * 	def __repr__(self):
 * 		return self.__str__()             # <<<<<<<<<<<<<<
 * 	def coords(self):
 * 		return [float(self['x_position']), float(self['y_position'])]
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_str_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 77, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 77, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":76
 * 		bloc = Block(**jso)
 * 		return bloc
 * 	def __repr__(self):             # <<<<<<<<<<<<<<
 * 		return self.__str__()
 * 	def coords(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("main.Block.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":78
 * 	def __repr__(self):
 * 		return self.__str__()
 * 	def coords(self):             # <<<<<<<<<<<<<<
 * 		return [float(self['x_position']), float(self['y_position'])]
 * 	def setCoords(self, x='d', y='d'):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_5Block_15coords(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_4main_5Block_15coords = {"coords", (PyCFunction)__pyx_pw_4main_5Block_15coords, METH_O, 0};
static PyObject *__pyx_pw_4main_5Block_15coords(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("coords (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_5Block_14coords(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_5Block_14coords(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("coords", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":79
 * 		return self.__str__()
 * 	def coords(self):
 * 		return [float(self['x_position']), float(self['y_position'])]             # <<<<<<<<<<<<<<
 * 	def setCoords(self, x='d', y='d'):
 * 		if x!='d':
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_self, __pyx_n_u_x_position); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyNumber_Float(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_self, __pyx_n_u_y_position); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyNumber_Float(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_t_3);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":78
 * 	def __repr__(self):
 * 		return self.__str__()
 * 	def coords(self):             # <<<<<<<<<<<<<<
 * 		return [float(self['x_position']), float(self['y_position'])]
 * 	def setCoords(self, x='d', y='d'):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("main.Block.coords", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":80
 * 	def coords(self):
 * 		return [float(self['x_position']), float(self['y_position'])]
 * 	def setCoords(self, x='d', y='d'):             # <<<<<<<<<<<<<<
 * 		if x!='d':
 * 			self['x_position'] = str(x)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_5Block_17setCoords(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_4main_5Block_17setCoords = {"setCoords", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_5Block_17setCoords, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_4main_5Block_17setCoords(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setCoords (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[3] = {0,0,0};
    values[1] = ((PyObject *)((PyObject*)__pyx_n_u_d));
    values[2] = ((PyObject *)((PyObject*)__pyx_n_u_d));
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x);
          if (value) { values[1] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_y);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setCoords") < 0)) __PYX_ERR(0, 80, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_x = values[1];
    __pyx_v_y = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setCoords", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 80, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("main.Block.setCoords", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4main_5Block_16setCoords(__pyx_self, __pyx_v_self, __pyx_v_x, __pyx_v_y);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_5Block_16setCoords(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setCoords", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":81
 * 		return [float(self['x_position']), float(self['y_position'])]
 * 	def setCoords(self, x='d', y='d'):
 * 		if x!='d':             # <<<<<<<<<<<<<<
 * 			self['x_position'] = str(x)
 * 		if y!='d':
 */
  __pyx_t_1 = (__Pyx_PyUnicode_Equals(__pyx_v_x, __pyx_n_u_d, Py_NE)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 81, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "../../pyedit_engine/cy/PyLvl.pyx":82
 * 	def setCoords(self, x='d', y='d'):
 * 		if x!='d':
 * 			self['x_position'] = str(x)             # <<<<<<<<<<<<<<
 * 		if y!='d':
 * 			self['y_position'] = str(y)
 */
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 82, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely(PyObject_SetItem(__pyx_v_self, __pyx_n_u_x_position, __pyx_t_2) < 0)) __PYX_ERR(0, 82, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "../../pyedit_engine/cy/PyLvl.pyx":81
 * 		return [float(self['x_position']), float(self['y_position'])]
 * 	def setCoords(self, x='d', y='d'):
 * 		if x!='d':             # <<<<<<<<<<<<<<
 * 			self['x_position'] = str(x)
 * 		if y!='d':
 */
  }

  /* "../../pyedit_engine/cy/PyLvl.pyx":83
 * 		if x!='d':
 * 			self['x_position'] = str(x)
 * 		if y!='d':             # <<<<<<<<<<<<<<
 * 			self['y_position'] = str(y)
 * 	def rotate(self, degrees=0.):
 */
  __pyx_t_1 = (__Pyx_PyUnicode_Equals(__pyx_v_y, __pyx_n_u_d, Py_NE)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 83, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "../../pyedit_engine/cy/PyLvl.pyx":84
 * 			self['x_position'] = str(x)
 * 		if y!='d':
 * 			self['y_position'] = str(y)             # <<<<<<<<<<<<<<
 * 	def rotate(self, degrees=0.):
 * 		rot = float(self['rotation'])
 */
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_v_y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 84, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely(PyObject_SetItem(__pyx_v_self, __pyx_n_u_y_position, __pyx_t_2) < 0)) __PYX_ERR(0, 84, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "../../pyedit_engine/cy/PyLvl.pyx":83
 * 		if x!='d':
 * 			self['x_position'] = str(x)
 * 		if y!='d':             # <<<<<<<<<<<<<<
 * 			self['y_position'] = str(y)
 * 	def rotate(self, degrees=0.):
 */
  }

  /* "../../pyedit_engine/cy/PyLvl.pyx":80
 * 	def coords(self):
 * 		return [float(self['x_position']), float(self['y_position'])]
 * 	def setCoords(self, x='d', y='d'):             # <<<<<<<<<<<<<<
 * 		if x!='d':
 * 			self['x_position'] = str(x)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("main.Block.setCoords", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":85
 * 		if y!='d':
 * 			self['y_position'] = str(y)
 * 	def rotate(self, degrees=0.):             # <<<<<<<<<<<<<<
 * 		rot = float(self['rotation'])
 * 		self['rotation'] = str(rot+degrees)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_5Block_19rotate(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_4main_5Block_19rotate = {"rotate", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_5Block_19rotate, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_4main_5Block_19rotate(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_degrees = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rotate (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_degrees,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)((PyObject*)__pyx_float_0_));
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_degrees);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "rotate") < 0)) __PYX_ERR(0, 85, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_degrees = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("rotate", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 85, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("main.Block.rotate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4main_5Block_18rotate(__pyx_self, __pyx_v_self, __pyx_v_degrees);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_5Block_18rotate(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_degrees) {
  double __pyx_v_rot;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("rotate", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":86
 * 			self['y_position'] = str(y)
 * 	def rotate(self, degrees=0.):
 * 		rot = float(self['rotation'])             # <<<<<<<<<<<<<<
 * 		self['rotation'] = str(rot+degrees)
 * class Header:
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_self, __pyx_n_u_rotation); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_AsDouble(__pyx_t_1); if (unlikely(__pyx_t_2 == ((double)((double)-1)) && PyErr_Occurred())) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_rot = __pyx_t_2;

  /* "../../pyedit_engine/cy/PyLvl.pyx":87
 * 	def rotate(self, degrees=0.):
 * 		rot = float(self['rotation'])
 * 		self['rotation'] = str(rot+degrees)             # <<<<<<<<<<<<<<
 * class Header:
 * 	key = {'mini': 'kA3', 'ground_line': 'kA17', 'background': 'kA6', 'dual': 'kA8', 'fade_out': 'kA16', 'ground': 'kA7', 'song_offset': 'kA13', 'colors': 'kS38', '2_player': 'kA10', 'vehicle': 'kA2', 'font': 'kA18', 'speed': 'kA4', 'fade_in': 'kA15',"nothing":"kA14","idk":"kA9","nutin":"kA11","ww":"kS39"}
 */
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_rot); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyNumber_Add(__pyx_t_1, __pyx_v_degrees); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(PyObject_SetItem(__pyx_v_self, __pyx_n_u_rotation, __pyx_t_1) < 0)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":85
 * 		if y!='d':
 * 			self['y_position'] = str(y)
 * 	def rotate(self, degrees=0.):             # <<<<<<<<<<<<<<
 * 		rot = float(self['rotation'])
 * 		self['rotation'] = str(rot+degrees)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("main.Block.rotate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":90
 * class Header:
 * 	key = {'mini': 'kA3', 'ground_line': 'kA17', 'background': 'kA6', 'dual': 'kA8', 'fade_out': 'kA16', 'ground': 'kA7', 'song_offset': 'kA13', 'colors': 'kS38', '2_player': 'kA10', 'vehicle': 'kA2', 'font': 'kA18', 'speed': 'kA4', 'fade_in': 'kA15',"nothing":"kA14","idk":"kA9","nutin":"kA11","ww":"kS39"}
 * 	def __init__(self,**kwargs):             # <<<<<<<<<<<<<<
 * 		self.json = {'colors': '1_40_2_125_3_255_11_255_12_255_13_255_4_-1_6_1000_7_1_15_1_18_0_8_1|1_0_2_102_3_255_11_255_12_255_13_255_4_-1_6_1001_7_1_15_1_18_0_8_1|1_0_2_102_3_255_11_255_12_255_13_255_4_-1_6_1009_7_1_15_1_18_0_8_1|1_255_2_255_3_255_11_255_12_255_13_255_4_-1_6_1002_5_1_7_1_15_1_18_0_8_1|1_0_2_255_3_125_11_255_12_255_13_255_4_-1_6_1005_5_1_7_1_15_1_18_0_8_1|1_0_2_255_3_125_11_255_12_255_13_255_4_-1_6_1006_5_1_7_1_15_1_18_0_8_1|1_0_2_0_3_0_11_255_12_255_13_255_4_-1_6_3_7_1_15_1_18_0_8_1|','song_offset': '0','fade_in': '0','fade_out': '0',"nothing":"",'background': '1', 'ground': '0', 'ground_line': '0', 'font': '0',"ww":"0","vehicle":'0','mini':'0','dual':'0',"speed":"0","idk":"0","2_player":"0","nutin":"0"}
 * 		for i in kwargs:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_6Header_1__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_4main_6Header_1__init__ = {"__init__", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_6Header_1__init__, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_4main_6Header_1__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_kwargs = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return NULL;
  __Pyx_GOTREF(__pyx_v_kwargs);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kwargs, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 90, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 90, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
  __Pyx_AddTraceback("main.Header.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4main_6Header___init__(__pyx_self, __pyx_v_self, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_6Header___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_kwargs) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":91
 * 	key = {'mini': 'kA3', 'ground_line': 'kA17', 'background': 'kA6', 'dual': 'kA8', 'fade_out': 'kA16', 'ground': 'kA7', 'song_offset': 'kA13', 'colors': 'kS38', '2_player': 'kA10', 'vehicle': 'kA2', 'font': 'kA18', 'speed': 'kA4', 'fade_in': 'kA15',"nothing":"kA14","idk":"kA9","nutin":"kA11","ww":"kS39"}
 * 	def __init__(self,**kwargs):
 * 		self.json = {'colors': '1_40_2_125_3_255_11_255_12_255_13_255_4_-1_6_1000_7_1_15_1_18_0_8_1|1_0_2_102_3_255_11_255_12_255_13_255_4_-1_6_1001_7_1_15_1_18_0_8_1|1_0_2_102_3_255_11_255_12_255_13_255_4_-1_6_1009_7_1_15_1_18_0_8_1|1_255_2_255_3_255_11_255_12_255_13_255_4_-1_6_1002_5_1_7_1_15_1_18_0_8_1|1_0_2_255_3_125_11_255_12_255_13_255_4_-1_6_1005_5_1_7_1_15_1_18_0_8_1|1_0_2_255_3_125_11_255_12_255_13_255_4_-1_6_1006_5_1_7_1_15_1_18_0_8_1|1_0_2_0_3_0_11_255_12_255_13_255_4_-1_6_3_7_1_15_1_18_0_8_1|','song_offset': '0','fade_in': '0','fade_out': '0',"nothing":"",'background': '1', 'ground': '0', 'ground_line': '0', 'font': '0',"ww":"0","vehicle":'0','mini':'0','dual':'0',"speed":"0","idk":"0","2_player":"0","nutin":"0"}             # <<<<<<<<<<<<<<
 * 		for i in kwargs:
 * 			self.json[i] = kwargs[i]
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(17); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 91, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_colors, __pyx_kp_u_1_40_2_125_3_255_11_255_12_255_1) < 0) __PYX_ERR(0, 91, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_song_offset, __pyx_kp_u_0) < 0) __PYX_ERR(0, 91, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_fade_in, __pyx_kp_u_0) < 0) __PYX_ERR(0, 91, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_fade_out, __pyx_kp_u_0) < 0) __PYX_ERR(0, 91, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_nothing, __pyx_kp_u__25) < 0) __PYX_ERR(0, 91, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_background, __pyx_kp_u_1) < 0) __PYX_ERR(0, 91, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_ground, __pyx_kp_u_0) < 0) __PYX_ERR(0, 91, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_ground_line, __pyx_kp_u_0) < 0) __PYX_ERR(0, 91, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_font, __pyx_kp_u_0) < 0) __PYX_ERR(0, 91, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_ww, __pyx_kp_u_0) < 0) __PYX_ERR(0, 91, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_vehicle, __pyx_kp_u_0) < 0) __PYX_ERR(0, 91, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_mini, __pyx_kp_u_0) < 0) __PYX_ERR(0, 91, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_dual, __pyx_kp_u_0) < 0) __PYX_ERR(0, 91, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_speed, __pyx_kp_u_0) < 0) __PYX_ERR(0, 91, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_idk, __pyx_kp_u_0) < 0) __PYX_ERR(0, 91, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_kp_u_2_player, __pyx_kp_u_0) < 0) __PYX_ERR(0, 91, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_nutin, __pyx_kp_u_0) < 0) __PYX_ERR(0, 91, __pyx_L1_error)
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_json, __pyx_t_1) < 0) __PYX_ERR(0, 91, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":92
 * 	def __init__(self,**kwargs):
 * 		self.json = {'colors': '1_40_2_125_3_255_11_255_12_255_13_255_4_-1_6_1000_7_1_15_1_18_0_8_1|1_0_2_102_3_255_11_255_12_255_13_255_4_-1_6_1001_7_1_15_1_18_0_8_1|1_0_2_102_3_255_11_255_12_255_13_255_4_-1_6_1009_7_1_15_1_18_0_8_1|1_255_2_255_3_255_11_255_12_255_13_255_4_-1_6_1002_5_1_7_1_15_1_18_0_8_1|1_0_2_255_3_125_11_255_12_255_13_255_4_-1_6_1005_5_1_7_1_15_1_18_0_8_1|1_0_2_255_3_125_11_255_12_255_13_255_4_-1_6_1006_5_1_7_1_15_1_18_0_8_1|1_0_2_0_3_0_11_255_12_255_13_255_4_-1_6_3_7_1_15_1_18_0_8_1|','song_offset': '0','fade_in': '0','fade_out': '0',"nothing":"",'background': '1', 'ground': '0', 'ground_line': '0', 'font': '0',"ww":"0","vehicle":'0','mini':'0','dual':'0',"speed":"0","idk":"0","2_player":"0","nutin":"0"}
 * 		for i in kwargs:             # <<<<<<<<<<<<<<
 * 			self.json[i] = kwargs[i]
 * 	def __getitem__(self,e):
 */
  __pyx_t_2 = 0;
  __pyx_t_5 = __Pyx_dict_iterator(__pyx_v_kwargs, 1, ((PyObject *)NULL), (&__pyx_t_3), (&__pyx_t_4)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 92, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_5;
  __pyx_t_5 = 0;
  while (1) {
    __pyx_t_6 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_3, &__pyx_t_2, &__pyx_t_5, NULL, NULL, __pyx_t_4);
    if (unlikely(__pyx_t_6 == 0)) break;
    if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 92, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "../../pyedit_engine/cy/PyLvl.pyx":93
 * 		self.json = {'colors': '1_40_2_125_3_255_11_255_12_255_13_255_4_-1_6_1000_7_1_15_1_18_0_8_1|1_0_2_102_3_255_11_255_12_255_13_255_4_-1_6_1001_7_1_15_1_18_0_8_1|1_0_2_102_3_255_11_255_12_255_13_255_4_-1_6_1009_7_1_15_1_18_0_8_1|1_255_2_255_3_255_11_255_12_255_13_255_4_-1_6_1002_5_1_7_1_15_1_18_0_8_1|1_0_2_255_3_125_11_255_12_255_13_255_4_-1_6_1005_5_1_7_1_15_1_18_0_8_1|1_0_2_255_3_125_11_255_12_255_13_255_4_-1_6_1006_5_1_7_1_15_1_18_0_8_1|1_0_2_0_3_0_11_255_12_255_13_255_4_-1_6_3_7_1_15_1_18_0_8_1|','song_offset': '0','fade_in': '0','fade_out': '0',"nothing":"",'background': '1', 'ground': '0', 'ground_line': '0', 'font': '0',"ww":"0","vehicle":'0','mini':'0','dual':'0',"speed":"0","idk":"0","2_player":"0","nutin":"0"}
 * 		for i in kwargs:
 * 			self.json[i] = kwargs[i]             # <<<<<<<<<<<<<<
 * 	def __getitem__(self,e):
 * 		return self.json[e]
 */
    __pyx_t_5 = __Pyx_PyDict_GetItem(__pyx_v_kwargs, __pyx_v_i); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 93, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_json); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 93, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    if (unlikely(PyObject_SetItem(__pyx_t_7, __pyx_v_i, __pyx_t_5) < 0)) __PYX_ERR(0, 93, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":90
 * class Header:
 * 	key = {'mini': 'kA3', 'ground_line': 'kA17', 'background': 'kA6', 'dual': 'kA8', 'fade_out': 'kA16', 'ground': 'kA7', 'song_offset': 'kA13', 'colors': 'kS38', '2_player': 'kA10', 'vehicle': 'kA2', 'font': 'kA18', 'speed': 'kA4', 'fade_in': 'kA15',"nothing":"kA14","idk":"kA9","nutin":"kA11","ww":"kS39"}
 * 	def __init__(self,**kwargs):             # <<<<<<<<<<<<<<
 * 		self.json = {'colors': '1_40_2_125_3_255_11_255_12_255_13_255_4_-1_6_1000_7_1_15_1_18_0_8_1|1_0_2_102_3_255_11_255_12_255_13_255_4_-1_6_1001_7_1_15_1_18_0_8_1|1_0_2_102_3_255_11_255_12_255_13_255_4_-1_6_1009_7_1_15_1_18_0_8_1|1_255_2_255_3_255_11_255_12_255_13_255_4_-1_6_1002_5_1_7_1_15_1_18_0_8_1|1_0_2_255_3_125_11_255_12_255_13_255_4_-1_6_1005_5_1_7_1_15_1_18_0_8_1|1_0_2_255_3_125_11_255_12_255_13_255_4_-1_6_1006_5_1_7_1_15_1_18_0_8_1|1_0_2_0_3_0_11_255_12_255_13_255_4_-1_6_3_7_1_15_1_18_0_8_1|','song_offset': '0','fade_in': '0','fade_out': '0',"nothing":"",'background': '1', 'ground': '0', 'ground_line': '0', 'font': '0',"ww":"0","vehicle":'0','mini':'0','dual':'0',"speed":"0","idk":"0","2_player":"0","nutin":"0"}
 * 		for i in kwargs:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("main.Header.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":94
 * 		for i in kwargs:
 * 			self.json[i] = kwargs[i]
 * 	def __getitem__(self,e):             # <<<<<<<<<<<<<<
 * 		return self.json[e]
 * 	def __setitem__(self,e,f):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_6Header_3__getitem__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_4main_6Header_3__getitem__ = {"__getitem__", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_6Header_3__getitem__, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_4main_6Header_3__getitem__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_e = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_e,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_e)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__getitem__", 1, 2, 2, 1); __PYX_ERR(0, 94, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__getitem__") < 0)) __PYX_ERR(0, 94, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_e = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__getitem__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 94, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("main.Header.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4main_6Header_2__getitem__(__pyx_self, __pyx_v_self, __pyx_v_e);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_6Header_2__getitem__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":95
 * 			self.json[i] = kwargs[i]
 * 	def __getitem__(self,e):
 * 		return self.json[e]             # <<<<<<<<<<<<<<
 * 	def __setitem__(self,e,f):
 * 		self.json[e] = str(f)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_json); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_e); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":94
 * 		for i in kwargs:
 * 			self.json[i] = kwargs[i]
 * 	def __getitem__(self,e):             # <<<<<<<<<<<<<<
 * 		return self.json[e]
 * 	def __setitem__(self,e,f):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("main.Header.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":96
 * 	def __getitem__(self,e):
 * 		return self.json[e]
 * 	def __setitem__(self,e,f):             # <<<<<<<<<<<<<<
 * 		self.json[e] = str(f)
 * 	def __str__(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_6Header_5__setitem__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_4main_6Header_5__setitem__ = {"__setitem__", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_6Header_5__setitem__, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_4main_6Header_5__setitem__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_e = 0;
  PyObject *__pyx_v_f = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_e,&__pyx_n_s_f,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_e)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__setitem__", 1, 3, 3, 1); __PYX_ERR(0, 96, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_f)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__setitem__", 1, 3, 3, 2); __PYX_ERR(0, 96, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__setitem__") < 0)) __PYX_ERR(0, 96, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_self = values[0];
    __pyx_v_e = values[1];
    __pyx_v_f = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setitem__", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 96, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("main.Header.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4main_6Header_4__setitem__(__pyx_self, __pyx_v_self, __pyx_v_e, __pyx_v_f);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_6Header_4__setitem__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_e, PyObject *__pyx_v_f) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":97
 * 		return self.json[e]
 * 	def __setitem__(self,e,f):
 * 		self.json[e] = str(f)             # <<<<<<<<<<<<<<
 * 	def __str__(self):
 * 		ar = []
 */
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_v_f); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 97, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_json); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 97, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (unlikely(PyObject_SetItem(__pyx_t_2, __pyx_v_e, __pyx_t_1) < 0)) __PYX_ERR(0, 97, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":96
 * 	def __getitem__(self,e):
 * 		return self.json[e]
 * 	def __setitem__(self,e,f):             # <<<<<<<<<<<<<<
 * 		self.json[e] = str(f)
 * 	def __str__(self):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("main.Header.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":98
 * 	def __setitem__(self,e,f):
 * 		self.json[e] = str(f)
 * 	def __str__(self):             # <<<<<<<<<<<<<<
 * 		ar = []
 * 		for i in self.json:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_6Header_7__str__(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_4main_6Header_7__str__ = {"__str__", (PyCFunction)__pyx_pw_4main_6Header_7__str__, METH_O, 0};
static PyObject *__pyx_pw_4main_6Header_7__str__(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_6Header_6__str__(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_6Header_6__str__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_v_ar = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__str__", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":99
 * 		self.json[e] = str(f)
 * 	def __str__(self):
 * 		ar = []             # <<<<<<<<<<<<<<
 * 		for i in self.json:
 * 			ar.append(str(Header.key[i]))
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 99, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_ar = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":100
 * 	def __str__(self):
 * 		ar = []
 * 		for i in self.json:             # <<<<<<<<<<<<<<
 * 			ar.append(str(Header.key[i]))
 * 			ar.append(str(self.json[i]))
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_json); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 100, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 100, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 100, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 100, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 100, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 100, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 100, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_4(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 100, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "../../pyedit_engine/cy/PyLvl.pyx":101
 * 		ar = []
 * 		for i in self.json:
 * 			ar.append(str(Header.key[i]))             # <<<<<<<<<<<<<<
 * 			ar.append(str(self.json[i]))
 * 		return ','.join(ar)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_Header); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 101, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_key); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 101, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_t_5, __pyx_v_i); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 101, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 101, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_6 = __Pyx_PyList_Append(__pyx_v_ar, __pyx_t_5); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(0, 101, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "../../pyedit_engine/cy/PyLvl.pyx":102
 * 		for i in self.json:
 * 			ar.append(str(Header.key[i]))
 * 			ar.append(str(self.json[i]))             # <<<<<<<<<<<<<<
 * 		return ','.join(ar)
 * 	def __repr__(self):
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_json); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 102, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_t_5, __pyx_v_i); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 102, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 102, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_6 = __Pyx_PyList_Append(__pyx_v_ar, __pyx_t_5); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(0, 102, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "../../pyedit_engine/cy/PyLvl.pyx":100
 * 	def __str__(self):
 * 		ar = []
 * 		for i in self.json:             # <<<<<<<<<<<<<<
 * 			ar.append(str(Header.key[i]))
 * 			ar.append(str(self.json[i]))
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":103
 * 			ar.append(str(Header.key[i]))
 * 			ar.append(str(self.json[i]))
 * 		return ','.join(ar)             # <<<<<<<<<<<<<<
 * 	def __repr__(self):
 * 		return self.__str__()
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyUnicode_Join(__pyx_kp_u__29, __pyx_v_ar); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":98
 * 	def __setitem__(self,e,f):
 * 		self.json[e] = str(f)
 * 	def __str__(self):             # <<<<<<<<<<<<<<
 * 		ar = []
 * 		for i in self.json:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("main.Header.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ar);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":104
 * 			ar.append(str(self.json[i]))
 * 		return ','.join(ar)
 * 	def __repr__(self):             # <<<<<<<<<<<<<<
 * 		return self.__str__()
 * class Level:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_6Header_9__repr__(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_4main_6Header_9__repr__ = {"__repr__", (PyCFunction)__pyx_pw_4main_6Header_9__repr__, METH_O, 0};
static PyObject *__pyx_pw_4main_6Header_9__repr__(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_6Header_8__repr__(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_6Header_8__repr__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":105
 * 		return ','.join(ar)
 * 	def __repr__(self):
 * 		return self.__str__()             # <<<<<<<<<<<<<<
 * class Level:
 * 	@staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_str_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":104
 * 			ar.append(str(self.json[i]))
 * 		return ','.join(ar)
 * 	def __repr__(self):             # <<<<<<<<<<<<<<
 * 		return self.__str__()
 * class Level:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("main.Header.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":108
 * class Level:
 * 	@staticmethod
 * 	def downloadLevel(levelname,lid):             # <<<<<<<<<<<<<<
 * 		return levelString(levelname,gzip.decompress(base64.b64decode(requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[7],'-_')).decode())
 * 	def getfGroupID(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_5Level_1downloadLevel(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_4main_5Level_1downloadLevel = {"downloadLevel", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_5Level_1downloadLevel, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_4main_5Level_1downloadLevel(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_levelname = 0;
  PyObject *__pyx_v_lid = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("downloadLevel (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_levelname,&__pyx_n_s_lid,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_levelname)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lid)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("downloadLevel", 1, 2, 2, 1); __PYX_ERR(0, 108, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "downloadLevel") < 0)) __PYX_ERR(0, 108, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_levelname = values[0];
    __pyx_v_lid = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("downloadLevel", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 108, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("main.Level.downloadLevel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4main_5Level_downloadLevel(__pyx_self, __pyx_v_levelname, __pyx_v_lid);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_5Level_downloadLevel(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_levelname, PyObject *__pyx_v_lid) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  int __pyx_t_13;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("downloadLevel", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":109
 * 	@staticmethod
 * 	def downloadLevel(levelname,lid):
 * 		return levelString(levelname,gzip.decompress(base64.b64decode(requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[7],'-_')).decode())             # <<<<<<<<<<<<<<
 * 	def getfGroupID(self):
 * 		ids = [0]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_levelString); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_gzip); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_decompress); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_base64); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_b64decode); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_requests); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_post); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __pyx_t_9 = __Pyx_PyUnicode_FormatSafe(__pyx_kp_u_gameVersion_21_binaryVersion_35, __pyx_v_lid); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_11 = PyTuple_New(2); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  __Pyx_INCREF(__pyx_kp_u_http_www_boomlings_com_database_2);
  __Pyx_GIVEREF(__pyx_kp_u_http_www_boomlings_com_database_2);
  PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_kp_u_http_www_boomlings_com_database_2);
  __Pyx_GIVEREF(__pyx_t_9);
  PyTuple_SET_ITEM(__pyx_t_11, 1, __pyx_t_9);
  __pyx_t_9 = 0;
  __pyx_t_9 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_12 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  if (PyDict_SetItem(__pyx_t_12, __pyx_kp_u_Content_Type, __pyx_kp_u_application_x_www_form_urlencode) < 0) __PYX_ERR(0, 109, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_9, __pyx_n_s_headers, __pyx_t_12) < 0) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_10, __pyx_t_11, __pyx_t_9); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_text); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_split); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __pyx_t_9 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_12))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_12);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_12, function);
    }
  }
  __pyx_t_7 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_12, __pyx_t_9, __pyx_kp_u__27) : __Pyx_PyObject_CallOneArg(__pyx_t_12, __pyx_kp_u__27);
  __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
  if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  __pyx_t_12 = __Pyx_GetItemInt(__pyx_t_7, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = NULL;
  __pyx_t_13 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
      __pyx_t_13 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_8)) {
    PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_t_12, __pyx_kp_u__32};
    __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_13, 2+__pyx_t_13); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 109, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
    PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_t_12, __pyx_kp_u__32};
    __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-__pyx_t_13, 2+__pyx_t_13); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 109, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  } else
  #endif
  {
    __pyx_t_9 = PyTuple_New(2+__pyx_t_13); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 109, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_12);
    PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_13, __pyx_t_12);
    __Pyx_INCREF(__pyx_kp_u__32);
    __Pyx_GIVEREF(__pyx_kp_u__32);
    PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_13, __pyx_kp_u__32);
    __pyx_t_12 = 0;
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_9, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 109, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  }
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  __pyx_t_4 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_8, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_decode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_13 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_13 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_v_levelname, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_13, 2+__pyx_t_13); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 109, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_v_levelname, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_13, 2+__pyx_t_13); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 109, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else
  #endif
  {
    __pyx_t_4 = PyTuple_New(2+__pyx_t_13); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 109, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_6) {
      __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_6); __pyx_t_6 = NULL;
    }
    __Pyx_INCREF(__pyx_v_levelname);
    __Pyx_GIVEREF(__pyx_v_levelname);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_13, __pyx_v_levelname);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_13, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 109, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":108
 * class Level:
 * 	@staticmethod
 * 	def downloadLevel(levelname,lid):             # <<<<<<<<<<<<<<
 * 		return levelString(levelname,gzip.decompress(base64.b64decode(requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[7],'-_')).decode())
 * 	def getfGroupID(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("main.Level.downloadLevel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":110
 * 	def downloadLevel(levelname,lid):
 * 		return levelString(levelname,gzip.decompress(base64.b64decode(requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[7],'-_')).decode())
 * 	def getfGroupID(self):             # <<<<<<<<<<<<<<
 * 		ids = [0]
 * 		for i in self.blocks:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_5Level_3getfGroupID(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_4main_5Level_3getfGroupID = {"getfGroupID", (PyCFunction)__pyx_pw_4main_5Level_3getfGroupID, METH_O, 0};
static PyObject *__pyx_pw_4main_5Level_3getfGroupID(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getfGroupID (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_5Level_2getfGroupID(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_5Level_2getfGroupID(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_v_ids = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_e = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  int __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  int __pyx_t_13;
  char const *__pyx_t_14;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  PyObject *__pyx_t_17 = NULL;
  PyObject *__pyx_t_18 = NULL;
  PyObject *__pyx_t_19 = NULL;
  PyObject *__pyx_t_20 = NULL;
  int __pyx_t_21;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getfGroupID", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":111
 * 		return levelString(levelname,gzip.decompress(base64.b64decode(requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[7],'-_')).decode())
 * 	def getfGroupID(self):
 * 		ids = [0]             # <<<<<<<<<<<<<<
 * 		for i in self.blocks:
 * 			try:
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_int_0);
  __pyx_v_ids = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":112
 * 	def getfGroupID(self):
 * 		ids = [0]
 * 		for i in self.blocks:             # <<<<<<<<<<<<<<
 * 			try:
 * 				ids.append(int(i.json["group_ids"]))
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_blocks); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 112, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 112, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 112, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 112, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 112, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 112, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_4(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 112, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "../../pyedit_engine/cy/PyLvl.pyx":113
 * 		ids = [0]
 * 		for i in self.blocks:
 * 			try:             # <<<<<<<<<<<<<<
 * 				ids.append(int(i.json["group_ids"]))
 * 			except Exception as e: print(e)
 */
    {
      __Pyx_PyThreadState_declare
      __Pyx_PyThreadState_assign
      __Pyx_ExceptionSave(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_5);
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);
      /*try:*/ {

        /* "../../pyedit_engine/cy/PyLvl.pyx":114
 * 		for i in self.blocks:
 * 			try:
 * 				ids.append(int(i.json["group_ids"]))             # <<<<<<<<<<<<<<
 * 			except Exception as e: print(e)
 * 		ids.sort()
 */
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_i, __pyx_n_s_json); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 114, __pyx_L5_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_8 = __Pyx_PyObject_Dict_GetItem(__pyx_t_1, __pyx_n_u_group_ids); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 114, __pyx_L5_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_1 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 114, __pyx_L5_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_9 = __Pyx_PyList_Append(__pyx_v_ids, __pyx_t_1); if (unlikely(__pyx_t_9 == ((int)-1))) __PYX_ERR(0, 114, __pyx_L5_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

        /* "../../pyedit_engine/cy/PyLvl.pyx":113
 * 		ids = [0]
 * 		for i in self.blocks:
 * 			try:             # <<<<<<<<<<<<<<
 * 				ids.append(int(i.json["group_ids"]))
 * 			except Exception as e: print(e)
 */
      }
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L12_try_end;
      __pyx_L5_error:;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "../../pyedit_engine/cy/PyLvl.pyx":115
 * 			try:
 * 				ids.append(int(i.json["group_ids"]))
 * 			except Exception as e: print(e)             # <<<<<<<<<<<<<<
 * 		ids.sort()
 * 		for i in range(1,len(ids)):
 */
      __pyx_t_10 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
      if (__pyx_t_10) {
        __Pyx_AddTraceback("main.Level.getfGroupID", __pyx_clineno, __pyx_lineno, __pyx_filename);
        if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_8, &__pyx_t_11) < 0) __PYX_ERR(0, 115, __pyx_L7_except_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_INCREF(__pyx_t_8);
        __pyx_v_e = __pyx_t_8;
        /*try:*/ {
          __pyx_t_12 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_v_e); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 115, __pyx_L18_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
        /*finally:*/ {
          /*normal exit:*/{
            __Pyx_DECREF(__pyx_v_e);
            __pyx_v_e = NULL;
            goto __pyx_L19;
          }
          __pyx_L18_error:;
          /*exception exit:*/{
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __pyx_t_15 = 0; __pyx_t_16 = 0; __pyx_t_17 = 0; __pyx_t_18 = 0; __pyx_t_19 = 0; __pyx_t_20 = 0;
            __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
            if (PY_MAJOR_VERSION >= 3) __Pyx_ExceptionSwap(&__pyx_t_18, &__pyx_t_19, &__pyx_t_20);
            if ((PY_MAJOR_VERSION < 3) || unlikely(__Pyx_GetException(&__pyx_t_15, &__pyx_t_16, &__pyx_t_17) < 0)) __Pyx_ErrFetch(&__pyx_t_15, &__pyx_t_16, &__pyx_t_17);
            __Pyx_XGOTREF(__pyx_t_15);
            __Pyx_XGOTREF(__pyx_t_16);
            __Pyx_XGOTREF(__pyx_t_17);
            __Pyx_XGOTREF(__pyx_t_18);
            __Pyx_XGOTREF(__pyx_t_19);
            __Pyx_XGOTREF(__pyx_t_20);
            __pyx_t_10 = __pyx_lineno; __pyx_t_13 = __pyx_clineno; __pyx_t_14 = __pyx_filename;
            {
              __Pyx_DECREF(__pyx_v_e);
              __pyx_v_e = NULL;
            }
            if (PY_MAJOR_VERSION >= 3) {
              __Pyx_XGIVEREF(__pyx_t_18);
              __Pyx_XGIVEREF(__pyx_t_19);
              __Pyx_XGIVEREF(__pyx_t_20);
              __Pyx_ExceptionReset(__pyx_t_18, __pyx_t_19, __pyx_t_20);
            }
            __Pyx_XGIVEREF(__pyx_t_15);
            __Pyx_XGIVEREF(__pyx_t_16);
            __Pyx_XGIVEREF(__pyx_t_17);
            __Pyx_ErrRestore(__pyx_t_15, __pyx_t_16, __pyx_t_17);
            __pyx_t_15 = 0; __pyx_t_16 = 0; __pyx_t_17 = 0; __pyx_t_18 = 0; __pyx_t_19 = 0; __pyx_t_20 = 0;
            __pyx_lineno = __pyx_t_10; __pyx_clineno = __pyx_t_13; __pyx_filename = __pyx_t_14;
            goto __pyx_L7_except_error;
          }
          __pyx_L19:;
        }
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        goto __pyx_L6_exception_handled;
      }
      goto __pyx_L7_except_error;
      __pyx_L7_except_error:;

      /* "../../pyedit_engine/cy/PyLvl.pyx":113
 * 		ids = [0]
 * 		for i in self.blocks:
 * 			try:             # <<<<<<<<<<<<<<
 * 				ids.append(int(i.json["group_ids"]))
 * 			except Exception as e: print(e)
 */
      __Pyx_XGIVEREF(__pyx_t_5);
      __Pyx_XGIVEREF(__pyx_t_6);
      __Pyx_XGIVEREF(__pyx_t_7);
      __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
      goto __pyx_L1_error;
      __pyx_L6_exception_handled:;
      __Pyx_XGIVEREF(__pyx_t_5);
      __Pyx_XGIVEREF(__pyx_t_6);
      __Pyx_XGIVEREF(__pyx_t_7);
      __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
      __pyx_L12_try_end:;
    }

    /* "../../pyedit_engine/cy/PyLvl.pyx":112
 * 	def getfGroupID(self):
 * 		ids = [0]
 * 		for i in self.blocks:             # <<<<<<<<<<<<<<
 * 			try:
 * 				ids.append(int(i.json["group_ids"]))
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":116
 * 				ids.append(int(i.json["group_ids"]))
 * 			except Exception as e: print(e)
 * 		ids.sort()             # <<<<<<<<<<<<<<
 * 		for i in range(1,len(ids)):
 * 			if ids[i] != ids[i-1]+1:
 */
  __pyx_t_9 = PyList_Sort(__pyx_v_ids); if (unlikely(__pyx_t_9 == ((int)-1))) __PYX_ERR(0, 116, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":117
 * 			except Exception as e: print(e)
 * 		ids.sort()
 * 		for i in range(1,len(ids)):             # <<<<<<<<<<<<<<
 * 			if ids[i] != ids[i-1]+1:
 * 				return i
 */
  __pyx_t_3 = PyList_GET_SIZE(__pyx_v_ids); if (unlikely(__pyx_t_3 == ((Py_ssize_t)-1))) __PYX_ERR(0, 117, __pyx_L1_error)
  __pyx_t_2 = PyInt_FromSsize_t(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_11 = PyTuple_New(2); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  __Pyx_INCREF(__pyx_int_1);
  __Pyx_GIVEREF(__pyx_int_1);
  PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_int_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_11, 1, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_t_11, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
    __pyx_t_11 = __pyx_t_2; __Pyx_INCREF(__pyx_t_11); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_11 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 117, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __pyx_t_4 = Py_TYPE(__pyx_t_11)->tp_iternext; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 117, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_11))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_11)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_11, __pyx_t_3); __Pyx_INCREF(__pyx_t_2); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 117, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_11, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 117, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_11)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_11, __pyx_t_3); __Pyx_INCREF(__pyx_t_2); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 117, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_11, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 117, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_4(__pyx_t_11);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 117, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "../../pyedit_engine/cy/PyLvl.pyx":118
 * 		ids.sort()
 * 		for i in range(1,len(ids)):
 * 			if ids[i] != ids[i-1]+1:             # <<<<<<<<<<<<<<
 * 				return i
 * 	def blocksInGroup(self, groupid):
 */
    __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_ids, __pyx_v_i); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_8 = __Pyx_PyInt_SubtractObjC(__pyx_v_i, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_ids, __pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_t_1, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_RichCompare(__pyx_t_2, __pyx_t_8, Py_NE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 118, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_21 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_21 < 0)) __PYX_ERR(0, 118, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_21) {

      /* "../../pyedit_engine/cy/PyLvl.pyx":119
 * 		for i in range(1,len(ids)):
 * 			if ids[i] != ids[i-1]+1:
 * 				return i             # <<<<<<<<<<<<<<
 * 	def blocksInGroup(self, groupid):
 * 		out = []
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_v_i);
      __pyx_r = __pyx_v_i;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      goto __pyx_L0;

      /* "../../pyedit_engine/cy/PyLvl.pyx":118
 * 		ids.sort()
 * 		for i in range(1,len(ids)):
 * 			if ids[i] != ids[i-1]+1:             # <<<<<<<<<<<<<<
 * 				return i
 * 	def blocksInGroup(self, groupid):
 */
    }

    /* "../../pyedit_engine/cy/PyLvl.pyx":117
 * 			except Exception as e: print(e)
 * 		ids.sort()
 * 		for i in range(1,len(ids)):             # <<<<<<<<<<<<<<
 * 			if ids[i] != ids[i-1]+1:
 * 				return i
 */
  }
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":110
 * 	def downloadLevel(levelname,lid):
 * 		return levelString(levelname,gzip.decompress(base64.b64decode(requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[7],'-_')).decode())
 * 	def getfGroupID(self):             # <<<<<<<<<<<<<<
 * 		ids = [0]
 * 		for i in self.blocks:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("main.Level.getfGroupID", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ids);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_e);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":120
 * 			if ids[i] != ids[i-1]+1:
 * 				return i
 * 	def blocksInGroup(self, groupid):             # <<<<<<<<<<<<<<
 * 		out = []
 * 		for b in self.blocks:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_5Level_5blocksInGroup(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_4main_5Level_5blocksInGroup = {"blocksInGroup", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_5Level_5blocksInGroup, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_4main_5Level_5blocksInGroup(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_groupid = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("blocksInGroup (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_groupid,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_groupid)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("blocksInGroup", 1, 2, 2, 1); __PYX_ERR(0, 120, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "blocksInGroup") < 0)) __PYX_ERR(0, 120, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_groupid = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("blocksInGroup", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 120, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("main.Level.blocksInGroup", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4main_5Level_4blocksInGroup(__pyx_self, __pyx_v_self, __pyx_v_groupid);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_5Level_4blocksInGroup(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_groupid) {
  PyObject *__pyx_v_out = NULL;
  PyObject *__pyx_v_b = NULL;
  PyObject *__pyx_v_gs = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("blocksInGroup", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":121
 * 				return i
 * 	def blocksInGroup(self, groupid):
 * 		out = []             # <<<<<<<<<<<<<<
 * 		for b in self.blocks:
 * 			gs = str(b['group_ids']).split(',')
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 121, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_out = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":122
 * 	def blocksInGroup(self, groupid):
 * 		out = []
 * 		for b in self.blocks:             # <<<<<<<<<<<<<<
 * 			gs = str(b['group_ids']).split(',')
 * 			if str(groupid) in gs:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_blocks); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 122, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 122, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 122, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 122, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 122, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 122, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 122, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_4(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 122, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_b, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "../../pyedit_engine/cy/PyLvl.pyx":123
 * 		out = []
 * 		for b in self.blocks:
 * 			gs = str(b['group_ids']).split(',')             # <<<<<<<<<<<<<<
 * 			if str(groupid) in gs:
 * 				out.append(b)
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_b, __pyx_n_u_group_ids); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 123, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 123, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyUnicode_Split(((PyObject*)__pyx_t_5), __pyx_kp_u__29, -1L); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 123, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF_SET(__pyx_v_gs, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "../../pyedit_engine/cy/PyLvl.pyx":124
 * 		for b in self.blocks:
 * 			gs = str(b['group_ids']).split(',')
 * 			if str(groupid) in gs:             # <<<<<<<<<<<<<<
 * 				out.append(b)
 * 		return out
 */
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_v_groupid); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 124, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_v_gs, Py_EQ)); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 124, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_7 = (__pyx_t_6 != 0);
    if (__pyx_t_7) {

      /* "../../pyedit_engine/cy/PyLvl.pyx":125
 * 			gs = str(b['group_ids']).split(',')
 * 			if str(groupid) in gs:
 * 				out.append(b)             # <<<<<<<<<<<<<<
 * 		return out
 * 	def __init__(self,levelname,**kwargs):
 */
      __pyx_t_8 = __Pyx_PyList_Append(__pyx_v_out, __pyx_v_b); if (unlikely(__pyx_t_8 == ((int)-1))) __PYX_ERR(0, 125, __pyx_L1_error)

      /* "../../pyedit_engine/cy/PyLvl.pyx":124
 * 		for b in self.blocks:
 * 			gs = str(b['group_ids']).split(',')
 * 			if str(groupid) in gs:             # <<<<<<<<<<<<<<
 * 				out.append(b)
 * 		return out
 */
    }

    /* "../../pyedit_engine/cy/PyLvl.pyx":122
 * 	def blocksInGroup(self, groupid):
 * 		out = []
 * 		for b in self.blocks:             # <<<<<<<<<<<<<<
 * 			gs = str(b['group_ids']).split(',')
 * 			if str(groupid) in gs:
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":126
 * 			if str(groupid) in gs:
 * 				out.append(b)
 * 		return out             # <<<<<<<<<<<<<<
 * 	def __init__(self,levelname,**kwargs):
 * 		self.header = Header(**kwargs)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_out);
  __pyx_r = __pyx_v_out;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":120
 * 			if ids[i] != ids[i-1]+1:
 * 				return i
 * 	def blocksInGroup(self, groupid):             # <<<<<<<<<<<<<<
 * 		out = []
 * 		for b in self.blocks:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("main.Level.blocksInGroup", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_out);
  __Pyx_XDECREF(__pyx_v_b);
  __Pyx_XDECREF(__pyx_v_gs);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":127
 * 				out.append(b)
 * 		return out
 * 	def __init__(self,levelname,**kwargs):             # <<<<<<<<<<<<<<
 * 		self.header = Header(**kwargs)
 * 		self.blocks = []
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_5Level_7__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_4main_5Level_7__init__ = {"__init__", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_5Level_7__init__, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_4main_5Level_7__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_levelname = 0;
  PyObject *__pyx_v_kwargs = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return NULL;
  __Pyx_GOTREF(__pyx_v_kwargs);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_levelname,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_levelname)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, 1); __PYX_ERR(0, 127, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kwargs, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 127, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_levelname = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 127, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
  __Pyx_AddTraceback("main.Level.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4main_5Level_6__init__(__pyx_self, __pyx_v_self, __pyx_v_levelname, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_5Level_6__init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_levelname, PyObject *__pyx_v_kwargs) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":128
 * 		return out
 * 	def __init__(self,levelname,**kwargs):
 * 		self.header = Header(**kwargs)             # <<<<<<<<<<<<<<
 * 		self.blocks = []
 * 		self.name = levelname
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_Header); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyDict_Copy(__pyx_v_kwargs); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_empty_tuple, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_header, __pyx_t_3) < 0) __PYX_ERR(0, 128, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":129
 * 	def __init__(self,levelname,**kwargs):
 * 		self.header = Header(**kwargs)
 * 		self.blocks = []             # <<<<<<<<<<<<<<
 * 		self.name = levelname
 * 		self.str = ""
 */
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 129, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_blocks, __pyx_t_3) < 0) __PYX_ERR(0, 129, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":130
 * 		self.header = Header(**kwargs)
 * 		self.blocks = []
 * 		self.name = levelname             # <<<<<<<<<<<<<<
 * 		self.str = ""
 * 	def addBlock(self,a,b,c,**kwargs):
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_name_2, __pyx_v_levelname) < 0) __PYX_ERR(0, 130, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":131
 * 		self.blocks = []
 * 		self.name = levelname
 * 		self.str = ""             # <<<<<<<<<<<<<<
 * 	def addBlock(self,a,b,c,**kwargs):
 * 		aa = {"x_position":b,"y_position":c,"blockid":a}
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_str, __pyx_kp_u__25) < 0) __PYX_ERR(0, 131, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":127
 * 				out.append(b)
 * 		return out
 * 	def __init__(self,levelname,**kwargs):             # <<<<<<<<<<<<<<
 * 		self.header = Header(**kwargs)
 * 		self.blocks = []
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("main.Level.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":132
 * 		self.name = levelname
 * 		self.str = ""
 * 	def addBlock(self,a,b,c,**kwargs):             # <<<<<<<<<<<<<<
 * 		aa = {"x_position":b,"y_position":c,"blockid":a}
 * 		b = Block(**dict(aa,**kwargs))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_5Level_9addBlock(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_4main_5Level_9addBlock = {"addBlock", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_5Level_9addBlock, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_4main_5Level_9addBlock(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_a = 0;
  PyObject *__pyx_v_b = 0;
  PyObject *__pyx_v_c = 0;
  PyObject *__pyx_v_kwargs = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addBlock (wrapper)", 0);
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return NULL;
  __Pyx_GOTREF(__pyx_v_kwargs);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_a,&__pyx_n_s_b,&__pyx_n_s_c,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_a)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("addBlock", 1, 4, 4, 1); __PYX_ERR(0, 132, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("addBlock", 1, 4, 4, 2); __PYX_ERR(0, 132, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_c)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("addBlock", 1, 4, 4, 3); __PYX_ERR(0, 132, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kwargs, values, pos_args, "addBlock") < 0)) __PYX_ERR(0, 132, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_self = values[0];
    __pyx_v_a = values[1];
    __pyx_v_b = values[2];
    __pyx_v_c = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("addBlock", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 132, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
  __Pyx_AddTraceback("main.Level.addBlock", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4main_5Level_8addBlock(__pyx_self, __pyx_v_self, __pyx_v_a, __pyx_v_b, __pyx_v_c, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_5Level_8addBlock(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_kwargs) {
  PyObject *__pyx_v_aa = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("addBlock", 0);
  __Pyx_INCREF(__pyx_v_b);

  /* "../../pyedit_engine/cy/PyLvl.pyx":133
 * 		self.str = ""
 * 	def addBlock(self,a,b,c,**kwargs):
 * 		aa = {"x_position":b,"y_position":c,"blockid":a}             # <<<<<<<<<<<<<<
 * 		b = Block(**dict(aa,**kwargs))
 * 		self.blocks.append(b)
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_x_position, __pyx_v_b) < 0) __PYX_ERR(0, 133, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_y_position, __pyx_v_c) < 0) __PYX_ERR(0, 133, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_blockid, __pyx_v_a) < 0) __PYX_ERR(0, 133, __pyx_L1_error)
  __pyx_v_aa = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":134
 * 	def addBlock(self,a,b,c,**kwargs):
 * 		aa = {"x_position":b,"y_position":c,"blockid":a}
 * 		b = Block(**dict(aa,**kwargs))             # <<<<<<<<<<<<<<
 * 		self.blocks.append(b)
 * 		return b
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_Block); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_v_aa);
  __Pyx_GIVEREF(__pyx_v_aa);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_aa);
  __pyx_t_4 = PyDict_Copy(__pyx_v_kwargs); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_Call(((PyObject *)(&PyDict_Type)), __pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_2 = PyDict_Copy(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_empty_tuple, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF_SET(__pyx_v_b, __pyx_t_5);
  __pyx_t_5 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":135
 * 		aa = {"x_position":b,"y_position":c,"blockid":a}
 * 		b = Block(**dict(aa,**kwargs))
 * 		self.blocks.append(b)             # <<<<<<<<<<<<<<
 * 		return b
 * 	def addBlocks(self, *args):
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_blocks); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyObject_Append(__pyx_t_5, __pyx_v_b); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(0, 135, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":136
 * 		b = Block(**dict(aa,**kwargs))
 * 		self.blocks.append(b)
 * 		return b             # <<<<<<<<<<<<<<
 * 	def addBlocks(self, *args):
 * 		for i in args:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_b);
  __pyx_r = __pyx_v_b;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":132
 * 		self.name = levelname
 * 		self.str = ""
 * 	def addBlock(self,a,b,c,**kwargs):             # <<<<<<<<<<<<<<
 * 		aa = {"x_position":b,"y_position":c,"blockid":a}
 * 		b = Block(**dict(aa,**kwargs))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("main.Level.addBlock", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_aa);
  __Pyx_XDECREF(__pyx_v_b);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":137
 * 		self.blocks.append(b)
 * 		return b
 * 	def addBlocks(self, *args):             # <<<<<<<<<<<<<<
 * 		for i in args:
 * 			if hasattr(i,'coords'):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_5Level_11addBlocks(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_4main_5Level_11addBlocks = {"addBlocks", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_5Level_11addBlocks, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_4main_5Level_11addBlocks(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_args = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addBlocks (wrapper)", 0);
  if (PyTuple_GET_SIZE(__pyx_args) > 1) {
    __pyx_v_args = PyTuple_GetSlice(__pyx_args, 1, PyTuple_GET_SIZE(__pyx_args));
    if (unlikely(!__pyx_v_args)) {
      __Pyx_RefNannyFinishContext();
      return NULL;
    }
    __Pyx_GOTREF(__pyx_v_args);
  } else {
    __pyx_v_args = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        default:
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t used_pos_args = (pos_args < 1) ? pos_args : 1;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, used_pos_args, "addBlocks") < 0)) __PYX_ERR(0, 137, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) < 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("addBlocks", 0, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 137, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("main.Level.addBlocks", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4main_5Level_10addBlocks(__pyx_self, __pyx_v_self, __pyx_v_args);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_5Level_10addBlocks(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_args) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("addBlocks", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":138
 * 		return b
 * 	def addBlocks(self, *args):
 * 		for i in args:             # <<<<<<<<<<<<<<
 * 			if hasattr(i,'coords'):
 * 				self.blocks.append(i)
 */
  __pyx_t_1 = __pyx_v_args; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 138, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 138, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "../../pyedit_engine/cy/PyLvl.pyx":139
 * 	def addBlocks(self, *args):
 * 		for i in args:
 * 			if hasattr(i,'coords'):             # <<<<<<<<<<<<<<
 * 				self.blocks.append(i)
 * 	def uploadLevel(self,username,password,description="",stars=0,unlisted=0,lpassword=0,songid=0,audiotrack=1,twoPlayer=0,fromString=False,coins='0',url="http://boomlings.com/database/uploadGJLevel21.php",version=1,levelid=0):
 */
    __pyx_t_4 = __Pyx_HasAttr(__pyx_v_i, __pyx_n_u_coords); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 139, __pyx_L1_error)
    __pyx_t_5 = (__pyx_t_4 != 0);
    if (__pyx_t_5) {

      /* "../../pyedit_engine/cy/PyLvl.pyx":140
 * 		for i in args:
 * 			if hasattr(i,'coords'):
 * 				self.blocks.append(i)             # <<<<<<<<<<<<<<
 * 	def uploadLevel(self,username,password,description="",stars=0,unlisted=0,lpassword=0,songid=0,audiotrack=1,twoPlayer=0,fromString=False,coins='0',url="http://boomlings.com/database/uploadGJLevel21.php",version=1,levelid=0):
 * 		if not fromString:
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_blocks); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 140, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_v_i); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(0, 140, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "../../pyedit_engine/cy/PyLvl.pyx":139
 * 	def addBlocks(self, *args):
 * 		for i in args:
 * 			if hasattr(i,'coords'):             # <<<<<<<<<<<<<<
 * 				self.blocks.append(i)
 * 	def uploadLevel(self,username,password,description="",stars=0,unlisted=0,lpassword=0,songid=0,audiotrack=1,twoPlayer=0,fromString=False,coins='0',url="http://boomlings.com/database/uploadGJLevel21.php",version=1,levelid=0):
 */
    }

    /* "../../pyedit_engine/cy/PyLvl.pyx":138
 * 		return b
 * 	def addBlocks(self, *args):
 * 		for i in args:             # <<<<<<<<<<<<<<
 * 			if hasattr(i,'coords'):
 * 				self.blocks.append(i)
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":137
 * 		self.blocks.append(b)
 * 		return b
 * 	def addBlocks(self, *args):             # <<<<<<<<<<<<<<
 * 		for i in args:
 * 			if hasattr(i,'coords'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("main.Level.addBlocks", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":141
 * 			if hasattr(i,'coords'):
 * 				self.blocks.append(i)
 * 	def uploadLevel(self,username,password,description="",stars=0,unlisted=0,lpassword=0,songid=0,audiotrack=1,twoPlayer=0,fromString=False,coins='0',url="http://boomlings.com/database/uploadGJLevel21.php",version=1,levelid=0):             # <<<<<<<<<<<<<<
 * 		if not fromString:
 * 			self.encodee()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_5Level_13uploadLevel(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_4main_5Level_13uploadLevel = {"uploadLevel", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_5Level_13uploadLevel, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_4main_5Level_13uploadLevel(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_username = 0;
  PyObject *__pyx_v_password = 0;
  PyObject *__pyx_v_description = 0;
  PyObject *__pyx_v_stars = 0;
  PyObject *__pyx_v_unlisted = 0;
  PyObject *__pyx_v_lpassword = 0;
  PyObject *__pyx_v_songid = 0;
  PyObject *__pyx_v_audiotrack = 0;
  PyObject *__pyx_v_twoPlayer = 0;
  PyObject *__pyx_v_fromString = 0;
  PyObject *__pyx_v_coins = 0;
  PyObject *__pyx_v_url = 0;
  PyObject *__pyx_v_version = 0;
  PyObject *__pyx_v_levelid = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("uploadLevel (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_username,&__pyx_n_s_password,&__pyx_n_s_description,&__pyx_n_s_stars,&__pyx_n_s_unlisted,&__pyx_n_s_lpassword,&__pyx_n_s_songid,&__pyx_n_s_audiotrack,&__pyx_n_s_twoPlayer,&__pyx_n_s_fromString,&__pyx_n_s_coins,&__pyx_n_s_url,&__pyx_n_s_version,&__pyx_n_s_levelid,0};
    PyObject* values[15] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    values[3] = ((PyObject *)((PyObject*)__pyx_kp_u__25));
    values[4] = ((PyObject *)((PyObject *)__pyx_int_0));
    values[5] = ((PyObject *)((PyObject *)__pyx_int_0));
    values[6] = ((PyObject *)((PyObject *)__pyx_int_0));
    values[7] = ((PyObject *)((PyObject *)__pyx_int_0));
    values[8] = ((PyObject *)((PyObject *)__pyx_int_1));
    values[9] = ((PyObject *)((PyObject *)__pyx_int_0));
    values[10] = ((PyObject *)((PyObject *)Py_False));
    values[11] = ((PyObject *)((PyObject*)__pyx_kp_u_0));
    values[12] = ((PyObject *)((PyObject*)__pyx_kp_u_http_boomlings_com_database_uplo));
    values[13] = ((PyObject *)((PyObject *)__pyx_int_1));
    values[14] = ((PyObject *)((PyObject *)__pyx_int_0));
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_username)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("uploadLevel", 0, 3, 15, 1); __PYX_ERR(0, 141, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_password)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("uploadLevel", 0, 3, 15, 2); __PYX_ERR(0, 141, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_description);
          if (value) { values[3] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_stars);
          if (value) { values[4] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_unlisted);
          if (value) { values[5] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lpassword);
          if (value) { values[6] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_songid);
          if (value) { values[7] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_audiotrack);
          if (value) { values[8] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_twoPlayer);
          if (value) { values[9] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fromString);
          if (value) { values[10] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_coins);
          if (value) { values[11] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_url);
          if (value) { values[12] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_version);
          if (value) { values[13] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_levelid);
          if (value) { values[14] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "uploadLevel") < 0)) __PYX_ERR(0, 141, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_username = values[1];
    __pyx_v_password = values[2];
    __pyx_v_description = values[3];
    __pyx_v_stars = values[4];
    __pyx_v_unlisted = values[5];
    __pyx_v_lpassword = values[6];
    __pyx_v_songid = values[7];
    __pyx_v_audiotrack = values[8];
    __pyx_v_twoPlayer = values[9];
    __pyx_v_fromString = values[10];
    __pyx_v_coins = values[11];
    __pyx_v_url = values[12];
    __pyx_v_version = values[13];
    __pyx_v_levelid = values[14];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("uploadLevel", 0, 3, 15, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 141, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("main.Level.uploadLevel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4main_5Level_12uploadLevel(__pyx_self, __pyx_v_self, __pyx_v_username, __pyx_v_password, __pyx_v_description, __pyx_v_stars, __pyx_v_unlisted, __pyx_v_lpassword, __pyx_v_songid, __pyx_v_audiotrack, __pyx_v_twoPlayer, __pyx_v_fromString, __pyx_v_coins, __pyx_v_url, __pyx_v_version, __pyx_v_levelid);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_5Level_12uploadLevel(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_username, PyObject *__pyx_v_password, PyObject *__pyx_v_description, PyObject *__pyx_v_stars, PyObject *__pyx_v_unlisted, PyObject *__pyx_v_lpassword, PyObject *__pyx_v_songid, PyObject *__pyx_v_audiotrack, PyObject *__pyx_v_twoPlayer, PyObject *__pyx_v_fromString, PyObject *__pyx_v_coins, PyObject *__pyx_v_url, PyObject *__pyx_v_version, PyObject *__pyx_v_levelid) {
  PyObject *__pyx_v_seed2 = NULL;
  PyObject *__pyx_v_dictionary = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  Py_ssize_t __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("uploadLevel", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":142
 * 				self.blocks.append(i)
 * 	def uploadLevel(self,username,password,description="",stars=0,unlisted=0,lpassword=0,songid=0,audiotrack=1,twoPlayer=0,fromString=False,coins='0',url="http://boomlings.com/database/uploadGJLevel21.php",version=1,levelid=0):
 * 		if not fromString:             # <<<<<<<<<<<<<<
 * 			self.encodee()
 * 		else:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_fromString); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 142, __pyx_L1_error)
  __pyx_t_2 = ((!__pyx_t_1) != 0);
  if (__pyx_t_2) {

    /* "../../pyedit_engine/cy/PyLvl.pyx":143
 * 	def uploadLevel(self,username,password,description="",stars=0,unlisted=0,lpassword=0,songid=0,audiotrack=1,twoPlayer=0,fromString=False,coins='0',url="http://boomlings.com/database/uploadGJLevel21.php",version=1,levelid=0):
 * 		if not fromString:
 * 			self.encodee()             # <<<<<<<<<<<<<<
 * 		else:
 * 			self.encoded = self.str
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_encodee); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 143, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 143, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "../../pyedit_engine/cy/PyLvl.pyx":142
 * 				self.blocks.append(i)
 * 	def uploadLevel(self,username,password,description="",stars=0,unlisted=0,lpassword=0,songid=0,audiotrack=1,twoPlayer=0,fromString=False,coins='0',url="http://boomlings.com/database/uploadGJLevel21.php",version=1,levelid=0):
 * 		if not fromString:             # <<<<<<<<<<<<<<
 * 			self.encodee()
 * 		else:
 */
    goto __pyx_L3;
  }

  /* "../../pyedit_engine/cy/PyLvl.pyx":145
 * 			self.encodee()
 * 		else:
 * 			self.encoded = self.str             # <<<<<<<<<<<<<<
 * 		seed2 = makeSeed(self.encoded)
 * 		dictionary = {"accountID":getAccountID(username),"gjp":xor(password,"37526"),"userName":username,"levelID":levelid,"levelName":self.name,"levelDesc":base64.b64encode(description.encode()),"levelVersion":str(version),"levelLength":"0","audioTrack":str(audiotrack),"auto":"0","password":str(lpassword),"original":"0","twoPlayer":str(twoPlayer),"songID":str(songid),"objects":str(len(self.blocks)),"coins":coins,"requestedStars":str(stars),"unlisted":str(unlisted),"wt":"13","wt2":"0","ldm":"0","seed":"BBUEIHF1rd","extraString":"0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0","seed2":seed2,"levelString":self.encoded,"secret":"Wmfd2893gb7","levelInfo":"H4sIAAAAAAAAEzOwNrQ20DMwsrY21DMztbYGAJp7I8gQAAAA"}
 */
  /*else*/ {
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_str); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 145, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_encoded, __pyx_t_3) < 0) __PYX_ERR(0, 145, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_L3:;

  /* "../../pyedit_engine/cy/PyLvl.pyx":146
 * 		else:
 * 			self.encoded = self.str
 * 		seed2 = makeSeed(self.encoded)             # <<<<<<<<<<<<<<
 * 		dictionary = {"accountID":getAccountID(username),"gjp":xor(password,"37526"),"userName":username,"levelID":levelid,"levelName":self.name,"levelDesc":base64.b64encode(description.encode()),"levelVersion":str(version),"levelLength":"0","audioTrack":str(audiotrack),"auto":"0","password":str(lpassword),"original":"0","twoPlayer":str(twoPlayer),"songID":str(songid),"objects":str(len(self.blocks)),"coins":coins,"requestedStars":str(stars),"unlisted":str(unlisted),"wt":"13","wt2":"0","ldm":"0","seed":"BBUEIHF1rd","extraString":"0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0","seed2":seed2,"levelString":self.encoded,"secret":"Wmfd2893gb7","levelInfo":"H4sIAAAAAAAAEzOwNrQ20DMwsrY21DMztbYGAJp7I8gQAAAA"}
 * 		dictionary.update(starting)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_makeSeed); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_encoded); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_3 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_seed2 = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":147
 * 			self.encoded = self.str
 * 		seed2 = makeSeed(self.encoded)
 * 		dictionary = {"accountID":getAccountID(username),"gjp":xor(password,"37526"),"userName":username,"levelID":levelid,"levelName":self.name,"levelDesc":base64.b64encode(description.encode()),"levelVersion":str(version),"levelLength":"0","audioTrack":str(audiotrack),"auto":"0","password":str(lpassword),"original":"0","twoPlayer":str(twoPlayer),"songID":str(songid),"objects":str(len(self.blocks)),"coins":coins,"requestedStars":str(stars),"unlisted":str(unlisted),"wt":"13","wt2":"0","ldm":"0","seed":"BBUEIHF1rd","extraString":"0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0","seed2":seed2,"levelString":self.encoded,"secret":"Wmfd2893gb7","levelInfo":"H4sIAAAAAAAAEzOwNrQ20DMwsrY21DMztbYGAJp7I8gQAAAA"}             # <<<<<<<<<<<<<<
 * 		dictionary.update(starting)
 * 		return urlopen(url,urlencode(dictionary).replace('%3D','=')).read().decode()
 */
  __pyx_t_3 = __Pyx_PyDict_NewPresized(27); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_getAccountID); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_v_username) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_username);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_accountID, __pyx_t_4) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_xor); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_7 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_5)) {
    PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_v_password, __pyx_kp_u_37526};
    __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 147, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_4);
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
    PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_v_password, __pyx_kp_u_37526};
    __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 147, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_4);
  } else
  #endif
  {
    __pyx_t_8 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 147, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    if (__pyx_t_6) {
      __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
    }
    __Pyx_INCREF(__pyx_v_password);
    __Pyx_GIVEREF(__pyx_v_password);
    PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_v_password);
    __Pyx_INCREF(__pyx_kp_u_37526);
    __Pyx_GIVEREF(__pyx_kp_u_37526);
    PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_kp_u_37526);
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_8, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 147, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_gjp, __pyx_t_4) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_userName, __pyx_v_username) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_levelID, __pyx_v_levelid) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_name_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_levelName, __pyx_t_4) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_base64); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_b64encode); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_description, __pyx_n_s_encode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_9 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  __pyx_t_5 = (__pyx_t_9) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_9) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
  if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
    }
  }
  __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_levelDesc, __pyx_t_4) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_v_version); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_levelVersion, __pyx_t_4) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_levelLength, __pyx_kp_u_0) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_v_audiotrack); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_audioTrack, __pyx_t_4) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_auto, __pyx_kp_u_0) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_v_lpassword); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_password, __pyx_t_4) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_original, __pyx_kp_u_0) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_v_twoPlayer); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_twoPlayer, __pyx_t_4) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_v_songid); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_songID, __pyx_t_4) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_blocks); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_10 = PyObject_Length(__pyx_t_4); if (unlikely(__pyx_t_10 == ((Py_ssize_t)-1))) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyInt_FromSsize_t(__pyx_t_10); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_8 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_t_4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_objects, __pyx_t_8) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_coins, __pyx_v_coins) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  __pyx_t_8 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_v_stars); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_requestedStars, __pyx_t_8) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_v_unlisted); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_unlisted, __pyx_t_8) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_wt, __pyx_kp_u_13) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_wt2, __pyx_kp_u_0) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_ldm, __pyx_kp_u_0) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_seed, __pyx_n_u_BBUEIHF1rd) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_extraString, __pyx_kp_u_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_seed2, __pyx_v_seed2) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_encoded); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_levelString, __pyx_t_8) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_secret, __pyx_n_u_Wmfd2893gb7) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_levelInfo, __pyx_n_u_H4sIAAAAAAAAEzOwNrQ20DMwsrY21DMz) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  __pyx_v_dictionary = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":148
 * 		seed2 = makeSeed(self.encoded)
 * 		dictionary = {"accountID":getAccountID(username),"gjp":xor(password,"37526"),"userName":username,"levelID":levelid,"levelName":self.name,"levelDesc":base64.b64encode(description.encode()),"levelVersion":str(version),"levelLength":"0","audioTrack":str(audiotrack),"auto":"0","password":str(lpassword),"original":"0","twoPlayer":str(twoPlayer),"songID":str(songid),"objects":str(len(self.blocks)),"coins":coins,"requestedStars":str(stars),"unlisted":str(unlisted),"wt":"13","wt2":"0","ldm":"0","seed":"BBUEIHF1rd","extraString":"0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0","seed2":seed2,"levelString":self.encoded,"secret":"Wmfd2893gb7","levelInfo":"H4sIAAAAAAAAEzOwNrQ20DMwsrY21DMztbYGAJp7I8gQAAAA"}
 * 		dictionary.update(starting)             # <<<<<<<<<<<<<<
 * 		return urlopen(url,urlencode(dictionary).replace('%3D','=')).read().decode()
 * 	def __str__(self):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_starting); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_8 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyDict_Type_update, __pyx_v_dictionary, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":149
 * 		dictionary = {"accountID":getAccountID(username),"gjp":xor(password,"37526"),"userName":username,"levelID":levelid,"levelName":self.name,"levelDesc":base64.b64encode(description.encode()),"levelVersion":str(version),"levelLength":"0","audioTrack":str(audiotrack),"auto":"0","password":str(lpassword),"original":"0","twoPlayer":str(twoPlayer),"songID":str(songid),"objects":str(len(self.blocks)),"coins":coins,"requestedStars":str(stars),"unlisted":str(unlisted),"wt":"13","wt2":"0","ldm":"0","seed":"BBUEIHF1rd","extraString":"0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0","seed2":seed2,"levelString":self.encoded,"secret":"Wmfd2893gb7","levelInfo":"H4sIAAAAAAAAEzOwNrQ20DMwsrY21DMztbYGAJp7I8gQAAAA"}
 * 		dictionary.update(starting)
 * 		return urlopen(url,urlencode(dictionary).replace('%3D','=')).read().decode()             # <<<<<<<<<<<<<<
 * 	def __str__(self):
 * 		return str(self.header) + ';' + ';'.join([str(x) for x in self.blocks])
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_urlopen); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_urlencode); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_11 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
    __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_9);
    if (likely(__pyx_t_11)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
      __Pyx_INCREF(__pyx_t_11);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_9, function);
    }
  }
  __pyx_t_6 = (__pyx_t_11) ? __Pyx_PyObject_Call2Args(__pyx_t_9, __pyx_t_11, __pyx_v_dictionary) : __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_v_dictionary);
  __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
  if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_replace); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_tuple__34, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __pyx_t_9 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_7 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_5)) {
    PyObject *__pyx_temp[3] = {__pyx_t_9, __pyx_v_url, __pyx_t_6};
    __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 149, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
    PyObject *__pyx_temp[3] = {__pyx_t_9, __pyx_v_url, __pyx_t_6};
    __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 149, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  {
    __pyx_t_11 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 149, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    if (__pyx_t_9) {
      __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_9); __pyx_t_9 = NULL;
    }
    __Pyx_INCREF(__pyx_v_url);
    __Pyx_GIVEREF(__pyx_v_url);
    PyTuple_SET_ITEM(__pyx_t_11, 0+__pyx_t_7, __pyx_v_url);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_11, 1+__pyx_t_7, __pyx_t_6);
    __pyx_t_6 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_11, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 149, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_read); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_decode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_8 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_r = __pyx_t_8;
  __pyx_t_8 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":141
 * 			if hasattr(i,'coords'):
 * 				self.blocks.append(i)
 * 	def uploadLevel(self,username,password,description="",stars=0,unlisted=0,lpassword=0,songid=0,audiotrack=1,twoPlayer=0,fromString=False,coins='0',url="http://boomlings.com/database/uploadGJLevel21.php",version=1,levelid=0):             # <<<<<<<<<<<<<<
 * 		if not fromString:
 * 			self.encodee()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("main.Level.uploadLevel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_seed2);
  __Pyx_XDECREF(__pyx_v_dictionary);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":150
 * 		dictionary.update(starting)
 * 		return urlopen(url,urlencode(dictionary).replace('%3D','=')).read().decode()
 * 	def __str__(self):             # <<<<<<<<<<<<<<
 * 		return str(self.header) + ';' + ';'.join([str(x) for x in self.blocks])
 * 	def encodee(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_5Level_15__str__(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_4main_5Level_15__str__ = {"__str__", (PyCFunction)__pyx_pw_4main_5Level_15__str__, METH_O, 0};
static PyObject *__pyx_pw_4main_5Level_15__str__(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_5Level_14__str__(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_5Level_14__str__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_8genexpr5__pyx_v_x = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__str__", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":151
 * 		return urlopen(url,urlencode(dictionary).replace('%3D','=')).read().decode()
 * 	def __str__(self):
 * 		return str(self.header) + ';' + ';'.join([str(x) for x in self.blocks])             # <<<<<<<<<<<<<<
 * 	def encodee(self):
 * 		data = base64.b64encode((gzip.compress(self.__str__().encode(),compresslevel=6)))
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_header); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyUnicode_Concat(__pyx_t_2, __pyx_kp_u__35); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  { /* enter inner scope */
    __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 151, __pyx_L5_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_blocks); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 151, __pyx_L5_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_4 = __pyx_t_3; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_6 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 151, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_6 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 151, __pyx_L5_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_6)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 151, __pyx_L5_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 151, __pyx_L5_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 151, __pyx_L5_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 151, __pyx_L5_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_6(__pyx_t_4);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 151, __pyx_L5_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_8genexpr5__pyx_v_x, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyUnicode_Type)), __pyx_8genexpr5__pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 151, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_2, (PyObject*)__pyx_t_3))) __PYX_ERR(0, 151, __pyx_L5_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_8genexpr5__pyx_v_x); __pyx_8genexpr5__pyx_v_x = 0;
    goto __pyx_L8_exit_scope;
    __pyx_L5_error:;
    __Pyx_XDECREF(__pyx_8genexpr5__pyx_v_x); __pyx_8genexpr5__pyx_v_x = 0;
    goto __pyx_L1_error;
    __pyx_L8_exit_scope:;
  } /* exit inner scope */
  __pyx_t_4 = PyUnicode_Join(__pyx_kp_u__35, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyUnicode_Concat(__pyx_t_1, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":150
 * 		dictionary.update(starting)
 * 		return urlopen(url,urlencode(dictionary).replace('%3D','=')).read().decode()
 * 	def __str__(self):             # <<<<<<<<<<<<<<
 * 		return str(self.header) + ';' + ';'.join([str(x) for x in self.blocks])
 * 	def encodee(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("main.Level.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_8genexpr5__pyx_v_x);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":152
 * 	def __str__(self):
 * 		return str(self.header) + ';' + ';'.join([str(x) for x in self.blocks])
 * 	def encodee(self):             # <<<<<<<<<<<<<<
 * 		data = base64.b64encode((gzip.compress(self.__str__().encode(),compresslevel=6)))
 * 		self.encoded = data.replace(data[4:13],b"AAAAAAAAE").replace(b"+",b"-").replace(b"/",b"_").decode()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_5Level_17encodee(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_4main_5Level_17encodee = {"encodee", (PyCFunction)__pyx_pw_4main_5Level_17encodee, METH_O, 0};
static PyObject *__pyx_pw_4main_5Level_17encodee(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("encodee (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_5Level_16encodee(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_5Level_16encodee(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_v_data = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("encodee", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":153
 * 		return str(self.header) + ';' + ';'.join([str(x) for x in self.blocks])
 * 	def encodee(self):
 * 		data = base64.b64encode((gzip.compress(self.__str__().encode(),compresslevel=6)))             # <<<<<<<<<<<<<<
 * 		self.encoded = data.replace(data[4:13],b"AAAAAAAAE").replace(b"+",b"-").replace(b"/",b"_").decode()
 * def getSong(lid):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_base64); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_b64encode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_gzip); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_compress); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_str_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  __pyx_t_5 = (__pyx_t_7) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
  if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_encode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_compresslevel, __pyx_int_6) < 0) __PYX_ERR(0, 153, __pyx_L1_error)
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_data = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":154
 * 	def encodee(self):
 * 		data = base64.b64encode((gzip.compress(self.__str__().encode(),compresslevel=6)))
 * 		self.encoded = data.replace(data[4:13],b"AAAAAAAAE").replace(b"+",b"-").replace(b"/",b"_").decode()             # <<<<<<<<<<<<<<
 * def getSong(lid):
 * 		return requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[49]
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_data, __pyx_n_s_replace); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_v_data, 4, 13, NULL, NULL, &__pyx_slice__36, 1, 1, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_8 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_5)) {
    PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_2, __pyx_n_b_AAAAAAAAE};
    __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 154, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
    PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_2, __pyx_n_b_AAAAAAAAE};
    __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 154, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else
  #endif
  {
    __pyx_t_4 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 154, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_6) {
      __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_6); __pyx_t_6 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_8, __pyx_t_2);
    __Pyx_INCREF(__pyx_n_b_AAAAAAAAE);
    __Pyx_GIVEREF(__pyx_n_b_AAAAAAAAE);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_8, __pyx_n_b_AAAAAAAAE);
    __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 154, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_replace); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__39, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_replace); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__42, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_decode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_encoded, __pyx_t_1) < 0) __PYX_ERR(0, 154, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":152
 * 	def __str__(self):
 * 		return str(self.header) + ';' + ';'.join([str(x) for x in self.blocks])
 * 	def encodee(self):             # <<<<<<<<<<<<<<
 * 		data = base64.b64encode((gzip.compress(self.__str__().encode(),compresslevel=6)))
 * 		self.encoded = data.replace(data[4:13],b"AAAAAAAAE").replace(b"+",b"-").replace(b"/",b"_").decode()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("main.Level.encodee", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_data);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":155
 * 		data = base64.b64encode((gzip.compress(self.__str__().encode(),compresslevel=6)))
 * 		self.encoded = data.replace(data[4:13],b"AAAAAAAAE").replace(b"+",b"-").replace(b"/",b"_").decode()
 * def getSong(lid):             # <<<<<<<<<<<<<<
 * 		return requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[49]
 * def levelString(levelname,lstr):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_13getSong(PyObject *__pyx_self, PyObject *__pyx_v_lid); /*proto*/
static PyMethodDef __pyx_mdef_4main_13getSong = {"getSong", (PyCFunction)__pyx_pw_4main_13getSong, METH_O, 0};
static PyObject *__pyx_pw_4main_13getSong(PyObject *__pyx_self, PyObject *__pyx_v_lid) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getSong (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_12getSong(__pyx_self, ((PyObject *)__pyx_v_lid));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_12getSong(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_lid) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getSong", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":156
 * 		self.encoded = data.replace(data[4:13],b"AAAAAAAAE").replace(b"+",b"-").replace(b"/",b"_").decode()
 * def getSong(lid):
 * 		return requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[49]             # <<<<<<<<<<<<<<
 * def levelString(levelname,lstr):
 * 	a = Level(levelname)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_requests); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_post); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyUnicode_FormatSafe(__pyx_kp_u_gameVersion_21_binaryVersion_35, __pyx_v_lid); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_kp_u_http_www_boomlings_com_database_2);
  __Pyx_GIVEREF(__pyx_kp_u_http_www_boomlings_com_database_2);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_http_www_boomlings_com_database_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_kp_u_Content_Type, __pyx_kp_u_application_x_www_form_urlencode) < 0) __PYX_ERR(0, 156, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_headers, __pyx_t_5) < 0) __PYX_ERR(0, 156, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_text); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_2, __pyx_kp_u__27) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_u__27);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_1, 49, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":155
 * 		data = base64.b64encode((gzip.compress(self.__str__().encode(),compresslevel=6)))
 * 		self.encoded = data.replace(data[4:13],b"AAAAAAAAE").replace(b"+",b"-").replace(b"/",b"_").decode()
 * def getSong(lid):             # <<<<<<<<<<<<<<
 * 		return requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[49]
 * def levelString(levelname,lstr):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("main.getSong", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":157
 * def getSong(lid):
 * 		return requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[49]
 * def levelString(levelname,lstr):             # <<<<<<<<<<<<<<
 * 	a = Level(levelname)
 * 	lst = lstr.split(";")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_15levelString(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_4main_15levelString = {"levelString", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_15levelString, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_4main_15levelString(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_levelname = 0;
  PyObject *__pyx_v_lstr = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("levelString (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_levelname,&__pyx_n_s_lstr,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_levelname)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lstr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("levelString", 1, 2, 2, 1); __PYX_ERR(0, 157, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "levelString") < 0)) __PYX_ERR(0, 157, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_levelname = values[0];
    __pyx_v_lstr = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("levelString", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 157, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("main.levelString", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4main_14levelString(__pyx_self, __pyx_v_levelname, __pyx_v_lstr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_14levelString(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_levelname, PyObject *__pyx_v_lstr) {
  PyObject *__pyx_v_a = NULL;
  PyObject *__pyx_v_lst = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *(*__pyx_t_5)(PyObject *);
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("levelString", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":158
 * 		return requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[49]
 * def levelString(levelname,lstr):
 * 	a = Level(levelname)             # <<<<<<<<<<<<<<
 * 	lst = lstr.split(";")
 * 	a.header = lst[0]
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Level); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 158, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_v_levelname) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_levelname);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 158, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_a = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":159
 * def levelString(levelname,lstr):
 * 	a = Level(levelname)
 * 	lst = lstr.split(";")             # <<<<<<<<<<<<<<
 * 	a.header = lst[0]
 * 	for i in lst[1:-1]:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_lstr, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_kp_u__35) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_kp_u__35);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_lst = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":160
 * 	a = Level(levelname)
 * 	lst = lstr.split(";")
 * 	a.header = lst[0]             # <<<<<<<<<<<<<<
 * 	for i in lst[1:-1]:
 * 		a.blocks.append(Block.blockFromString(i))
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_lst, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 160, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_a, __pyx_n_s_header, __pyx_t_1) < 0) __PYX_ERR(0, 160, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":161
 * 	lst = lstr.split(";")
 * 	a.header = lst[0]
 * 	for i in lst[1:-1]:             # <<<<<<<<<<<<<<
 * 		a.blocks.append(Block.blockFromString(i))
 * 	return a
 */
  __pyx_t_1 = __Pyx_PyObject_GetSlice(__pyx_v_lst, 1, -1L, NULL, NULL, &__pyx_slice__43, 1, 1, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_4 = 0;
    __pyx_t_5 = NULL;
  } else {
    __pyx_t_4 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 161, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 161, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_5)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 161, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 161, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 161, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 161, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_5(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 161, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "../../pyedit_engine/cy/PyLvl.pyx":162
 * 	a.header = lst[0]
 * 	for i in lst[1:-1]:
 * 		a.blocks.append(Block.blockFromString(i))             # <<<<<<<<<<<<<<
 * 	return a
 * def downloadLevel(levelname,lid):
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_a, __pyx_n_s_blocks); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 162, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_Block); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 162, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_blockFromString); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 162, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    __pyx_t_3 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_6, __pyx_v_i) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_v_i);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 162, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_8 = __Pyx_PyObject_Append(__pyx_t_1, __pyx_t_3); if (unlikely(__pyx_t_8 == ((int)-1))) __PYX_ERR(0, 162, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "../../pyedit_engine/cy/PyLvl.pyx":161
 * 	lst = lstr.split(";")
 * 	a.header = lst[0]
 * 	for i in lst[1:-1]:             # <<<<<<<<<<<<<<
 * 		a.blocks.append(Block.blockFromString(i))
 * 	return a
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":163
 * 	for i in lst[1:-1]:
 * 		a.blocks.append(Block.blockFromString(i))
 * 	return a             # <<<<<<<<<<<<<<
 * def downloadLevel(levelname,lid):
 * 	base64.b64decode(requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[7],'-_')
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_a);
  __pyx_r = __pyx_v_a;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":157
 * def getSong(lid):
 * 		return requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[49]
 * def levelString(levelname,lstr):             # <<<<<<<<<<<<<<
 * 	a = Level(levelname)
 * 	lst = lstr.split(";")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("main.levelString", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_a);
  __Pyx_XDECREF(__pyx_v_lst);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyLvl.pyx":164
 * 		a.blocks.append(Block.blockFromString(i))
 * 	return a
 * def downloadLevel(levelname,lid):             # <<<<<<<<<<<<<<
 * 	base64.b64decode(requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[7],'-_')
 * 	return levelString(levelname,gzip.decompress(base64.b64decode(requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[7],'-_')).decode())
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_17downloadLevel(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_4main_17downloadLevel = {"downloadLevel", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_17downloadLevel, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_4main_17downloadLevel(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_levelname = 0;
  PyObject *__pyx_v_lid = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("downloadLevel (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_levelname,&__pyx_n_s_lid,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_levelname)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lid)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("downloadLevel", 1, 2, 2, 1); __PYX_ERR(0, 164, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "downloadLevel") < 0)) __PYX_ERR(0, 164, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_levelname = values[0];
    __pyx_v_lid = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("downloadLevel", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 164, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("main.downloadLevel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4main_16downloadLevel(__pyx_self, __pyx_v_levelname, __pyx_v_lid);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_16downloadLevel(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_levelname, PyObject *__pyx_v_lid) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("downloadLevel", 0);

  /* "../../pyedit_engine/cy/PyLvl.pyx":165
 * 	return a
 * def downloadLevel(levelname,lid):
 * 	base64.b64decode(requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[7],'-_')             # <<<<<<<<<<<<<<
 * 	return levelString(levelname,gzip.decompress(base64.b64decode(requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[7],'-_')).decode())
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_base64); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_b64decode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_requests); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_post); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyUnicode_FormatSafe(__pyx_kp_u_gameVersion_21_binaryVersion_35, __pyx_v_lid); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_INCREF(__pyx_kp_u_http_www_boomlings_com_database_2);
  __Pyx_GIVEREF(__pyx_kp_u_http_www_boomlings_com_database_2);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_kp_u_http_www_boomlings_com_database_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_4);
  __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_7 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (PyDict_SetItem(__pyx_t_7, __pyx_kp_u_Content_Type, __pyx_kp_u_application_x_www_form_urlencode) < 0) __PYX_ERR(0, 165, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_headers, __pyx_t_7) < 0) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_6, __pyx_t_4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_text); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
    }
  }
  __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_4, __pyx_kp_u__27) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_kp_u__27);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_2, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_8 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_3)) {
    PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_t_7, __pyx_kp_u__32};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 165, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
    PyObject *__pyx_temp[3] = {__pyx_t_2, __pyx_t_7, __pyx_kp_u__32};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 165, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  } else
  #endif
  {
    __pyx_t_4 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 165, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_2) {
      __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2); __pyx_t_2 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_8, __pyx_t_7);
    __Pyx_INCREF(__pyx_kp_u__32);
    __Pyx_GIVEREF(__pyx_kp_u__32);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_8, __pyx_kp_u__32);
    __pyx_t_7 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 165, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":166
 * def downloadLevel(levelname,lid):
 * 	base64.b64decode(requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[7],'-_')
 * 	return levelString(levelname,gzip.decompress(base64.b64decode(requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[7],'-_')).decode())             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_levelString); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_gzip); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_decompress); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_base64); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_b64decode); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_requests); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_post); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __pyx_t_10 = __Pyx_PyUnicode_FormatSafe(__pyx_kp_u_gameVersion_21_binaryVersion_35, __pyx_v_lid); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_12 = PyTuple_New(2); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __Pyx_INCREF(__pyx_kp_u_http_www_boomlings_com_database_2);
  __Pyx_GIVEREF(__pyx_kp_u_http_www_boomlings_com_database_2);
  PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_kp_u_http_www_boomlings_com_database_2);
  __Pyx_GIVEREF(__pyx_t_10);
  PyTuple_SET_ITEM(__pyx_t_12, 1, __pyx_t_10);
  __pyx_t_10 = 0;
  __pyx_t_10 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_13 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_13);
  if (PyDict_SetItem(__pyx_t_13, __pyx_kp_u_Content_Type, __pyx_kp_u_application_x_www_form_urlencode) < 0) __PYX_ERR(0, 166, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_10, __pyx_n_s_headers, __pyx_t_13) < 0) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
  __pyx_t_13 = __Pyx_PyObject_Call(__pyx_t_11, __pyx_t_12, __pyx_t_10); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_13);
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_text); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
  __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_split); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_13);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __pyx_t_10 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
    __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_13);
    if (likely(__pyx_t_10)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
      __Pyx_INCREF(__pyx_t_10);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_13, function);
    }
  }
  __pyx_t_5 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_10, __pyx_kp_u__27) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_kp_u__27);
  __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
  if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
  __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_5, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_13);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_9);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_9, function);
      __pyx_t_8 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_9)) {
    PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_t_13, __pyx_kp_u__32};
    __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 166, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
    PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_t_13, __pyx_kp_u__32};
    __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 166, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
  } else
  #endif
  {
    __pyx_t_10 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_13);
    PyTuple_SET_ITEM(__pyx_t_10, 0+__pyx_t_8, __pyx_t_13);
    __Pyx_INCREF(__pyx_kp_u__32);
    __Pyx_GIVEREF(__pyx_kp_u__32);
    PyTuple_SET_ITEM(__pyx_t_10, 1+__pyx_t_8, __pyx_kp_u__32);
    __pyx_t_13 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_10, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  }
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __pyx_t_9 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  __pyx_t_7 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_9, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_decode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_8 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_3)) {
    PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_v_levelname, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 166, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
    PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_v_levelname, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 166, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_7 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_6) {
      __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
    }
    __Pyx_INCREF(__pyx_v_levelname);
    __Pyx_GIVEREF(__pyx_v_levelname);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_8, __pyx_v_levelname);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_8, __pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":164
 * 		a.blocks.append(Block.blockFromString(i))
 * 	return a
 * def downloadLevel(levelname,lid):             # <<<<<<<<<<<<<<
 * 	base64.b64decode(requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[7],'-_')
 * 	return levelString(levelname,gzip.decompress(base64.b64decode(requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[7],'-_')).decode())
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_AddTraceback("main.downloadLevel", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyEvent.pyx":12
 * 	cdef list valid_events;
 * 
 * 	cdef extractEv(self, event_base* ev):             # <<<<<<<<<<<<<<
 * 		if ev.name == b"add_object":
 * 			the = <add_object_event*>ev
 */

static PyObject *__pyx_f_4main_14PyEventHandler_extractEv(CYTHON_UNUSED struct __pyx_obj_4main_PyEventHandler *__pyx_v_self, struct event_base *__pyx_v_ev) {
  CYTHON_UNUSED struct add_object_event *__pyx_v_the;
  PyObject *__pyx_v_obj = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("extractEv", 0);

  /* "../../pyedit_engine/cy/PyEvent.pyx":13
 * 
 * 	cdef extractEv(self, event_base* ev):
 * 		if ev.name == b"add_object":             # <<<<<<<<<<<<<<
 * 			the = <add_object_event*>ev
 * 			obj = Editor().selection[0]
 */
  __pyx_t_1 = ((__pyx_v_ev->name == ((char const *)"add_object")) != 0);
  if (__pyx_t_1) {

    /* "../../pyedit_engine/cy/PyEvent.pyx":14
 * 	cdef extractEv(self, event_base* ev):
 * 		if ev.name == b"add_object":
 * 			the = <add_object_event*>ev             # <<<<<<<<<<<<<<
 * 			obj = Editor().selection[0]
 * 			return {"name": "add_object", "object": obj}
 */
    __pyx_v_the = ((struct add_object_event *)__pyx_v_ev);

    /* "../../pyedit_engine/cy/PyEvent.pyx":15
 * 		if ev.name == b"add_object":
 * 			the = <add_object_event*>ev
 * 			obj = Editor().selection[0]             # <<<<<<<<<<<<<<
 * 			return {"name": "add_object", "object": obj}
 * 		else:
 */
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_4main_Editor)); if (unlikely(!__pyx_t_2)) __PYX_ERR(6, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_selection); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(6, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_obj = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "../../pyedit_engine/cy/PyEvent.pyx":16
 * 			the = <add_object_event*>ev
 * 			obj = Editor().selection[0]
 * 			return {"name": "add_object", "object": obj}             # <<<<<<<<<<<<<<
 * 		else:
 * 			return {"name": ev.name}
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(6, 16, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (PyDict_SetItem(__pyx_t_2, __pyx_n_u_name_2, __pyx_n_u_add_object) < 0) __PYX_ERR(6, 16, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_2, __pyx_n_u_object, __pyx_v_obj) < 0) __PYX_ERR(6, 16, __pyx_L1_error)
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;

    /* "../../pyedit_engine/cy/PyEvent.pyx":13
 * 
 * 	cdef extractEv(self, event_base* ev):
 * 		if ev.name == b"add_object":             # <<<<<<<<<<<<<<
 * 			the = <add_object_event*>ev
 * 			obj = Editor().selection[0]
 */
  }

  /* "../../pyedit_engine/cy/PyEvent.pyx":18
 * 			return {"name": "add_object", "object": obj}
 * 		else:
 * 			return {"name": ev.name}             # <<<<<<<<<<<<<<
 * 
 * 	def __cinit__(self):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(6, 18, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_ev->name); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 18, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (PyDict_SetItem(__pyx_t_2, __pyx_n_u_name_2, __pyx_t_3) < 0) __PYX_ERR(6, 18, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
  }

  /* "../../pyedit_engine/cy/PyEvent.pyx":12
 * 	cdef list valid_events;
 * 
 * 	cdef extractEv(self, event_base* ev):             # <<<<<<<<<<<<<<
 * 		if ev.name == b"add_object":
 * 			the = <add_object_event*>ev
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("main.PyEventHandler.extractEv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyEvent.pyx":20
 * 			return {"name": ev.name}
 * 
 * 	def __cinit__(self):             # <<<<<<<<<<<<<<
 * 		self.events = []
 * 		self.valid_events = [
 */

/* Python wrapper */
static int __pyx_pw_4main_14PyEventHandler_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4main_14PyEventHandler_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_4main_14PyEventHandler___cinit__(((struct __pyx_obj_4main_PyEventHandler *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4main_14PyEventHandler___cinit__(struct __pyx_obj_4main_PyEventHandler *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "../../pyedit_engine/cy/PyEvent.pyx":21
 * 
 * 	def __cinit__(self):
 * 		self.events = []             # <<<<<<<<<<<<<<
 * 		self.valid_events = [
 * 			"add_object", "remove_objects", "move_objects", "press_edit_button",
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(6, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->events);
  __Pyx_DECREF(__pyx_v_self->events);
  __pyx_v_self->events = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyEvent.pyx":22
 * 	def __cinit__(self):
 * 		self.events = []
 * 		self.valid_events = [             # <<<<<<<<<<<<<<
 * 			"add_object", "remove_objects", "move_objects", "press_edit_button",
 * 			"press_menu_button", "select_objects", "press_key"
 */
  __pyx_t_1 = PyList_New(7); if (unlikely(!__pyx_t_1)) __PYX_ERR(6, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_u_add_object);
  __Pyx_GIVEREF(__pyx_n_u_add_object);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_u_add_object);
  __Pyx_INCREF(__pyx_n_u_remove_objects);
  __Pyx_GIVEREF(__pyx_n_u_remove_objects);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_n_u_remove_objects);
  __Pyx_INCREF(__pyx_n_u_move_objects);
  __Pyx_GIVEREF(__pyx_n_u_move_objects);
  PyList_SET_ITEM(__pyx_t_1, 2, __pyx_n_u_move_objects);
  __Pyx_INCREF(__pyx_n_u_press_edit_button);
  __Pyx_GIVEREF(__pyx_n_u_press_edit_button);
  PyList_SET_ITEM(__pyx_t_1, 3, __pyx_n_u_press_edit_button);
  __Pyx_INCREF(__pyx_n_u_press_menu_button);
  __Pyx_GIVEREF(__pyx_n_u_press_menu_button);
  PyList_SET_ITEM(__pyx_t_1, 4, __pyx_n_u_press_menu_button);
  __Pyx_INCREF(__pyx_n_u_select_objects);
  __Pyx_GIVEREF(__pyx_n_u_select_objects);
  PyList_SET_ITEM(__pyx_t_1, 5, __pyx_n_u_select_objects);
  __Pyx_INCREF(__pyx_n_u_press_key);
  __Pyx_GIVEREF(__pyx_n_u_press_key);
  PyList_SET_ITEM(__pyx_t_1, 6, __pyx_n_u_press_key);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->valid_events);
  __Pyx_DECREF(__pyx_v_self->valid_events);
  __pyx_v_self->valid_events = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyEvent.pyx":20
 * 			return {"name": ev.name}
 * 
 * 	def __cinit__(self):             # <<<<<<<<<<<<<<
 * 		self.events = []
 * 		self.valid_events = [
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("main.PyEventHandler.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyEvent.pyx":27
 * 		]
 * 
 * 	def _runLoop(self):             # <<<<<<<<<<<<<<
 * 		v = popEvent()
 * 		if <long>v != 0:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_14PyEventHandler_3_runLoop(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4main_14PyEventHandler_3_runLoop(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_runLoop (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_14PyEventHandler_2_runLoop(((struct __pyx_obj_4main_PyEventHandler *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_14PyEventHandler_2_runLoop(struct __pyx_obj_4main_PyEventHandler *__pyx_v_self) {
  struct event_base *__pyx_v_v;
  PyObject *__pyx_v_e = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_runLoop", 0);

  /* "../../pyedit_engine/cy/PyEvent.pyx":28
 * 
 * 	def _runLoop(self):
 * 		v = popEvent()             # <<<<<<<<<<<<<<
 * 		if <long>v != 0:
 * 			print("ev", v.name)
 */
  __pyx_v_v = popEvent();

  /* "../../pyedit_engine/cy/PyEvent.pyx":29
 * 	def _runLoop(self):
 * 		v = popEvent()
 * 		if <long>v != 0:             # <<<<<<<<<<<<<<
 * 			print("ev", v.name)
 * 			for e in self.events:
 */
  __pyx_t_1 = ((((long)__pyx_v_v) != 0) != 0);
  if (__pyx_t_1) {

    /* "../../pyedit_engine/cy/PyEvent.pyx":30
 * 		v = popEvent()
 * 		if <long>v != 0:
 * 			print("ev", v.name)             # <<<<<<<<<<<<<<
 * 			for e in self.events:
 * 				if e.handler == v.name.decode():
 */
    __pyx_t_2 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_v->name); if (unlikely(!__pyx_t_2)) __PYX_ERR(6, 30, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 30, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_n_u_ev);
    __Pyx_GIVEREF(__pyx_n_u_ev);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_n_u_ev);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(6, 30, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "../../pyedit_engine/cy/PyEvent.pyx":31
 * 		if <long>v != 0:
 * 			print("ev", v.name)
 * 			for e in self.events:             # <<<<<<<<<<<<<<
 * 				if e.handler == v.name.decode():
 * 					print(e)
 */
    if (unlikely(__pyx_v_self->events == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
      __PYX_ERR(6, 31, __pyx_L1_error)
    }
    __pyx_t_2 = __pyx_v_self->events; __Pyx_INCREF(__pyx_t_2); __pyx_t_4 = 0;
    for (;;) {
      if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_2)) break;
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_3); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(6, 31, __pyx_L1_error)
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 31, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      #endif
      __Pyx_XDECREF_SET(__pyx_v_e, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "../../pyedit_engine/cy/PyEvent.pyx":32
 * 			print("ev", v.name)
 * 			for e in self.events:
 * 				if e.handler == v.name.decode():             # <<<<<<<<<<<<<<
 * 					print(e)
 * 					e.callback(self.extractEv(v))
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_e, __pyx_n_s_handler); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 32, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = __Pyx_decode_cpp_string(__pyx_v_v->name, 0, PY_SSIZE_T_MAX, NULL, NULL, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(6, 32, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = PyObject_RichCompare(__pyx_t_3, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(6, 32, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(6, 32, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (__pyx_t_1) {

        /* "../../pyedit_engine/cy/PyEvent.pyx":33
 * 			for e in self.events:
 * 				if e.handler == v.name.decode():
 * 					print(e)             # <<<<<<<<<<<<<<
 * 					e.callback(self.extractEv(v))
 * 
 */
        __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_v_e); if (unlikely(!__pyx_t_6)) __PYX_ERR(6, 33, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

        /* "../../pyedit_engine/cy/PyEvent.pyx":34
 * 				if e.handler == v.name.decode():
 * 					print(e)
 * 					e.callback(self.extractEv(v))             # <<<<<<<<<<<<<<
 * 
 * 	def runLoop(self):
 */
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_e, __pyx_n_s_callback); if (unlikely(!__pyx_t_5)) __PYX_ERR(6, 34, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_3 = ((struct __pyx_vtabstruct_4main_PyEventHandler *)__pyx_v_self->__pyx_vtab)->extractEv(__pyx_v_self, __pyx_v_v); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 34, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_7 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_7)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_7);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
          }
        }
        __pyx_t_6 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_7, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_3);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_6)) __PYX_ERR(6, 34, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

        /* "../../pyedit_engine/cy/PyEvent.pyx":32
 * 			print("ev", v.name)
 * 			for e in self.events:
 * 				if e.handler == v.name.decode():             # <<<<<<<<<<<<<<
 * 					print(e)
 * 					e.callback(self.extractEv(v))
 */
      }

      /* "../../pyedit_engine/cy/PyEvent.pyx":31
 * 		if <long>v != 0:
 * 			print("ev", v.name)
 * 			for e in self.events:             # <<<<<<<<<<<<<<
 * 				if e.handler == v.name.decode():
 * 					print(e)
 */
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "../../pyedit_engine/cy/PyEvent.pyx":29
 * 	def _runLoop(self):
 * 		v = popEvent()
 * 		if <long>v != 0:             # <<<<<<<<<<<<<<
 * 			print("ev", v.name)
 * 			for e in self.events:
 */
  }

  /* "../../pyedit_engine/cy/PyEvent.pyx":27
 * 		]
 * 
 * 	def _runLoop(self):             # <<<<<<<<<<<<<<
 * 		v = popEvent()
 * 		if <long>v != 0:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("main.PyEventHandler._runLoop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_e);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyEvent.pyx":36
 * 					e.callback(self.extractEv(v))
 * 
 * 	def runLoop(self):             # <<<<<<<<<<<<<<
 * 		clearEvents()
 * 		exec("""while True:\n    self._runLoop()""", {**globals(), "self":self}) # python is gross
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_14PyEventHandler_5runLoop(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4main_14PyEventHandler_5runLoop(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("runLoop (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_14PyEventHandler_4runLoop(((struct __pyx_obj_4main_PyEventHandler *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_14PyEventHandler_4runLoop(struct __pyx_obj_4main_PyEventHandler *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("runLoop", 0);

  /* "../../pyedit_engine/cy/PyEvent.pyx":37
 * 
 * 	def runLoop(self):
 * 		clearEvents()             # <<<<<<<<<<<<<<
 * 		exec("""while True:\n    self._runLoop()""", {**globals(), "self":self}) # python is gross
 * 
 */
  clearEvents();

  /* "../../pyedit_engine/cy/PyEvent.pyx":38
 * 	def runLoop(self):
 * 		clearEvents()
 * 		exec("""while True:\n    self._runLoop()""", {**globals(), "self":self}) # python is gross             # <<<<<<<<<<<<<<
 * 
 * 	def registerEvent(self, callback, handler, name):
 */
  __pyx_t_2 = __Pyx_Globals(); if (unlikely(!__pyx_t_2)) __PYX_ERR(6, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (unlikely(__pyx_t_2 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "argument after ** must be a mapping, not NoneType");
    __PYX_ERR(6, 38, __pyx_L1_error)
  }
  if (likely(PyDict_CheckExact(__pyx_t_2))) {
    __pyx_t_1 = PyDict_Copy(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(6, 38, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else {
    __pyx_t_1 = PyObject_CallFunctionObjArgs((PyObject*)&PyDict_Type, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(6, 38, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_self, ((PyObject *)__pyx_v_self)) < 0) __PYX_ERR(6, 38, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyExec2(__pyx_kp_u_while_True_self__runLoop, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(6, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "../../pyedit_engine/cy/PyEvent.pyx":36
 * 					e.callback(self.extractEv(v))
 * 
 * 	def runLoop(self):             # <<<<<<<<<<<<<<
 * 		clearEvents()
 * 		exec("""while True:\n    self._runLoop()""", {**globals(), "self":self}) # python is gross
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("main.PyEventHandler.runLoop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyEvent.pyx":40
 * 		exec("""while True:\n    self._runLoop()""", {**globals(), "self":self}) # python is gross
 * 
 * 	def registerEvent(self, callback, handler, name):             # <<<<<<<<<<<<<<
 * 		if handler in self.valid_events:
 * 			self.events.append(PyEvent(handler, name, callback))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_14PyEventHandler_7registerEvent(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4main_14PyEventHandler_7registerEvent(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_callback = 0;
  PyObject *__pyx_v_handler = 0;
  PyObject *__pyx_v_name = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("registerEvent (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_callback,&__pyx_n_s_handler,&__pyx_n_s_name_2,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_callback)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handler)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("registerEvent", 1, 3, 3, 1); __PYX_ERR(6, 40, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_name_2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("registerEvent", 1, 3, 3, 2); __PYX_ERR(6, 40, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "registerEvent") < 0)) __PYX_ERR(6, 40, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_callback = values[0];
    __pyx_v_handler = values[1];
    __pyx_v_name = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("registerEvent", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(6, 40, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("main.PyEventHandler.registerEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4main_14PyEventHandler_6registerEvent(((struct __pyx_obj_4main_PyEventHandler *)__pyx_v_self), __pyx_v_callback, __pyx_v_handler, __pyx_v_name);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_14PyEventHandler_6registerEvent(struct __pyx_obj_4main_PyEventHandler *__pyx_v_self, PyObject *__pyx_v_callback, PyObject *__pyx_v_handler, PyObject *__pyx_v_name) {
  PyObject *__pyx_v_pygd = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("registerEvent", 0);

  /* "../../pyedit_engine/cy/PyEvent.pyx":41
 * 
 * 	def registerEvent(self, callback, handler, name):
 * 		if handler in self.valid_events:             # <<<<<<<<<<<<<<
 * 			self.events.append(PyEvent(handler, name, callback))
 * 		else:
 */
  __pyx_t_1 = (__Pyx_PySequence_ContainsTF(__pyx_v_handler, __pyx_v_self->valid_events, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(6, 41, __pyx_L1_error)
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "../../pyedit_engine/cy/PyEvent.pyx":42
 * 	def registerEvent(self, callback, handler, name):
 * 		if handler in self.valid_events:
 * 			self.events.append(PyEvent(handler, name, callback))             # <<<<<<<<<<<<<<
 * 		else:
 * 			import pygd
 */
    if (unlikely(__pyx_v_self->events == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
      __PYX_ERR(6, 42, __pyx_L1_error)
    }
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_PyEvent); if (unlikely(!__pyx_t_4)) __PYX_ERR(6, 42, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[4] = {__pyx_t_5, __pyx_v_handler, __pyx_v_name, __pyx_v_callback};
      __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_6, 3+__pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 42, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[4] = {__pyx_t_5, __pyx_v_handler, __pyx_v_name, __pyx_v_callback};
      __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_6, 3+__pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 42, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else
    #endif
    {
      __pyx_t_7 = PyTuple_New(3+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(6, 42, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      if (__pyx_t_5) {
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
      }
      __Pyx_INCREF(__pyx_v_handler);
      __Pyx_GIVEREF(__pyx_v_handler);
      PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_v_handler);
      __Pyx_INCREF(__pyx_v_name);
      __Pyx_GIVEREF(__pyx_v_name);
      PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_v_name);
      __Pyx_INCREF(__pyx_v_callback);
      __Pyx_GIVEREF(__pyx_v_callback);
      PyTuple_SET_ITEM(__pyx_t_7, 2+__pyx_t_6, __pyx_v_callback);
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 42, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_8 = __Pyx_PyList_Append(__pyx_v_self->events, __pyx_t_3); if (unlikely(__pyx_t_8 == ((int)-1))) __PYX_ERR(6, 42, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "../../pyedit_engine/cy/PyEvent.pyx":41
 * 
 * 	def registerEvent(self, callback, handler, name):
 * 		if handler in self.valid_events:             # <<<<<<<<<<<<<<
 * 			self.events.append(PyEvent(handler, name, callback))
 * 		else:
 */
    goto __pyx_L3;
  }

  /* "../../pyedit_engine/cy/PyEvent.pyx":44
 * 			self.events.append(PyEvent(handler, name, callback))
 * 		else:
 * 			import pygd             # <<<<<<<<<<<<<<
 * 			pygd.alert("Error", "Invalid event handler {}".format(handler), "Ok")
 * 			raise ValueError("no")
 */
  /*else*/ {
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pygd, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 44, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v_pygd = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "../../pyedit_engine/cy/PyEvent.pyx":45
 * 		else:
 * 			import pygd
 * 			pygd.alert("Error", "Invalid event handler {}".format(handler), "Ok")             # <<<<<<<<<<<<<<
 * 			raise ValueError("no")
 * 
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_pygd, __pyx_n_s_alert); if (unlikely(!__pyx_t_4)) __PYX_ERR(6, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_kp_u_Invalid_event_handler, __pyx_n_s_format); if (unlikely(!__pyx_t_5)) __PYX_ERR(6, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_7 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_9, __pyx_v_handler) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_handler);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (unlikely(!__pyx_t_7)) __PYX_ERR(6, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[4] = {__pyx_t_5, __pyx_n_u_Error, __pyx_t_7, __pyx_n_u_Ok};
      __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_6, 3+__pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 45, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[4] = {__pyx_t_5, __pyx_n_u_Error, __pyx_t_7, __pyx_n_u_Ok};
      __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_6, 3+__pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 45, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    } else
    #endif
    {
      __pyx_t_9 = PyTuple_New(3+__pyx_t_6); if (unlikely(!__pyx_t_9)) __PYX_ERR(6, 45, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      if (__pyx_t_5) {
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_5); __pyx_t_5 = NULL;
      }
      __Pyx_INCREF(__pyx_n_u_Error);
      __Pyx_GIVEREF(__pyx_n_u_Error);
      PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_6, __pyx_n_u_Error);
      __Pyx_GIVEREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_6, __pyx_t_7);
      __Pyx_INCREF(__pyx_n_u_Ok);
      __Pyx_GIVEREF(__pyx_n_u_Ok);
      PyTuple_SET_ITEM(__pyx_t_9, 2+__pyx_t_6, __pyx_n_u_Ok);
      __pyx_t_7 = 0;
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_9, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 45, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "../../pyedit_engine/cy/PyEvent.pyx":46
 * 			import pygd
 * 			pygd.alert("Error", "Invalid event handler {}".format(handler), "Ok")
 * 			raise ValueError("no")             # <<<<<<<<<<<<<<
 * 
 * 	def get_events(self):
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__44, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 46, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(6, 46, __pyx_L1_error)
  }
  __pyx_L3:;

  /* "../../pyedit_engine/cy/PyEvent.pyx":40
 * 		exec("""while True:\n    self._runLoop()""", {**globals(), "self":self}) # python is gross
 * 
 * 	def registerEvent(self, callback, handler, name):             # <<<<<<<<<<<<<<
 * 		if handler in self.valid_events:
 * 			self.events.append(PyEvent(handler, name, callback))
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("main.PyEventHandler.registerEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_pygd);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../pyedit_engine/cy/PyEvent.pyx":48
 * 			raise ValueError("no")
 * 
 * 	def get_events(self):             # <<<<<<<<<<<<<<
 * 		return self.events
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_14PyEventHandler_9get_events(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4main_14PyEventHandler_9get_events(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_events (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_14PyEventHandler_8get_events(((struct __pyx_obj_4main_PyEventHandler *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_14PyEventHandler_8get_events(struct __pyx_obj_4main_PyEventHandler *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_events", 0);

  /* "../../pyedit_engine/cy/PyEvent.pyx":49
 * 
 * 	def get_events(self):
 * 		return self.events             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->events);
  __pyx_r = __pyx_v_self->events;
  goto __pyx_L0;

  /* "../../pyedit_engine/cy/PyEvent.pyx":48
 * 			raise ValueError("no")
 * 
 * 	def get_events(self):             # <<<<<<<<<<<<<<
 * 		return self.events
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_14PyEventHandler_11__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4main_14PyEventHandler_11__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_14PyEventHandler_10__reduce_cython__(((struct __pyx_obj_4main_PyEventHandler *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_14PyEventHandler_10__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_4main_PyEventHandler *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__45, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("main.PyEventHandler.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_4main_14PyEventHandler_13__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_4main_14PyEventHandler_13__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4main_14PyEventHandler_12__setstate_cython__(((struct __pyx_obj_4main_PyEventHandler *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4main_14PyEventHandler_12__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_4main_PyEventHandler *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__46, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("main.PyEventHandler.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "base.pxd":80
 *         bool schedulePy(object p)
 * 
 * cdef inline mainThread(object o):             # <<<<<<<<<<<<<<
 *     ThreadController.sharedState().schedulePy(o)
 */

static CYTHON_INLINE PyObject *__pyx_f_4base_mainThread(PyObject *__pyx_v_o) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mainThread", 0);

  /* "base.pxd":81
 * 
 * cdef inline mainThread(object o):
 *     ThreadController.sharedState().schedulePy(o)             # <<<<<<<<<<<<<<
 */
  (void)(ThreadController::sharedState()->schedulePy(__pyx_v_o));

  /* "base.pxd":80
 *         bool schedulePy(object p)
 * 
 * cdef inline mainThread(object o):             # <<<<<<<<<<<<<<
 *     ThreadController.sharedState().schedulePy(o)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.from_py":13
 * 
 * @cname("__pyx_convert_string_from_py_std__in_string")
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t length = 0
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 */

static std::string __pyx_convert_string_from_py_std__in_string(PyObject *__pyx_v_o) {
  Py_ssize_t __pyx_v_length;
  char const *__pyx_v_data;
  std::string __pyx_r;
  __Pyx_RefNannyDeclarations
  char const *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_string_from_py_std__in_string", 0);

  /* "string.from_py":14
 * @cname("__pyx_convert_string_from_py_std__in_string")
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:
 *     cdef Py_ssize_t length = 0             # <<<<<<<<<<<<<<
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 *     return string(data, length)
 */
  __pyx_v_length = 0;

  /* "string.from_py":15
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:
 *     cdef Py_ssize_t length = 0
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)             # <<<<<<<<<<<<<<
 *     return string(data, length)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsStringAndSize(__pyx_v_o, (&__pyx_v_length)); if (unlikely(__pyx_t_1 == ((char const *)NULL))) __PYX_ERR(2, 15, __pyx_L1_error)
  __pyx_v_data = __pyx_t_1;

  /* "string.from_py":16
 *     cdef Py_ssize_t length = 0
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 *     return string(data, length)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = std::string(__pyx_v_data, __pyx_v_length);
  goto __pyx_L0;

  /* "string.from_py":13
 * 
 * @cname("__pyx_convert_string_from_py_std__in_string")
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t length = 0
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("string.from_py.__pyx_convert_string_from_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":31
 * 
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyObject_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyObject_string_to_py_std__in_string", 0);

  /* "string.to_py":32
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyUnicode_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":31
 * 
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyObject_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":37
 * 
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyUnicode_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyUnicode_string_to_py_std__in_string", 0);

  /* "string.to_py":38
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyStr_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyUnicode_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":37
 * 
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyUnicode_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":43
 * 
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyStr_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyStr_string_to_py_std__in_string", 0);

  /* "string.to_py":44
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyBytes_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyStr_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":43
 * 
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyStr_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":49
 * 
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyBytes_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyBytes_string_to_py_std__in_string", 0);

  /* "string.to_py":50
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyByteArray_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBytes_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 50, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":49
 * 
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyBytes_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":55
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())
 * 
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyByteArray_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyByteArray_string_to_py_std__in_string", 0);

  /* "string.to_py":56
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyByteArray_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":55
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyByteArray_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_int")
 * cdef object __pyx_convert_vector_to_py_int(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

static PyObject *__pyx_convert_vector_to_py_int(const std::vector<int>  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_int", 0);

  /* "vector.to_py":61
 * @cname("__pyx_convert_vector_to_py_int")
 * cdef object __pyx_convert_vector_to_py_int(vector[X]& v):
 *     return [v[i] for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;
    __pyx_t_5 = __Pyx_PyInt_From_int((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 61, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_5))) __PYX_ERR(2, 61, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_int")
 * cdef object __pyx_convert_vector_to_py_int(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_int", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static struct __pyx_vtabstruct_4main_PyCCObject __pyx_vtable_4main_PyCCObject;

static PyObject *__pyx_tp_new_4main_PyCCObject(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct _CCObject *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct _CCObject *)o);
  p->__pyx_vtab = __pyx_vtabptr_4main_PyCCObject;
  return o;
}

static void __pyx_tp_dealloc_4main_PyCCObject(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_4main_10PyCCObject_typeinfo(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4main_10PyCCObject_8typeinfo_1__get__(o);
}

static PyMethodDef __pyx_methods_4main_PyCCObject[] = {
  {"__del__", (PyCFunction)__pyx_pw_4main_10PyCCObject_1__del__, METH_NOARGS, 0},
  {"reinterpret_cast", (PyCFunction)__pyx_pw_4main_10PyCCObject_3reinterpret_cast, METH_NOARGS, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4main_10PyCCObject_5__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4main_10PyCCObject_7__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4main_PyCCObject[] = {
  {(char *)"typeinfo", __pyx_getprop_4main_10PyCCObject_typeinfo, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

DL_EXPORT(PyTypeObject) __CCObject = {
  PyVarObject_HEAD_INIT(0, 0)
  "main.PyCCObject", /*tp_name*/
  sizeof(struct _CCObject), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4main_PyCCObject, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4main_PyCCObject, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4main_PyCCObject, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4main_PyCCObject, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};
static struct __pyx_vtabstruct_4main_PyCCArray __pyx_vtable_4main_PyCCArray;

static PyObject *__pyx_tp_new_4main_PyCCArray(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct _CCArray *p;
  PyObject *o = __pyx_tp_new_4main_PyCCObject(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct _CCArray *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4main_PyCCObject*)__pyx_vtabptr_4main_PyCCArray;
  return o;
}
static PyObject *__pyx_sq_item_4main_PyCCArray(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_4main_PyCCArray[] = {
  {"sortBy", (PyCFunction)__pyx_pw_4main_9PyCCArray_5sortBy, METH_O, 0},
  {"collect", (PyCFunction)__pyx_pw_4main_9PyCCArray_7collect, METH_NOARGS, 0},
  {"init", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_9PyCCArray_9init, METH_VARARGS|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4main_9PyCCArray_11__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4main_9PyCCArray_13__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_PyCCArray = {
  __pyx_pw_4main_9PyCCArray_1__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_4main_PyCCArray, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_PyCCArray = {
  __pyx_pw_4main_9PyCCArray_1__len__, /*mp_length*/
  __pyx_pw_4main_9PyCCArray_3__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

DL_EXPORT(PyTypeObject) __CCArray = {
  PyVarObject_HEAD_INIT(0, 0)
  "main.PyCCArray", /*tp_name*/
  sizeof(struct _CCArray), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4main_PyCCObject, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_PyCCArray, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_PyCCArray, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4main_PyCCArray, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4main_PyCCArray, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};
static struct __pyx_vtabstruct_4main_GameObjArray __pyx_vtable_4main_GameObjArray;

static PyObject *__pyx_tp_new_4main_GameObjArray(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct _GOArray *p;
  PyObject *o = __pyx_tp_new_4main_PyCCArray(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct _GOArray *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4main_PyCCObject*)__pyx_vtabptr_4main_GameObjArray;
  return o;
}

static PyObject *__pyx_tp_getattro_4main_GameObjArray(PyObject *o, PyObject *n) {
  PyObject *v = __Pyx_PyObject_GenericGetAttr(o, n);
  if (!v && PyErr_ExceptionMatches(PyExc_AttributeError)) {
    PyErr_Clear();
    v = __pyx_pw_4main_12GameObjArray_1__getattr__(o, n);
  }
  return v;
}

static PyMethodDef __pyx_methods_4main_GameObjArray[] = {
  {"__getattr__", (PyCFunction)__pyx_pw_4main_12GameObjArray_1__getattr__, METH_O|METH_COEXIST, 0},
  {"sortX", (PyCFunction)__pyx_pw_4main_12GameObjArray_3sortX, METH_NOARGS, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4main_12GameObjArray_5__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4main_12GameObjArray_7__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

DL_EXPORT(PyTypeObject) __GOArray = {
  PyVarObject_HEAD_INIT(0, 0)
  "main.GameObjArray", /*tp_name*/
  sizeof(struct _GOArray), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4main_PyCCObject, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  __pyx_tp_getattro_4main_GameObjArray, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4main_GameObjArray, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4main_GameObjArray, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};
static struct __pyx_vtabstruct_4main_Editor __pyx_vtable_4main_Editor;

static PyObject *__pyx_tp_new_4main_Editor(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct PyEditorUI *p;
  PyObject *o = __pyx_tp_new_4main_PyCCObject(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct PyEditorUI *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4main_PyCCObject*)__pyx_vtabptr_4main_Editor;
  return o;
}

static PyObject *__pyx_getprop_4main_6Editor_selection(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4main_6Editor_9selection_1__get__(o);
}

static int __pyx_setprop_4main_6Editor_selection(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4main_6Editor_9selection_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4main_6Editor_objects(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4main_6Editor_7objects_1__get__(o);
}

static PyMethodDef __pyx_methods_4main_Editor[] = {
  {"pasteStr", (PyCFunction)__pyx_pw_4main_6Editor_3pasteStr, METH_O, 0},
  {"createObject", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_6Editor_5createObject, METH_VARARGS|METH_KEYWORDS, 0},
  {"deselect", (PyCFunction)__pyx_pw_4main_6Editor_7deselect, METH_NOARGS, 0},
  {"deleteSelection", (PyCFunction)__pyx_pw_4main_6Editor_9deleteSelection, METH_NOARGS, 0},
  {"duplicate", (PyCFunction)__pyx_pw_4main_6Editor_11duplicate, METH_NOARGS, 0},
  {"select", (PyCFunction)__pyx_pw_4main_6Editor_13select, METH_O, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4main_6Editor_15__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4main_6Editor_17__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4main_Editor[] = {
  {(char *)"selection", __pyx_getprop_4main_6Editor_selection, __pyx_setprop_4main_6Editor_selection, (char *)0, 0},
  {(char *)"objects", __pyx_getprop_4main_6Editor_objects, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

DL_EXPORT(PyTypeObject) PyEditUI = {
  PyVarObject_HEAD_INIT(0, 0)
  "main.Editor", /*tp_name*/
  sizeof(struct PyEditorUI), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4main_PyCCObject, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4main_Editor, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4main_Editor, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4main_6Editor_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4main_Editor, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};
static struct __pyx_vtabstruct_4main_PyGameObject __pyx_vtable_4main_PyGameObject;

static PyObject *__pyx_tp_new_4main_PyGameObject(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct PyGameOb *p;
  PyObject *o = __pyx_tp_new_4main_PyCCObject(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct PyGameOb *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4main_PyCCObject*)__pyx_vtabptr_4main_PyGameObject;
  return o;
}

static PyObject *__pyx_getprop_4main_12PyGameObject_base_hue(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4main_12PyGameObject_8base_hue_1__get__(o);
}

static int __pyx_setprop_4main_12PyGameObject_base_hue(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4main_12PyGameObject_8base_hue_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4main_12PyGameObject_detail_hue(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4main_12PyGameObject_10detail_hue_1__get__(o);
}

static int __pyx_setprop_4main_12PyGameObject_detail_hue(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4main_12PyGameObject_10detail_hue_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4main_12PyGameObject_size(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4main_12PyGameObject_4size_1__get__(o);
}

static PyObject *__pyx_getprop_4main_12PyGameObject_id(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4main_12PyGameObject_2id_1__get__(o);
}

static PyObject *__pyx_getprop_4main_12PyGameObject_position(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4main_12PyGameObject_8position_1__get__(o);
}

static PyObject *__pyx_getprop_4main_12PyGameObject_positionX(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4main_12PyGameObject_9positionX_1__get__(o);
}

static PyObject *__pyx_getprop_4main_12PyGameObject_positionY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4main_12PyGameObject_9positionY_1__get__(o);
}

static PyObject *__pyx_getprop_4main_12PyGameObject_levelStr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4main_12PyGameObject_8levelStr_1__get__(o);
}

static PyObject *__pyx_getprop_4main_12PyGameObject_groups(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4main_12PyGameObject_6groups_1__get__(o);
}

static PyObject *__pyx_getprop_4main_12PyGameObject_rotation(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4main_12PyGameObject_8rotation_1__get__(o);
}

static PyMethodDef __pyx_methods_4main_PyGameObject[] = {
  {"moveTo", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_12PyGameObject_1moveTo, METH_VARARGS|METH_KEYWORDS, 0},
  {"move", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_12PyGameObject_3move, METH_VARARGS|METH_KEYWORDS, 0},
  {"incrementZ", (PyCFunction)__pyx_pw_4main_12PyGameObject_5incrementZ, METH_NOARGS, 0},
  {"scaleTo", (PyCFunction)__pyx_pw_4main_12PyGameObject_7scaleTo, METH_O, 0},
  {"scale", (PyCFunction)__pyx_pw_4main_12PyGameObject_9scale, METH_O, 0},
  {"rotate", (PyCFunction)__pyx_pw_4main_12PyGameObject_11rotate, METH_O, 0},
  {"rotateTo", (PyCFunction)__pyx_pw_4main_12PyGameObject_13rotateTo, METH_O, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4main_12PyGameObject_15__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4main_12PyGameObject_17__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4main_PyGameObject[] = {
  {(char *)"base_hue", __pyx_getprop_4main_12PyGameObject_base_hue, __pyx_setprop_4main_12PyGameObject_base_hue, (char *)0, 0},
  {(char *)"detail_hue", __pyx_getprop_4main_12PyGameObject_detail_hue, __pyx_setprop_4main_12PyGameObject_detail_hue, (char *)0, 0},
  {(char *)"size", __pyx_getprop_4main_12PyGameObject_size, 0, (char *)0, 0},
  {(char *)"id", __pyx_getprop_4main_12PyGameObject_id, 0, (char *)0, 0},
  {(char *)"position", __pyx_getprop_4main_12PyGameObject_position, 0, (char *)0, 0},
  {(char *)"positionX", __pyx_getprop_4main_12PyGameObject_positionX, 0, (char *)0, 0},
  {(char *)"positionY", __pyx_getprop_4main_12PyGameObject_positionY, 0, (char *)0, 0},
  {(char *)"levelStr", __pyx_getprop_4main_12PyGameObject_levelStr, 0, (char *)0, 0},
  {(char *)"groups", __pyx_getprop_4main_12PyGameObject_groups, 0, (char *)0, 0},
  {(char *)"rotation", __pyx_getprop_4main_12PyGameObject_rotation, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

DL_EXPORT(PyTypeObject) PyGameObj = {
  PyVarObject_HEAD_INIT(0, 0)
  "main.PyGameObject", /*tp_name*/
  sizeof(struct PyGameOb), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4main_PyCCObject, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4main_PyGameObject, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4main_PyGameObject, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4main_PyGameObject, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};
static struct __pyx_vtabstruct_4main_PyEventHandler __pyx_vtable_4main_PyEventHandler;

static PyObject *__pyx_tp_new_4main_PyEventHandler(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_4main_PyEventHandler *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4main_PyEventHandler *)o);
  p->__pyx_vtab = __pyx_vtabptr_4main_PyEventHandler;
  p->events = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->valid_events = ((PyObject*)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4main_14PyEventHandler_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_4main_PyEventHandler(PyObject *o) {
  struct __pyx_obj_4main_PyEventHandler *p = (struct __pyx_obj_4main_PyEventHandler *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->events);
  Py_CLEAR(p->valid_events);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_4main_PyEventHandler(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4main_PyEventHandler *p = (struct __pyx_obj_4main_PyEventHandler *)o;
  if (p->events) {
    e = (*v)(p->events, a); if (e) return e;
  }
  if (p->valid_events) {
    e = (*v)(p->valid_events, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4main_PyEventHandler(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4main_PyEventHandler *p = (struct __pyx_obj_4main_PyEventHandler *)o;
  tmp = ((PyObject*)p->events);
  p->events = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->valid_events);
  p->valid_events = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_4main_PyEventHandler[] = {
  {"_runLoop", (PyCFunction)__pyx_pw_4main_14PyEventHandler_3_runLoop, METH_NOARGS, 0},
  {"runLoop", (PyCFunction)__pyx_pw_4main_14PyEventHandler_5runLoop, METH_NOARGS, 0},
  {"registerEvent", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4main_14PyEventHandler_7registerEvent, METH_VARARGS|METH_KEYWORDS, 0},
  {"get_events", (PyCFunction)__pyx_pw_4main_14PyEventHandler_9get_events, METH_NOARGS, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_4main_14PyEventHandler_11__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_4main_14PyEventHandler_13__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4main_PyEventHandler = {
  PyVarObject_HEAD_INIT(0, 0)
  "main.PyEventHandler", /*tp_name*/
  sizeof(struct __pyx_obj_4main_PyEventHandler), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4main_PyEventHandler, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4main_PyEventHandler, /*tp_traverse*/
  __pyx_tp_clear_4main_PyEventHandler, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4main_PyEventHandler, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4main_PyEventHandler, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static struct __pyx_obj_4main___pyx_scope_struct__thread_sync *__pyx_freelist_4main___pyx_scope_struct__thread_sync[8];
static int __pyx_freecount_4main___pyx_scope_struct__thread_sync = 0;

static PyObject *__pyx_tp_new_4main___pyx_scope_struct__thread_sync(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_4main___pyx_scope_struct__thread_sync > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_4main___pyx_scope_struct__thread_sync)))) {
    o = (PyObject*)__pyx_freelist_4main___pyx_scope_struct__thread_sync[--__pyx_freecount_4main___pyx_scope_struct__thread_sync];
    memset(o, 0, sizeof(struct __pyx_obj_4main___pyx_scope_struct__thread_sync));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4main___pyx_scope_struct__thread_sync(PyObject *o) {
  struct __pyx_obj_4main___pyx_scope_struct__thread_sync *p = (struct __pyx_obj_4main___pyx_scope_struct__thread_sync *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_func);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_4main___pyx_scope_struct__thread_sync < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_4main___pyx_scope_struct__thread_sync)))) {
    __pyx_freelist_4main___pyx_scope_struct__thread_sync[__pyx_freecount_4main___pyx_scope_struct__thread_sync++] = ((struct __pyx_obj_4main___pyx_scope_struct__thread_sync *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_4main___pyx_scope_struct__thread_sync(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4main___pyx_scope_struct__thread_sync *p = (struct __pyx_obj_4main___pyx_scope_struct__thread_sync *)o;
  if (p->__pyx_v_func) {
    e = (*v)(p->__pyx_v_func, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4main___pyx_scope_struct__thread_sync(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4main___pyx_scope_struct__thread_sync *p = (struct __pyx_obj_4main___pyx_scope_struct__thread_sync *)o;
  tmp = ((PyObject*)p->__pyx_v_func);
  p->__pyx_v_func = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_4main___pyx_scope_struct__thread_sync = {
  PyVarObject_HEAD_INIT(0, 0)
  "main.__pyx_scope_struct__thread_sync", /*tp_name*/
  sizeof(struct __pyx_obj_4main___pyx_scope_struct__thread_sync), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4main___pyx_scope_struct__thread_sync, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4main___pyx_scope_struct__thread_sync, /*tp_traverse*/
  __pyx_tp_clear_4main___pyx_scope_struct__thread_sync, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4main___pyx_scope_struct__thread_sync, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static struct __pyx_obj_4main___pyx_scope_struct_1_k *__pyx_freelist_4main___pyx_scope_struct_1_k[8];
static int __pyx_freecount_4main___pyx_scope_struct_1_k = 0;

static PyObject *__pyx_tp_new_4main___pyx_scope_struct_1_k(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_4main___pyx_scope_struct_1_k > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_4main___pyx_scope_struct_1_k)))) {
    o = (PyObject*)__pyx_freelist_4main___pyx_scope_struct_1_k[--__pyx_freecount_4main___pyx_scope_struct_1_k];
    memset(o, 0, sizeof(struct __pyx_obj_4main___pyx_scope_struct_1_k));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4main___pyx_scope_struct_1_k(PyObject *o) {
  struct __pyx_obj_4main___pyx_scope_struct_1_k *p = (struct __pyx_obj_4main___pyx_scope_struct_1_k *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_outer_scope);
  Py_CLEAR(p->__pyx_v_args);
  Py_CLEAR(p->__pyx_v_future);
  Py_CLEAR(p->__pyx_v_kwargs);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_4main___pyx_scope_struct_1_k < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_4main___pyx_scope_struct_1_k)))) {
    __pyx_freelist_4main___pyx_scope_struct_1_k[__pyx_freecount_4main___pyx_scope_struct_1_k++] = ((struct __pyx_obj_4main___pyx_scope_struct_1_k *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_4main___pyx_scope_struct_1_k(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4main___pyx_scope_struct_1_k *p = (struct __pyx_obj_4main___pyx_scope_struct_1_k *)o;
  if (p->__pyx_outer_scope) {
    e = (*v)(((PyObject *)p->__pyx_outer_scope), a); if (e) return e;
  }
  if (p->__pyx_v_args) {
    e = (*v)(p->__pyx_v_args, a); if (e) return e;
  }
  if (p->__pyx_v_future) {
    e = (*v)(p->__pyx_v_future, a); if (e) return e;
  }
  if (p->__pyx_v_kwargs) {
    e = (*v)(p->__pyx_v_kwargs, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4main___pyx_scope_struct_1_k(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4main___pyx_scope_struct_1_k *p = (struct __pyx_obj_4main___pyx_scope_struct_1_k *)o;
  tmp = ((PyObject*)p->__pyx_outer_scope);
  p->__pyx_outer_scope = ((struct __pyx_obj_4main___pyx_scope_struct__thread_sync *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_args);
  p->__pyx_v_args = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_future);
  p->__pyx_v_future = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_kwargs);
  p->__pyx_v_kwargs = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_4main___pyx_scope_struct_1_k = {
  PyVarObject_HEAD_INIT(0, 0)
  "main.__pyx_scope_struct_1_k", /*tp_name*/
  sizeof(struct __pyx_obj_4main___pyx_scope_struct_1_k), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4main___pyx_scope_struct_1_k, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4main___pyx_scope_struct_1_k, /*tp_traverse*/
  __pyx_tp_clear_4main___pyx_scope_struct_1_k, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4main___pyx_scope_struct_1_k, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static struct __pyx_obj_4main___pyx_scope_struct_2_thread_async *__pyx_freelist_4main___pyx_scope_struct_2_thread_async[8];
static int __pyx_freecount_4main___pyx_scope_struct_2_thread_async = 0;

static PyObject *__pyx_tp_new_4main___pyx_scope_struct_2_thread_async(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_4main___pyx_scope_struct_2_thread_async > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_4main___pyx_scope_struct_2_thread_async)))) {
    o = (PyObject*)__pyx_freelist_4main___pyx_scope_struct_2_thread_async[--__pyx_freecount_4main___pyx_scope_struct_2_thread_async];
    memset(o, 0, sizeof(struct __pyx_obj_4main___pyx_scope_struct_2_thread_async));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4main___pyx_scope_struct_2_thread_async(PyObject *o) {
  struct __pyx_obj_4main___pyx_scope_struct_2_thread_async *p = (struct __pyx_obj_4main___pyx_scope_struct_2_thread_async *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_func);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_4main___pyx_scope_struct_2_thread_async < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_4main___pyx_scope_struct_2_thread_async)))) {
    __pyx_freelist_4main___pyx_scope_struct_2_thread_async[__pyx_freecount_4main___pyx_scope_struct_2_thread_async++] = ((struct __pyx_obj_4main___pyx_scope_struct_2_thread_async *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_4main___pyx_scope_struct_2_thread_async(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4main___pyx_scope_struct_2_thread_async *p = (struct __pyx_obj_4main___pyx_scope_struct_2_thread_async *)o;
  if (p->__pyx_v_func) {
    e = (*v)(p->__pyx_v_func, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4main___pyx_scope_struct_2_thread_async(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4main___pyx_scope_struct_2_thread_async *p = (struct __pyx_obj_4main___pyx_scope_struct_2_thread_async *)o;
  tmp = ((PyObject*)p->__pyx_v_func);
  p->__pyx_v_func = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_4main___pyx_scope_struct_2_thread_async = {
  PyVarObject_HEAD_INIT(0, 0)
  "main.__pyx_scope_struct_2_thread_async", /*tp_name*/
  sizeof(struct __pyx_obj_4main___pyx_scope_struct_2_thread_async), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4main___pyx_scope_struct_2_thread_async, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4main___pyx_scope_struct_2_thread_async, /*tp_traverse*/
  __pyx_tp_clear_4main___pyx_scope_struct_2_thread_async, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4main___pyx_scope_struct_2_thread_async, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static struct __pyx_obj_4main___pyx_scope_struct_3_k *__pyx_freelist_4main___pyx_scope_struct_3_k[8];
static int __pyx_freecount_4main___pyx_scope_struct_3_k = 0;

static PyObject *__pyx_tp_new_4main___pyx_scope_struct_3_k(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_4main___pyx_scope_struct_3_k > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_4main___pyx_scope_struct_3_k)))) {
    o = (PyObject*)__pyx_freelist_4main___pyx_scope_struct_3_k[--__pyx_freecount_4main___pyx_scope_struct_3_k];
    memset(o, 0, sizeof(struct __pyx_obj_4main___pyx_scope_struct_3_k));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4main___pyx_scope_struct_3_k(PyObject *o) {
  struct __pyx_obj_4main___pyx_scope_struct_3_k *p = (struct __pyx_obj_4main___pyx_scope_struct_3_k *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_outer_scope);
  Py_CLEAR(p->__pyx_v_args);
  Py_CLEAR(p->__pyx_v_kwargs);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_4main___pyx_scope_struct_3_k < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_4main___pyx_scope_struct_3_k)))) {
    __pyx_freelist_4main___pyx_scope_struct_3_k[__pyx_freecount_4main___pyx_scope_struct_3_k++] = ((struct __pyx_obj_4main___pyx_scope_struct_3_k *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_4main___pyx_scope_struct_3_k(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4main___pyx_scope_struct_3_k *p = (struct __pyx_obj_4main___pyx_scope_struct_3_k *)o;
  if (p->__pyx_outer_scope) {
    e = (*v)(((PyObject *)p->__pyx_outer_scope), a); if (e) return e;
  }
  if (p->__pyx_v_args) {
    e = (*v)(p->__pyx_v_args, a); if (e) return e;
  }
  if (p->__pyx_v_kwargs) {
    e = (*v)(p->__pyx_v_kwargs, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4main___pyx_scope_struct_3_k(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4main___pyx_scope_struct_3_k *p = (struct __pyx_obj_4main___pyx_scope_struct_3_k *)o;
  tmp = ((PyObject*)p->__pyx_outer_scope);
  p->__pyx_outer_scope = ((struct __pyx_obj_4main___pyx_scope_struct_2_thread_async *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_args);
  p->__pyx_v_args = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_kwargs);
  p->__pyx_v_kwargs = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_4main___pyx_scope_struct_3_k = {
  PyVarObject_HEAD_INIT(0, 0)
  "main.__pyx_scope_struct_3_k", /*tp_name*/
  sizeof(struct __pyx_obj_4main___pyx_scope_struct_3_k), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4main___pyx_scope_struct_3_k, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4main___pyx_scope_struct_3_k, /*tp_traverse*/
  __pyx_tp_clear_4main___pyx_scope_struct_3_k, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4main___pyx_scope_struct_3_k, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static struct __pyx_obj_4main___pyx_scope_struct_4___getattr__ *__pyx_freelist_4main___pyx_scope_struct_4___getattr__[8];
static int __pyx_freecount_4main___pyx_scope_struct_4___getattr__ = 0;

static PyObject *__pyx_tp_new_4main___pyx_scope_struct_4___getattr__(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_4main___pyx_scope_struct_4___getattr__ > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_4main___pyx_scope_struct_4___getattr__)))) {
    o = (PyObject*)__pyx_freelist_4main___pyx_scope_struct_4___getattr__[--__pyx_freecount_4main___pyx_scope_struct_4___getattr__];
    memset(o, 0, sizeof(struct __pyx_obj_4main___pyx_scope_struct_4___getattr__));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4main___pyx_scope_struct_4___getattr__(PyObject *o) {
  struct __pyx_obj_4main___pyx_scope_struct_4___getattr__ *p = (struct __pyx_obj_4main___pyx_scope_struct_4___getattr__ *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_stuff);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_4main___pyx_scope_struct_4___getattr__ < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_4main___pyx_scope_struct_4___getattr__)))) {
    __pyx_freelist_4main___pyx_scope_struct_4___getattr__[__pyx_freecount_4main___pyx_scope_struct_4___getattr__++] = ((struct __pyx_obj_4main___pyx_scope_struct_4___getattr__ *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_4main___pyx_scope_struct_4___getattr__(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4main___pyx_scope_struct_4___getattr__ *p = (struct __pyx_obj_4main___pyx_scope_struct_4___getattr__ *)o;
  if (p->__pyx_v_stuff) {
    e = (*v)(p->__pyx_v_stuff, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4main___pyx_scope_struct_4___getattr__(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4main___pyx_scope_struct_4___getattr__ *p = (struct __pyx_obj_4main___pyx_scope_struct_4___getattr__ *)o;
  tmp = ((PyObject*)p->__pyx_v_stuff);
  p->__pyx_v_stuff = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_4main___pyx_scope_struct_4___getattr__ = {
  PyVarObject_HEAD_INIT(0, 0)
  "main.__pyx_scope_struct_4___getattr__", /*tp_name*/
  sizeof(struct __pyx_obj_4main___pyx_scope_struct_4___getattr__), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4main___pyx_scope_struct_4___getattr__, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4main___pyx_scope_struct_4___getattr__, /*tp_traverse*/
  __pyx_tp_clear_4main___pyx_scope_struct_4___getattr__, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4main___pyx_scope_struct_4___getattr__, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static struct __pyx_obj_4main___pyx_scope_struct_5___get__ *__pyx_freelist_4main___pyx_scope_struct_5___get__[8];
static int __pyx_freecount_4main___pyx_scope_struct_5___get__ = 0;

static PyObject *__pyx_tp_new_4main___pyx_scope_struct_5___get__(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_4main___pyx_scope_struct_5___get__ > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_4main___pyx_scope_struct_5___get__)))) {
    o = (PyObject*)__pyx_freelist_4main___pyx_scope_struct_5___get__[--__pyx_freecount_4main___pyx_scope_struct_5___get__];
    memset(o, 0, sizeof(struct __pyx_obj_4main___pyx_scope_struct_5___get__));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4main___pyx_scope_struct_5___get__(PyObject *o) {
  struct __pyx_obj_4main___pyx_scope_struct_5___get__ *p = (struct __pyx_obj_4main___pyx_scope_struct_5___get__ *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_self);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_4main___pyx_scope_struct_5___get__ < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_4main___pyx_scope_struct_5___get__)))) {
    __pyx_freelist_4main___pyx_scope_struct_5___get__[__pyx_freecount_4main___pyx_scope_struct_5___get__++] = ((struct __pyx_obj_4main___pyx_scope_struct_5___get__ *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_4main___pyx_scope_struct_5___get__(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4main___pyx_scope_struct_5___get__ *p = (struct __pyx_obj_4main___pyx_scope_struct_5___get__ *)o;
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4main___pyx_scope_struct_5___get__(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4main___pyx_scope_struct_5___get__ *p = (struct __pyx_obj_4main___pyx_scope_struct_5___get__ *)o;
  tmp = ((PyObject*)p->__pyx_v_self);
  p->__pyx_v_self = ((struct PyEditorUI *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_4main___pyx_scope_struct_5___get__ = {
  PyVarObject_HEAD_INIT(0, 0)
  "main.__pyx_scope_struct_5___get__", /*tp_name*/
  sizeof(struct __pyx_obj_4main___pyx_scope_struct_5___get__), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4main___pyx_scope_struct_5___get__, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4main___pyx_scope_struct_5___get__, /*tp_traverse*/
  __pyx_tp_clear_4main___pyx_scope_struct_5___get__, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4main___pyx_scope_struct_5___get__, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static struct __pyx_obj_4main___pyx_scope_struct_6___set__ *__pyx_freelist_4main___pyx_scope_struct_6___set__[8];
static int __pyx_freecount_4main___pyx_scope_struct_6___set__ = 0;

static PyObject *__pyx_tp_new_4main___pyx_scope_struct_6___set__(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_4main___pyx_scope_struct_6___set__ > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_4main___pyx_scope_struct_6___set__)))) {
    o = (PyObject*)__pyx_freelist_4main___pyx_scope_struct_6___set__[--__pyx_freecount_4main___pyx_scope_struct_6___set__];
    memset(o, 0, sizeof(struct __pyx_obj_4main___pyx_scope_struct_6___set__));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4main___pyx_scope_struct_6___set__(PyObject *o) {
  struct __pyx_obj_4main___pyx_scope_struct_6___set__ *p = (struct __pyx_obj_4main___pyx_scope_struct_6___set__ *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_ccar);
  Py_CLEAR(p->__pyx_v_self);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_4main___pyx_scope_struct_6___set__ < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_4main___pyx_scope_struct_6___set__)))) {
    __pyx_freelist_4main___pyx_scope_struct_6___set__[__pyx_freecount_4main___pyx_scope_struct_6___set__++] = ((struct __pyx_obj_4main___pyx_scope_struct_6___set__ *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_4main___pyx_scope_struct_6___set__(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4main___pyx_scope_struct_6___set__ *p = (struct __pyx_obj_4main___pyx_scope_struct_6___set__ *)o;
  if (p->__pyx_v_ccar) {
    e = (*v)(((PyObject *)p->__pyx_v_ccar), a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4main___pyx_scope_struct_6___set__(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4main___pyx_scope_struct_6___set__ *p = (struct __pyx_obj_4main___pyx_scope_struct_6___set__ *)o;
  tmp = ((PyObject*)p->__pyx_v_ccar);
  p->__pyx_v_ccar = ((struct _GOArray *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_self);
  p->__pyx_v_self = ((struct PyEditorUI *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_4main___pyx_scope_struct_6___set__ = {
  PyVarObject_HEAD_INIT(0, 0)
  "main.__pyx_scope_struct_6___set__", /*tp_name*/
  sizeof(struct __pyx_obj_4main___pyx_scope_struct_6___set__), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4main___pyx_scope_struct_6___set__, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4main___pyx_scope_struct_6___set__, /*tp_traverse*/
  __pyx_tp_clear_4main___pyx_scope_struct_6___set__, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4main___pyx_scope_struct_6___set__, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static struct __pyx_obj_4main___pyx_scope_struct_7___get__ *__pyx_freelist_4main___pyx_scope_struct_7___get__[8];
static int __pyx_freecount_4main___pyx_scope_struct_7___get__ = 0;

static PyObject *__pyx_tp_new_4main___pyx_scope_struct_7___get__(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_4main___pyx_scope_struct_7___get__ > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_4main___pyx_scope_struct_7___get__)))) {
    o = (PyObject*)__pyx_freelist_4main___pyx_scope_struct_7___get__[--__pyx_freecount_4main___pyx_scope_struct_7___get__];
    memset(o, 0, sizeof(struct __pyx_obj_4main___pyx_scope_struct_7___get__));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4main___pyx_scope_struct_7___get__(PyObject *o) {
  struct __pyx_obj_4main___pyx_scope_struct_7___get__ *p = (struct __pyx_obj_4main___pyx_scope_struct_7___get__ *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_self);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_4main___pyx_scope_struct_7___get__ < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_4main___pyx_scope_struct_7___get__)))) {
    __pyx_freelist_4main___pyx_scope_struct_7___get__[__pyx_freecount_4main___pyx_scope_struct_7___get__++] = ((struct __pyx_obj_4main___pyx_scope_struct_7___get__ *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_4main___pyx_scope_struct_7___get__(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4main___pyx_scope_struct_7___get__ *p = (struct __pyx_obj_4main___pyx_scope_struct_7___get__ *)o;
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4main___pyx_scope_struct_7___get__(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4main___pyx_scope_struct_7___get__ *p = (struct __pyx_obj_4main___pyx_scope_struct_7___get__ *)o;
  tmp = ((PyObject*)p->__pyx_v_self);
  p->__pyx_v_self = ((struct PyEditorUI *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_4main___pyx_scope_struct_7___get__ = {
  PyVarObject_HEAD_INIT(0, 0)
  "main.__pyx_scope_struct_7___get__", /*tp_name*/
  sizeof(struct __pyx_obj_4main___pyx_scope_struct_7___get__), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4main___pyx_scope_struct_7___get__, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4main___pyx_scope_struct_7___get__, /*tp_traverse*/
  __pyx_tp_clear_4main___pyx_scope_struct_7___get__, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4main___pyx_scope_struct_7___get__, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static struct __pyx_obj_4main___pyx_scope_struct_8_xor *__pyx_freelist_4main___pyx_scope_struct_8_xor[8];
static int __pyx_freecount_4main___pyx_scope_struct_8_xor = 0;

static PyObject *__pyx_tp_new_4main___pyx_scope_struct_8_xor(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_4main___pyx_scope_struct_8_xor > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_4main___pyx_scope_struct_8_xor)))) {
    o = (PyObject*)__pyx_freelist_4main___pyx_scope_struct_8_xor[--__pyx_freecount_4main___pyx_scope_struct_8_xor];
    memset(o, 0, sizeof(struct __pyx_obj_4main___pyx_scope_struct_8_xor));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4main___pyx_scope_struct_8_xor(PyObject *o) {
  struct __pyx_obj_4main___pyx_scope_struct_8_xor *p = (struct __pyx_obj_4main___pyx_scope_struct_8_xor *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_data);
  Py_CLEAR(p->__pyx_v_key);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_4main___pyx_scope_struct_8_xor < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_4main___pyx_scope_struct_8_xor)))) {
    __pyx_freelist_4main___pyx_scope_struct_8_xor[__pyx_freecount_4main___pyx_scope_struct_8_xor++] = ((struct __pyx_obj_4main___pyx_scope_struct_8_xor *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_4main___pyx_scope_struct_8_xor(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4main___pyx_scope_struct_8_xor *p = (struct __pyx_obj_4main___pyx_scope_struct_8_xor *)o;
  if (p->__pyx_v_data) {
    e = (*v)(p->__pyx_v_data, a); if (e) return e;
  }
  if (p->__pyx_v_key) {
    e = (*v)(p->__pyx_v_key, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4main___pyx_scope_struct_8_xor(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4main___pyx_scope_struct_8_xor *p = (struct __pyx_obj_4main___pyx_scope_struct_8_xor *)o;
  tmp = ((PyObject*)p->__pyx_v_data);
  p->__pyx_v_data = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_key);
  p->__pyx_v_key = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_4main___pyx_scope_struct_8_xor = {
  PyVarObject_HEAD_INIT(0, 0)
  "main.__pyx_scope_struct_8_xor", /*tp_name*/
  sizeof(struct __pyx_obj_4main___pyx_scope_struct_8_xor), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4main___pyx_scope_struct_8_xor, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4main___pyx_scope_struct_8_xor, /*tp_traverse*/
  __pyx_tp_clear_4main___pyx_scope_struct_8_xor, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4main___pyx_scope_struct_8_xor, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static struct __pyx_obj_4main___pyx_scope_struct_9_genexpr *__pyx_freelist_4main___pyx_scope_struct_9_genexpr[8];
static int __pyx_freecount_4main___pyx_scope_struct_9_genexpr = 0;

static PyObject *__pyx_tp_new_4main___pyx_scope_struct_9_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_4main___pyx_scope_struct_9_genexpr > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_4main___pyx_scope_struct_9_genexpr)))) {
    o = (PyObject*)__pyx_freelist_4main___pyx_scope_struct_9_genexpr[--__pyx_freecount_4main___pyx_scope_struct_9_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_4main___pyx_scope_struct_9_genexpr));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4main___pyx_scope_struct_9_genexpr(PyObject *o) {
  struct __pyx_obj_4main___pyx_scope_struct_9_genexpr *p = (struct __pyx_obj_4main___pyx_scope_struct_9_genexpr *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_outer_scope);
  Py_CLEAR(p->__pyx_v_x);
  Py_CLEAR(p->__pyx_v_y);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_4main___pyx_scope_struct_9_genexpr < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_4main___pyx_scope_struct_9_genexpr)))) {
    __pyx_freelist_4main___pyx_scope_struct_9_genexpr[__pyx_freecount_4main___pyx_scope_struct_9_genexpr++] = ((struct __pyx_obj_4main___pyx_scope_struct_9_genexpr *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_4main___pyx_scope_struct_9_genexpr(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4main___pyx_scope_struct_9_genexpr *p = (struct __pyx_obj_4main___pyx_scope_struct_9_genexpr *)o;
  if (p->__pyx_outer_scope) {
    e = (*v)(((PyObject *)p->__pyx_outer_scope), a); if (e) return e;
  }
  if (p->__pyx_v_x) {
    e = (*v)(p->__pyx_v_x, a); if (e) return e;
  }
  if (p->__pyx_v_y) {
    e = (*v)(p->__pyx_v_y, a); if (e) return e;
  }
  return 0;
}

static PyTypeObject __pyx_type_4main___pyx_scope_struct_9_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "main.__pyx_scope_struct_9_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_4main___pyx_scope_struct_9_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4main___pyx_scope_struct_9_genexpr, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4main___pyx_scope_struct_9_genexpr, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4main___pyx_scope_struct_9_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_main(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_main},
  {0, NULL}
};
#endif

static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    "main",
    0, /* m_doc */
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    0, /* m_size */
  #else
    -1, /* m_size */
  #endif
    __pyx_methods /* m_methods */,
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    __pyx_moduledef_slots, /* m_slots */
  #else
    NULL, /* m_reload */
  #endif
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_u_0, __pyx_k_0, sizeof(__pyx_k_0), 0, 1, 0, 0},
  {&__pyx_kp_u_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0, __pyx_k_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0, sizeof(__pyx_k_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0), 0, 1, 0, 0},
  {&__pyx_kp_u_1, __pyx_k_1, sizeof(__pyx_k_1), 0, 1, 0, 0},
  {&__pyx_kp_u_10, __pyx_k_10, sizeof(__pyx_k_10), 0, 1, 0, 0},
  {&__pyx_kp_u_100, __pyx_k_100, sizeof(__pyx_k_100), 0, 1, 0, 0},
  {&__pyx_kp_u_101, __pyx_k_101, sizeof(__pyx_k_101), 0, 1, 0, 0},
  {&__pyx_kp_u_102, __pyx_k_102, sizeof(__pyx_k_102), 0, 1, 0, 0},
  {&__pyx_kp_u_103, __pyx_k_103, sizeof(__pyx_k_103), 0, 1, 0, 0},
  {&__pyx_kp_u_105, __pyx_k_105, sizeof(__pyx_k_105), 0, 1, 0, 0},
  {&__pyx_kp_u_106, __pyx_k_106, sizeof(__pyx_k_106), 0, 1, 0, 0},
  {&__pyx_kp_u_107, __pyx_k_107, sizeof(__pyx_k_107), 0, 1, 0, 0},
  {&__pyx_kp_u_108, __pyx_k_108, sizeof(__pyx_k_108), 0, 1, 0, 0},
  {&__pyx_kp_u_11, __pyx_k_11, sizeof(__pyx_k_11), 0, 1, 0, 0},
  {&__pyx_kp_u_13, __pyx_k_13, sizeof(__pyx_k_13), 0, 1, 0, 0},
  {&__pyx_kp_u_15, __pyx_k_15, sizeof(__pyx_k_15), 0, 1, 0, 0},
  {&__pyx_kp_u_16, __pyx_k_16, sizeof(__pyx_k_16), 0, 1, 0, 0},
  {&__pyx_kp_u_17, __pyx_k_17, sizeof(__pyx_k_17), 0, 1, 0, 0},
  {&__pyx_kp_u_19, __pyx_k_19, sizeof(__pyx_k_19), 0, 1, 0, 0},
  {&__pyx_kp_u_1_40_2_125_3_255_11_255_12_255_1, __pyx_k_1_40_2_125_3_255_11_255_12_255_1, sizeof(__pyx_k_1_40_2_125_3_255_11_255_12_255_1), 0, 1, 0, 0},
  {&__pyx_kp_u_1_9_color, __pyx_k_1_9_color, sizeof(__pyx_k_1_9_color), 0, 1, 0, 0},
  {&__pyx_kp_u_2, __pyx_k_2, sizeof(__pyx_k_2), 0, 1, 0, 0},
  {&__pyx_kp_u_20, __pyx_k_20, sizeof(__pyx_k_20), 0, 1, 0, 0},
  {&__pyx_kp_u_21, __pyx_k_21, sizeof(__pyx_k_21), 0, 1, 0, 0},
  {&__pyx_kp_u_22, __pyx_k_22, sizeof(__pyx_k_22), 0, 1, 0, 0},
  {&__pyx_kp_u_23, __pyx_k_23, sizeof(__pyx_k_23), 0, 1, 0, 0},
  {&__pyx_kp_u_24, __pyx_k_24, sizeof(__pyx_k_24), 0, 1, 0, 0},
  {&__pyx_kp_u_25, __pyx_k_25, sizeof(__pyx_k_25), 0, 1, 0, 0},
  {&__pyx_kp_u_28, __pyx_k_28, sizeof(__pyx_k_28), 0, 1, 0, 0},
  {&__pyx_kp_u_29, __pyx_k_29, sizeof(__pyx_k_29), 0, 1, 0, 0},
  {&__pyx_kp_u_2_player, __pyx_k_2_player, sizeof(__pyx_k_2_player), 0, 1, 0, 0},
  {&__pyx_kp_u_3, __pyx_k_3, sizeof(__pyx_k_3), 0, 1, 0, 0},
  {&__pyx_kp_u_30, __pyx_k_30, sizeof(__pyx_k_30), 0, 1, 0, 0},
  {&__pyx_kp_u_31, __pyx_k_31, sizeof(__pyx_k_31), 0, 1, 0, 0},
  {&__pyx_kp_u_32, __pyx_k_32, sizeof(__pyx_k_32), 0, 1, 0, 0},
  {&__pyx_kp_u_34, __pyx_k_34, sizeof(__pyx_k_34), 0, 1, 0, 0},
  {&__pyx_kp_u_35, __pyx_k_35, sizeof(__pyx_k_35), 0, 1, 0, 0},
  {&__pyx_kp_u_36, __pyx_k_36, sizeof(__pyx_k_36), 0, 1, 0, 0},
  {&__pyx_kp_u_37526, __pyx_k_37526, sizeof(__pyx_k_37526), 0, 1, 0, 0},
  {&__pyx_kp_u_3D, __pyx_k_3D, sizeof(__pyx_k_3D), 0, 1, 0, 0},
  {&__pyx_kp_u_4, __pyx_k_4, sizeof(__pyx_k_4), 0, 1, 0, 0},
  {&__pyx_kp_u_41, __pyx_k_41, sizeof(__pyx_k_41), 0, 1, 0, 0},
  {&__pyx_kp_u_41274, __pyx_k_41274, sizeof(__pyx_k_41274), 0, 1, 0, 0},
  {&__pyx_kp_u_42, __pyx_k_42, sizeof(__pyx_k_42), 0, 1, 0, 0},
  {&__pyx_kp_u_43, __pyx_k_43, sizeof(__pyx_k_43), 0, 1, 0, 0},
  {&__pyx_kp_u_44, __pyx_k_44, sizeof(__pyx_k_44), 0, 1, 0, 0},
  {&__pyx_kp_u_45, __pyx_k_45, sizeof(__pyx_k_45), 0, 1, 0, 0},
  {&__pyx_kp_u_46, __pyx_k_46, sizeof(__pyx_k_46), 0, 1, 0, 0},
  {&__pyx_kp_u_47, __pyx_k_47, sizeof(__pyx_k_47), 0, 1, 0, 0},
  {&__pyx_kp_u_48, __pyx_k_48, sizeof(__pyx_k_48), 0, 1, 0, 0},
  {&__pyx_kp_u_49, __pyx_k_49, sizeof(__pyx_k_49), 0, 1, 0, 0},
  {&__pyx_kp_u_5, __pyx_k_5, sizeof(__pyx_k_5), 0, 1, 0, 0},
  {&__pyx_kp_u_50, __pyx_k_50, sizeof(__pyx_k_50), 0, 1, 0, 0},
  {&__pyx_kp_u_51, __pyx_k_51, sizeof(__pyx_k_51), 0, 1, 0, 0},
  {&__pyx_kp_u_52, __pyx_k_52, sizeof(__pyx_k_52), 0, 1, 0, 0},
  {&__pyx_kp_u_54, __pyx_k_54, sizeof(__pyx_k_54), 0, 1, 0, 0},
  {&__pyx_kp_u_56, __pyx_k_56, sizeof(__pyx_k_56), 0, 1, 0, 0},
  {&__pyx_kp_u_57, __pyx_k_57, sizeof(__pyx_k_57), 0, 1, 0, 0},
  {&__pyx_kp_u_58, __pyx_k_58, sizeof(__pyx_k_58), 0, 1, 0, 0},
  {&__pyx_kp_u_59, __pyx_k_59, sizeof(__pyx_k_59), 0, 1, 0, 0},
  {&__pyx_kp_u_6, __pyx_k_6, sizeof(__pyx_k_6), 0, 1, 0, 0},
  {&__pyx_kp_u_60, __pyx_k_60, sizeof(__pyx_k_60), 0, 1, 0, 0},
  {&__pyx_kp_u_61, __pyx_k_61, sizeof(__pyx_k_61), 0, 1, 0, 0},
  {&__pyx_kp_u_62, __pyx_k_62, sizeof(__pyx_k_62), 0, 1, 0, 0},
  {&__pyx_kp_u_63, __pyx_k_63, sizeof(__pyx_k_63), 0, 1, 0, 0},
  {&__pyx_kp_u_64, __pyx_k_64, sizeof(__pyx_k_64), 0, 1, 0, 0},
  {&__pyx_kp_u_65, __pyx_k_65, sizeof(__pyx_k_65), 0, 1, 0, 0},
  {&__pyx_kp_u_66, __pyx_k_66, sizeof(__pyx_k_66), 0, 1, 0, 0},
  {&__pyx_kp_u_67, __pyx_k_67, sizeof(__pyx_k_67), 0, 1, 0, 0},
  {&__pyx_kp_u_68, __pyx_k_68, sizeof(__pyx_k_68), 0, 1, 0, 0},
  {&__pyx_kp_u_69, __pyx_k_69, sizeof(__pyx_k_69), 0, 1, 0, 0},
  {&__pyx_kp_u_7, __pyx_k_7, sizeof(__pyx_k_7), 0, 1, 0, 0},
  {&__pyx_kp_u_70, __pyx_k_70, sizeof(__pyx_k_70), 0, 1, 0, 0},
  {&__pyx_kp_u_71, __pyx_k_71, sizeof(__pyx_k_71), 0, 1, 0, 0},
  {&__pyx_kp_u_72, __pyx_k_72, sizeof(__pyx_k_72), 0, 1, 0, 0},
  {&__pyx_kp_u_73, __pyx_k_73, sizeof(__pyx_k_73), 0, 1, 0, 0},
  {&__pyx_kp_u_75, __pyx_k_75, sizeof(__pyx_k_75), 0, 1, 0, 0},
  {&__pyx_kp_u_77, __pyx_k_77, sizeof(__pyx_k_77), 0, 1, 0, 0},
  {&__pyx_kp_u_78, __pyx_k_78, sizeof(__pyx_k_78), 0, 1, 0, 0},
  {&__pyx_kp_u_79, __pyx_k_79, sizeof(__pyx_k_79), 0, 1, 0, 0},
  {&__pyx_kp_u_8, __pyx_k_8, sizeof(__pyx_k_8), 0, 1, 0, 0},
  {&__pyx_kp_u_80, __pyx_k_80, sizeof(__pyx_k_80), 0, 1, 0, 0},
  {&__pyx_kp_u_81, __pyx_k_81, sizeof(__pyx_k_81), 0, 1, 0, 0},
  {&__pyx_kp_u_82, __pyx_k_82, sizeof(__pyx_k_82), 0, 1, 0, 0},
  {&__pyx_kp_u_84, __pyx_k_84, sizeof(__pyx_k_84), 0, 1, 0, 0},
  {&__pyx_kp_u_85, __pyx_k_85, sizeof(__pyx_k_85), 0, 1, 0, 0},
  {&__pyx_kp_u_86, __pyx_k_86, sizeof(__pyx_k_86), 0, 1, 0, 0},
  {&__pyx_kp_u_87, __pyx_k_87, sizeof(__pyx_k_87), 0, 1, 0, 0},
  {&__pyx_kp_u_88, __pyx_k_88, sizeof(__pyx_k_88), 0, 1, 0, 0},
  {&__pyx_kp_u_89, __pyx_k_89, sizeof(__pyx_k_89), 0, 1, 0, 0},
  {&__pyx_kp_u_9, __pyx_k_9, sizeof(__pyx_k_9), 0, 1, 0, 0},
  {&__pyx_kp_u_90, __pyx_k_90, sizeof(__pyx_k_90), 0, 1, 0, 0},
  {&__pyx_kp_u_91, __pyx_k_91, sizeof(__pyx_k_91), 0, 1, 0, 0},
  {&__pyx_kp_u_92, __pyx_k_92, sizeof(__pyx_k_92), 0, 1, 0, 0},
  {&__pyx_kp_u_93, __pyx_k_93, sizeof(__pyx_k_93), 0, 1, 0, 0},
  {&__pyx_kp_u_95, __pyx_k_95, sizeof(__pyx_k_95), 0, 1, 0, 0},
  {&__pyx_kp_u_96, __pyx_k_96, sizeof(__pyx_k_96), 0, 1, 0, 0},
  {&__pyx_kp_u_97, __pyx_k_97, sizeof(__pyx_k_97), 0, 1, 0, 0},
  {&__pyx_kp_u_98, __pyx_k_98, sizeof(__pyx_k_98), 0, 1, 0, 0},
  {&__pyx_kp_u_99, __pyx_k_99, sizeof(__pyx_k_99), 0, 1, 0, 0},
  {&__pyx_n_b_AAAAAAAAE, __pyx_k_AAAAAAAAE, sizeof(__pyx_k_AAAAAAAAE), 0, 0, 0, 1},
  {&__pyx_n_u_AnimatedGameObject, __pyx_k_AnimatedGameObject, sizeof(__pyx_k_AnimatedGameObject), 0, 1, 0, 1},
  {&__pyx_kp_u_Array_got_deallocated, __pyx_k_Array_got_deallocated, sizeof(__pyx_k_Array_got_deallocated), 0, 1, 0, 0},
  {&__pyx_n_s_AttributeError, __pyx_k_AttributeError, sizeof(__pyx_k_AttributeError), 0, 0, 1, 1},
  {&__pyx_n_u_BBUEIHF1rd, __pyx_k_BBUEIHF1rd, sizeof(__pyx_k_BBUEIHF1rd), 0, 1, 0, 1},
  {&__pyx_n_s_BLACK, __pyx_k_BLACK, sizeof(__pyx_k_BLACK), 0, 0, 1, 1},
  {&__pyx_n_s_BLUE, __pyx_k_BLUE, sizeof(__pyx_k_BLUE), 0, 0, 1, 1},
  {&__pyx_n_s_Block, __pyx_k_Block, sizeof(__pyx_k_Block), 0, 0, 1, 1},
  {&__pyx_n_s_Block___getitem, __pyx_k_Block___getitem, sizeof(__pyx_k_Block___getitem), 0, 0, 1, 1},
  {&__pyx_n_s_Block___init, __pyx_k_Block___init, sizeof(__pyx_k_Block___init), 0, 0, 1, 1},
  {&__pyx_n_s_Block___repr, __pyx_k_Block___repr, sizeof(__pyx_k_Block___repr), 0, 0, 1, 1},
  {&__pyx_n_s_Block___setitem, __pyx_k_Block___setitem, sizeof(__pyx_k_Block___setitem), 0, 0, 1, 1},
  {&__pyx_n_s_Block___str, __pyx_k_Block___str, sizeof(__pyx_k_Block___str), 0, 0, 1, 1},
  {&__pyx_n_s_Block_blockFromString, __pyx_k_Block_blockFromString, sizeof(__pyx_k_Block_blockFromString), 0, 0, 1, 1},
  {&__pyx_n_s_Block_change, __pyx_k_Block_change, sizeof(__pyx_k_Block_change), 0, 0, 1, 1},
  {&__pyx_n_s_Block_coords, __pyx_k_Block_coords, sizeof(__pyx_k_Block_coords), 0, 0, 1, 1},
  {&__pyx_n_s_Block_rotate, __pyx_k_Block_rotate, sizeof(__pyx_k_Block_rotate), 0, 0, 1, 1},
  {&__pyx_n_s_Block_setCoords, __pyx_k_Block_setCoords, sizeof(__pyx_k_Block_setCoords), 0, 0, 1, 1},
  {&__pyx_kp_u_CCArray_index_out_of_range, __pyx_k_CCArray_index_out_of_range, sizeof(__pyx_k_CCArray_index_out_of_range), 0, 1, 0, 0},
  {&__pyx_n_s_COIN, __pyx_k_COIN, sizeof(__pyx_k_COIN), 0, 0, 1, 1},
  {&__pyx_n_s_CUBE, __pyx_k_CUBE, sizeof(__pyx_k_CUBE), 0, 0, 1, 1},
  {&__pyx_n_s_CUSTOM, __pyx_k_CUSTOM, sizeof(__pyx_k_CUSTOM), 0, 0, 1, 1},
  {&__pyx_kp_u_Content_Type, __pyx_k_Content_Type, sizeof(__pyx_k_Content_Type), 0, 1, 0, 0},
  {&__pyx_n_s_DASH_GREEN, __pyx_k_DASH_GREEN, sizeof(__pyx_k_DASH_GREEN), 0, 0, 1, 1},
  {&__pyx_n_s_DASH_PINK, __pyx_k_DASH_PINK, sizeof(__pyx_k_DASH_PINK), 0, 0, 1, 1},
  {&__pyx_n_s_DIRECTION_NORMAL, __pyx_k_DIRECTION_NORMAL, sizeof(__pyx_k_DIRECTION_NORMAL), 0, 0, 1, 1},
  {&__pyx_n_s_DIRECTION_REVERSE, __pyx_k_DIRECTION_REVERSE, sizeof(__pyx_k_DIRECTION_REVERSE), 0, 0, 1, 1},
  {&__pyx_n_s_DUAL_OFF, __pyx_k_DUAL_OFF, sizeof(__pyx_k_DUAL_OFF), 0, 0, 1, 1},
  {&__pyx_n_s_DUAL_ON, __pyx_k_DUAL_ON, sizeof(__pyx_k_DUAL_ON), 0, 0, 1, 1},
  {&__pyx_n_s_Editor, __pyx_k_Editor, sizeof(__pyx_k_Editor), 0, 0, 1, 1},
  {&__pyx_n_s_Editor___get___locals_lambda, __pyx_k_Editor___get___locals_lambda, sizeof(__pyx_k_Editor___get___locals_lambda), 0, 0, 1, 1},
  {&__pyx_n_s_Editor___set___locals_lambda, __pyx_k_Editor___set___locals_lambda, sizeof(__pyx_k_Editor___set___locals_lambda), 0, 0, 1, 1},
  {&__pyx_n_u_EffectGameObject, __pyx_k_EffectGameObject, sizeof(__pyx_k_EffectGameObject), 0, 1, 0, 1},
  {&__pyx_n_s_Enum, __pyx_k_Enum, sizeof(__pyx_k_Enum), 0, 0, 1, 1},
  {&__pyx_n_u_Error, __pyx_k_Error, sizeof(__pyx_k_Error), 0, 1, 0, 1},
  {&__pyx_n_s_FAST, __pyx_k_FAST, sizeof(__pyx_k_FAST), 0, 0, 1, 1},
  {&__pyx_n_s_FASTER, __pyx_k_FASTER, sizeof(__pyx_k_FASTER), 0, 0, 1, 1},
  {&__pyx_n_s_FASTEST, __pyx_k_FASTEST, sizeof(__pyx_k_FASTEST), 0, 0, 1, 1},
  {&__pyx_n_s_FLASK, __pyx_k_FLASK, sizeof(__pyx_k_FLASK), 0, 0, 1, 1},
  {&__pyx_kp_u_Function_failed, __pyx_k_Function_failed, sizeof(__pyx_k_Function_failed), 0, 1, 0, 0},
  {&__pyx_n_s_GRAVITY_FLIPPED, __pyx_k_GRAVITY_FLIPPED, sizeof(__pyx_k_GRAVITY_FLIPPED), 0, 0, 1, 1},
  {&__pyx_n_s_GRAVITY_NORMAL, __pyx_k_GRAVITY_NORMAL, sizeof(__pyx_k_GRAVITY_NORMAL), 0, 0, 1, 1},
  {&__pyx_n_s_GREEN, __pyx_k_GREEN, sizeof(__pyx_k_GREEN), 0, 0, 1, 1},
  {&__pyx_n_s_GameObjArray, __pyx_k_GameObjArray, sizeof(__pyx_k_GameObjArray), 0, 0, 1, 1},
  {&__pyx_kp_u_GameObjArray_object_has_no_attr, __pyx_k_GameObjArray_object_has_no_attr, sizeof(__pyx_k_GameObjArray_object_has_no_attr), 0, 1, 0, 0},
  {&__pyx_n_u_GameObject, __pyx_k_GameObject, sizeof(__pyx_k_GameObject), 0, 1, 0, 1},
  {&__pyx_n_u_H4sIAAAAAAAAEzOwNrQ20DMwsrY21DMz, __pyx_k_H4sIAAAAAAAAEzOwNrQ20DMwsrY21DMz, sizeof(__pyx_k_H4sIAAAAAAAAEzOwNrQ20DMwsrY21DMz), 0, 1, 0, 1},
  {&__pyx_n_s_HEART, __pyx_k_HEART, sizeof(__pyx_k_HEART), 0, 0, 1, 1},
  {&__pyx_n_s_Header, __pyx_k_Header, sizeof(__pyx_k_Header), 0, 0, 1, 1},
  {&__pyx_n_s_Header___getitem, __pyx_k_Header___getitem, sizeof(__pyx_k_Header___getitem), 0, 0, 1, 1},
  {&__pyx_n_s_Header___init, __pyx_k_Header___init, sizeof(__pyx_k_Header___init), 0, 0, 1, 1},
  {&__pyx_n_s_Header___repr, __pyx_k_Header___repr, sizeof(__pyx_k_Header___repr), 0, 0, 1, 1},
  {&__pyx_n_s_Header___setitem, __pyx_k_Header___setitem, sizeof(__pyx_k_Header___setitem), 0, 0, 1, 1},
  {&__pyx_n_s_Header___str, __pyx_k_Header___str, sizeof(__pyx_k_Header___str), 0, 0, 1, 1},
  {&__pyx_kp_u_Incorrect_Username, __pyx_k_Incorrect_Username, sizeof(__pyx_k_Incorrect_Username), 0, 1, 0, 0},
  {&__pyx_n_s_IndexError, __pyx_k_IndexError, sizeof(__pyx_k_IndexError), 0, 0, 1, 1},
  {&__pyx_kp_u_Input_must_be_a_list_or_subclass, __pyx_k_Input_must_be_a_list_or_subclass, sizeof(__pyx_k_Input_must_be_a_list_or_subclass), 0, 1, 0, 0},
  {&__pyx_kp_u_Invalid_event_handler, __pyx_k_Invalid_event_handler, sizeof(__pyx_k_Invalid_event_handler), 0, 1, 0, 0},
  {&__pyx_kp_u_Invalid_index, __pyx_k_Invalid_index, sizeof(__pyx_k_Invalid_index), 0, 1, 0, 0},
  {&__pyx_kp_u_Invalid_type, __pyx_k_Invalid_type, sizeof(__pyx_k_Invalid_type), 0, 1, 0, 0},
  {&__pyx_n_s_KEY, __pyx_k_KEY, sizeof(__pyx_k_KEY), 0, 0, 1, 1},
  {&__pyx_n_u_LabelGameObject, __pyx_k_LabelGameObject, sizeof(__pyx_k_LabelGameObject), 0, 1, 0, 1},
  {&__pyx_n_s_Level, __pyx_k_Level, sizeof(__pyx_k_Level), 0, 0, 1, 1},
  {&__pyx_n_s_Level___init, __pyx_k_Level___init, sizeof(__pyx_k_Level___init), 0, 0, 1, 1},
  {&__pyx_n_s_Level___str, __pyx_k_Level___str, sizeof(__pyx_k_Level___str), 0, 0, 1, 1},
  {&__pyx_n_s_Level_addBlock, __pyx_k_Level_addBlock, sizeof(__pyx_k_Level_addBlock), 0, 0, 1, 1},
  {&__pyx_n_s_Level_addBlocks, __pyx_k_Level_addBlocks, sizeof(__pyx_k_Level_addBlocks), 0, 0, 1, 1},
  {&__pyx_n_s_Level_blocksInGroup, __pyx_k_Level_blocksInGroup, sizeof(__pyx_k_Level_blocksInGroup), 0, 0, 1, 1},
  {&__pyx_n_s_Level_downloadLevel, __pyx_k_Level_downloadLevel, sizeof(__pyx_k_Level_downloadLevel), 0, 0, 1, 1},
  {&__pyx_n_s_Level_encodee, __pyx_k_Level_encodee, sizeof(__pyx_k_Level_encodee), 0, 0, 1, 1},
  {&__pyx_n_s_Level_getfGroupID, __pyx_k_Level_getfGroupID, sizeof(__pyx_k_Level_getfGroupID), 0, 0, 1, 1},
  {&__pyx_n_s_Level_uploadLevel, __pyx_k_Level_uploadLevel, sizeof(__pyx_k_Level_uploadLevel), 0, 0, 1, 1},
  {&__pyx_n_s_NORMAL, __pyx_k_NORMAL, sizeof(__pyx_k_NORMAL), 0, 0, 1, 1},
  {&__pyx_n_u_Ok, __pyx_k_Ok, sizeof(__pyx_k_Ok), 0, 1, 0, 1},
  {&__pyx_n_s_PINK, __pyx_k_PINK, sizeof(__pyx_k_PINK), 0, 0, 1, 1},
  {&__pyx_n_s_PyCCArray, __pyx_k_PyCCArray, sizeof(__pyx_k_PyCCArray), 0, 0, 1, 1},
  {&__pyx_n_s_PyCCObject, __pyx_k_PyCCObject, sizeof(__pyx_k_PyCCObject), 0, 0, 1, 1},
  {&__pyx_n_s_PyCollectibleType, __pyx_k_PyCollectibleType, sizeof(__pyx_k_PyCollectibleType), 0, 0, 1, 1},
  {&__pyx_n_s_PyEvent, __pyx_k_PyEvent, sizeof(__pyx_k_PyEvent), 0, 0, 1, 1},
  {&__pyx_n_u_PyEvent, __pyx_k_PyEvent, sizeof(__pyx_k_PyEvent), 0, 1, 0, 1},
  {&__pyx_n_s_PyEventHandler, __pyx_k_PyEventHandler, sizeof(__pyx_k_PyEventHandler), 0, 0, 1, 1},
  {&__pyx_n_s_PyGameObject, __pyx_k_PyGameObject, sizeof(__pyx_k_PyGameObject), 0, 0, 1, 1},
  {&__pyx_n_s_PyPortalType, __pyx_k_PyPortalType, sizeof(__pyx_k_PyPortalType), 0, 0, 1, 1},
  {&__pyx_n_s_PyRingType, __pyx_k_PyRingType, sizeof(__pyx_k_PyRingType), 0, 0, 1, 1},
  {&__pyx_n_s_PySpeedType, __pyx_k_PySpeedType, sizeof(__pyx_k_PySpeedType), 0, 0, 1, 1},
  {&__pyx_n_s_RED, __pyx_k_RED, sizeof(__pyx_k_RED), 0, 0, 1, 1},
  {&__pyx_n_s_ROBOT, __pyx_k_ROBOT, sizeof(__pyx_k_ROBOT), 0, 0, 1, 1},
  {&__pyx_n_s_Request, __pyx_k_Request, sizeof(__pyx_k_Request), 0, 0, 1, 1},
  {&__pyx_n_u_RingObject, __pyx_k_RingObject, sizeof(__pyx_k_RingObject), 0, 1, 0, 1},
  {&__pyx_n_s_RuntimeError, __pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 0, 0, 1, 1},
  {&__pyx_n_s_SHIP, __pyx_k_SHIP, sizeof(__pyx_k_SHIP), 0, 0, 1, 1},
  {&__pyx_n_s_SIZE_NORMAL, __pyx_k_SIZE_NORMAL, sizeof(__pyx_k_SIZE_NORMAL), 0, 0, 1, 1},
  {&__pyx_n_s_SIZE_SMALL, __pyx_k_SIZE_SMALL, sizeof(__pyx_k_SIZE_SMALL), 0, 0, 1, 1},
  {&__pyx_n_s_SKULL, __pyx_k_SKULL, sizeof(__pyx_k_SKULL), 0, 0, 1, 1},
  {&__pyx_n_s_SLOW, __pyx_k_SLOW, sizeof(__pyx_k_SLOW), 0, 0, 1, 1},
  {&__pyx_n_s_SPIDER, __pyx_k_SPIDER, sizeof(__pyx_k_SPIDER), 0, 0, 1, 1},
  {&__pyx_n_s_TELEPORT, __pyx_k_TELEPORT, sizeof(__pyx_k_TELEPORT), 0, 0, 1, 1},
  {&__pyx_n_u_TeleportPortalObject, __pyx_k_TeleportPortalObject, sizeof(__pyx_k_TeleportPortalObject), 0, 1, 0, 1},
  {&__pyx_n_s_TypeError, __pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 0, 1, 1},
  {&__pyx_n_s_UFO, __pyx_k_UFO, sizeof(__pyx_k_UFO), 0, 0, 1, 1},
  {&__pyx_kp_u_Unable_to_fetch_editor, __pyx_k_Unable_to_fetch_editor, sizeof(__pyx_k_Unable_to_fetch_editor), 0, 1, 0, 0},
  {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
  {&__pyx_n_s_WAVE, __pyx_k_WAVE, sizeof(__pyx_k_WAVE), 0, 0, 1, 1},
  {&__pyx_n_u_Wmfd2893gb7, __pyx_k_Wmfd2893gb7, sizeof(__pyx_k_Wmfd2893gb7), 0, 1, 0, 1},
  {&__pyx_n_s_YELLOW, __pyx_k_YELLOW, sizeof(__pyx_k_YELLOW), 0, 0, 1, 1},
  {&__pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_k_Y_pyedit_pyedit_engine_cy_PyLvl, sizeof(__pyx_k_Y_pyedit_pyedit_engine_cy_PyLvl), 0, 0, 1, 0},
  {&__pyx_kp_s_Y_pyedit_pyedit_engine_cy_main_p, __pyx_k_Y_pyedit_pyedit_engine_cy_main_p, sizeof(__pyx_k_Y_pyedit_pyedit_engine_cy_main_p), 0, 0, 1, 0},
  {&__pyx_kp_u__17, __pyx_k__17, sizeof(__pyx_k__17), 0, 1, 0, 0},
  {&__pyx_kp_u__25, __pyx_k__25, sizeof(__pyx_k__25), 0, 1, 0, 0},
  {&__pyx_kp_u__27, __pyx_k__27, sizeof(__pyx_k__27), 0, 1, 0, 0},
  {&__pyx_kp_u__29, __pyx_k__29, sizeof(__pyx_k__29), 0, 1, 0, 0},
  {&__pyx_kp_u__32, __pyx_k__32, sizeof(__pyx_k__32), 0, 1, 0, 0},
  {&__pyx_kp_u__33, __pyx_k__33, sizeof(__pyx_k__33), 0, 1, 0, 0},
  {&__pyx_kp_u__35, __pyx_k__35, sizeof(__pyx_k__35), 0, 1, 0, 0},
  {&__pyx_kp_b__37, __pyx_k__37, sizeof(__pyx_k__37), 0, 0, 0, 0},
  {&__pyx_kp_b__38, __pyx_k__38, sizeof(__pyx_k__38), 0, 0, 0, 0},
  {&__pyx_kp_b__40, __pyx_k__40, sizeof(__pyx_k__40), 0, 0, 0, 0},
  {&__pyx_n_b__41, __pyx_k__41, sizeof(__pyx_k__41), 0, 0, 0, 1},
  {&__pyx_n_s__51, __pyx_k__51, sizeof(__pyx_k__51), 0, 0, 1, 1},
  {&__pyx_n_s_a, __pyx_k_a, sizeof(__pyx_k_a), 0, 0, 1, 1},
  {&__pyx_n_s_aa, __pyx_k_aa, sizeof(__pyx_k_aa), 0, 0, 1, 1},
  {&__pyx_n_u_accountID, __pyx_k_accountID, sizeof(__pyx_k_accountID), 0, 1, 0, 1},
  {&__pyx_n_u_activate_group, __pyx_k_activate_group, sizeof(__pyx_k_activate_group), 0, 1, 0, 1},
  {&__pyx_n_s_addBlock, __pyx_k_addBlock, sizeof(__pyx_k_addBlock), 0, 0, 1, 1},
  {&__pyx_n_s_addBlocks, __pyx_k_addBlocks, sizeof(__pyx_k_addBlocks), 0, 0, 1, 1},
  {&__pyx_n_u_add_object, __pyx_k_add_object, sizeof(__pyx_k_add_object), 0, 1, 0, 1},
  {&__pyx_n_s_alert, __pyx_k_alert, sizeof(__pyx_k_alert), 0, 0, 1, 1},
  {&__pyx_n_s_append, __pyx_k_append, sizeof(__pyx_k_append), 0, 0, 1, 1},
  {&__pyx_kp_u_application_x_www_form_urlencode, __pyx_k_application_x_www_form_urlencode, sizeof(__pyx_k_application_x_www_form_urlencode), 0, 1, 0, 0},
  {&__pyx_n_s_ar, __pyx_k_ar, sizeof(__pyx_k_ar), 0, 0, 1, 1},
  {&__pyx_n_s_args, __pyx_k_args, sizeof(__pyx_k_args), 0, 0, 1, 1},
  {&__pyx_n_u_audioTrack, __pyx_k_audioTrack, sizeof(__pyx_k_audioTrack), 0, 1, 0, 1},
  {&__pyx_n_s_audiotrack, __pyx_k_audiotrack, sizeof(__pyx_k_audiotrack), 0, 0, 1, 1},
  {&__pyx_n_u_auto, __pyx_k_auto, sizeof(__pyx_k_auto), 0, 1, 0, 1},
  {&__pyx_n_s_b, __pyx_k_b, sizeof(__pyx_k_b), 0, 0, 1, 1},
  {&__pyx_n_s_b64decode, __pyx_k_b64decode, sizeof(__pyx_k_b64decode), 0, 0, 1, 1},
  {&__pyx_n_s_b64encode, __pyx_k_b64encode, sizeof(__pyx_k_b64encode), 0, 0, 1, 1},
  {&__pyx_n_u_background, __pyx_k_background, sizeof(__pyx_k_background), 0, 1, 0, 1},
  {&__pyx_n_s_base64, __pyx_k_base64, sizeof(__pyx_k_base64), 0, 0, 1, 1},
  {&__pyx_n_u_binaryVersion, __pyx_k_binaryVersion, sizeof(__pyx_k_binaryVersion), 0, 1, 0, 1},
  {&__pyx_n_u_blending, __pyx_k_blending, sizeof(__pyx_k_blending), 0, 1, 0, 1},
  {&__pyx_n_s_bloc, __pyx_k_bloc, sizeof(__pyx_k_bloc), 0, 0, 1, 1},
  {&__pyx_n_s_blockFromString, __pyx_k_blockFromString, sizeof(__pyx_k_blockFromString), 0, 0, 1, 1},
  {&__pyx_n_u_blockid, __pyx_k_blockid, sizeof(__pyx_k_blockid), 0, 1, 0, 1},
  {&__pyx_n_s_blocks, __pyx_k_blocks, sizeof(__pyx_k_blocks), 0, 0, 1, 1},
  {&__pyx_n_s_blocksInGroup, __pyx_k_blocksInGroup, sizeof(__pyx_k_blocksInGroup), 0, 0, 1, 1},
  {&__pyx_n_u_blue, __pyx_k_blue, sizeof(__pyx_k_blue), 0, 1, 0, 1},
  {&__pyx_n_u_builtin_function_or_method, __pyx_k_builtin_function_or_method, sizeof(__pyx_k_builtin_function_or_method), 0, 1, 0, 1},
  {&__pyx_n_s_builtins, __pyx_k_builtins, sizeof(__pyx_k_builtins), 0, 0, 1, 1},
  {&__pyx_n_s_c, __pyx_k_c, sizeof(__pyx_k_c), 0, 0, 1, 1},
  {&__pyx_n_s_callback, __pyx_k_callback, sizeof(__pyx_k_callback), 0, 0, 1, 1},
  {&__pyx_n_s_change, __pyx_k_change, sizeof(__pyx_k_change), 0, 0, 1, 1},
  {&__pyx_n_s_chr, __pyx_k_chr, sizeof(__pyx_k_chr), 0, 0, 1, 1},
  {&__pyx_n_s_class, __pyx_k_class, sizeof(__pyx_k_class), 0, 0, 1, 1},
  {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {&__pyx_n_s_close, __pyx_k_close, sizeof(__pyx_k_close), 0, 0, 1, 1},
  {&__pyx_kp_u_cocos2d_CCArray, __pyx_k_cocos2d_CCArray, sizeof(__pyx_k_cocos2d_CCArray), 0, 1, 0, 0},
  {&__pyx_n_s_coins, __pyx_k_coins, sizeof(__pyx_k_coins), 0, 0, 1, 1},
  {&__pyx_n_u_coins, __pyx_k_coins, sizeof(__pyx_k_coins), 0, 1, 0, 1},
  {&__pyx_n_s_collect, __pyx_k_collect, sizeof(__pyx_k_collect), 0, 0, 1, 1},
  {&__pyx_n_s_collections, __pyx_k_collections, sizeof(__pyx_k_collections), 0, 0, 1, 1},
  {&__pyx_n_u_collision_block_b_id, __pyx_k_collision_block_b_id, sizeof(__pyx_k_collision_block_b_id), 0, 1, 0, 1},
  {&__pyx_n_u_color1, __pyx_k_color1, sizeof(__pyx_k_color1), 0, 1, 0, 1},
  {&__pyx_n_u_color2, __pyx_k_color2, sizeof(__pyx_k_color2), 0, 1, 0, 1},
  {&__pyx_n_u_colors, __pyx_k_colors, sizeof(__pyx_k_colors), 0, 1, 0, 1},
  {&__pyx_n_s_compress, __pyx_k_compress, sizeof(__pyx_k_compress), 0, 0, 1, 1},
  {&__pyx_n_s_compresslevel, __pyx_k_compresslevel, sizeof(__pyx_k_compresslevel), 0, 0, 1, 1},
  {&__pyx_n_s_coords, __pyx_k_coords, sizeof(__pyx_k_coords), 0, 0, 1, 1},
  {&__pyx_n_u_coords, __pyx_k_coords, sizeof(__pyx_k_coords), 0, 1, 0, 1},
  {&__pyx_n_u_copied_color_hsv_values, __pyx_k_copied_color_hsv_values, sizeof(__pyx_k_copied_color_hsv_values), 0, 1, 0, 1},
  {&__pyx_n_u_copied_color_id, __pyx_k_copied_color_id, sizeof(__pyx_k_copied_color_id), 0, 1, 0, 1},
  {&__pyx_n_u_copy_opacity, __pyx_k_copy_opacity, sizeof(__pyx_k_copy_opacity), 0, 1, 0, 1},
  {&__pyx_n_u_count, __pyx_k_count, sizeof(__pyx_k_count), 0, 1, 0, 1},
  {&__pyx_n_u_count_multi_activate, __pyx_k_count_multi_activate, sizeof(__pyx_k_count_multi_activate), 0, 1, 0, 1},
  {&__pyx_n_s_createObject, __pyx_k_createObject, sizeof(__pyx_k_createObject), 0, 0, 1, 1},
  {&__pyx_n_u_custom_rotation_speed, __pyx_k_custom_rotation_speed, sizeof(__pyx_k_custom_rotation_speed), 0, 1, 0, 1},
  {&__pyx_n_s_cycle, __pyx_k_cycle, sizeof(__pyx_k_cycle), 0, 0, 1, 1},
  {&__pyx_n_s_d, __pyx_k_d, sizeof(__pyx_k_d), 0, 0, 1, 1},
  {&__pyx_n_u_d, __pyx_k_d, sizeof(__pyx_k_d), 0, 1, 0, 1},
  {&__pyx_n_s_data, __pyx_k_data, sizeof(__pyx_k_data), 0, 0, 1, 1},
  {&__pyx_n_s_decode, __pyx_k_decode, sizeof(__pyx_k_decode), 0, 0, 1, 1},
  {&__pyx_n_s_decompress, __pyx_k_decompress, sizeof(__pyx_k_decompress), 0, 0, 1, 1},
  {&__pyx_n_s_degrees, __pyx_k_degrees, sizeof(__pyx_k_degrees), 0, 0, 1, 1},
  {&__pyx_n_s_deleteSelection, __pyx_k_deleteSelection, sizeof(__pyx_k_deleteSelection), 0, 0, 1, 1},
  {&__pyx_n_s_description, __pyx_k_description, sizeof(__pyx_k_description), 0, 0, 1, 1},
  {&__pyx_n_s_diction, __pyx_k_diction, sizeof(__pyx_k_diction), 0, 0, 1, 1},
  {&__pyx_n_s_dictionary, __pyx_k_dictionary, sizeof(__pyx_k_dictionary), 0, 0, 1, 1},
  {&__pyx_n_u_disable_rotation, __pyx_k_disable_rotation, sizeof(__pyx_k_disable_rotation), 0, 1, 0, 1},
  {&__pyx_n_s_doc, __pyx_k_doc, sizeof(__pyx_k_doc), 0, 0, 1, 1},
  {&__pyx_n_u_dont_enter, __pyx_k_dont_enter, sizeof(__pyx_k_dont_enter), 0, 1, 0, 1},
  {&__pyx_n_u_dont_fade, __pyx_k_dont_fade, sizeof(__pyx_k_dont_fade), 0, 1, 0, 1},
  {&__pyx_n_s_downloadLevel, __pyx_k_downloadLevel, sizeof(__pyx_k_downloadLevel), 0, 0, 1, 1},
  {&__pyx_n_u_dual, __pyx_k_dual, sizeof(__pyx_k_dual), 0, 1, 0, 1},
  {&__pyx_n_s_duplicate, __pyx_k_duplicate, sizeof(__pyx_k_duplicate), 0, 0, 1, 1},
  {&__pyx_n_u_duration, __pyx_k_duration, sizeof(__pyx_k_duration), 0, 1, 0, 1},
  {&__pyx_n_u_dynamic_block, __pyx_k_dynamic_block, sizeof(__pyx_k_dynamic_block), 0, 1, 0, 1},
  {&__pyx_n_s_e, __pyx_k_e, sizeof(__pyx_k_e), 0, 0, 1, 1},
  {&__pyx_n_u_easing, __pyx_k_easing, sizeof(__pyx_k_easing), 0, 1, 0, 1},
  {&__pyx_n_u_easing_rate, __pyx_k_easing_rate, sizeof(__pyx_k_easing_rate), 0, 1, 0, 1},
  {&__pyx_n_u_editor_layer_1, __pyx_k_editor_layer_1, sizeof(__pyx_k_editor_layer_1), 0, 1, 0, 1},
  {&__pyx_n_u_editor_layer_2, __pyx_k_editor_layer_2, sizeof(__pyx_k_editor_layer_2), 0, 1, 0, 1},
  {&__pyx_n_s_encode, __pyx_k_encode, sizeof(__pyx_k_encode), 0, 0, 1, 1},
  {&__pyx_n_s_encoded, __pyx_k_encoded, sizeof(__pyx_k_encoded), 0, 0, 1, 1},
  {&__pyx_n_s_encodee, __pyx_k_encodee, sizeof(__pyx_k_encodee), 0, 0, 1, 1},
  {&__pyx_n_s_encodestring, __pyx_k_encodestring, sizeof(__pyx_k_encodestring), 0, 0, 1, 1},
  {&__pyx_n_s_enum, __pyx_k_enum, sizeof(__pyx_k_enum), 0, 0, 1, 1},
  {&__pyx_n_s_err, __pyx_k_err, sizeof(__pyx_k_err), 0, 0, 1, 1},
  {&__pyx_n_u_ev, __pyx_k_ev, sizeof(__pyx_k_ev), 0, 1, 0, 1},
  {&__pyx_n_s_evens, __pyx_k_evens, sizeof(__pyx_k_evens), 0, 0, 1, 1},
  {&__pyx_n_u_extraString, __pyx_k_extraString, sizeof(__pyx_k_extraString), 0, 1, 0, 1},
  {&__pyx_n_s_f, __pyx_k_f, sizeof(__pyx_k_f), 0, 0, 1, 1},
  {&__pyx_n_u_fade_in, __pyx_k_fade_in, sizeof(__pyx_k_fade_in), 0, 1, 0, 1},
  {&__pyx_n_u_fade_out, __pyx_k_fade_out, sizeof(__pyx_k_fade_out), 0, 1, 0, 1},
  {&__pyx_n_u_follow_group_id, __pyx_k_follow_group_id, sizeof(__pyx_k_follow_group_id), 0, 1, 0, 1},
  {&__pyx_n_u_follow_player_y_delay, __pyx_k_follow_player_y_delay, sizeof(__pyx_k_follow_player_y_delay), 0, 1, 0, 1},
  {&__pyx_n_u_follow_player_y_max_speed, __pyx_k_follow_player_y_max_speed, sizeof(__pyx_k_follow_player_y_max_speed), 0, 1, 0, 1},
  {&__pyx_n_u_follow_player_y_offset, __pyx_k_follow_player_y_offset, sizeof(__pyx_k_follow_player_y_offset), 0, 1, 0, 1},
  {&__pyx_n_u_follow_player_y_speed, __pyx_k_follow_player_y_speed, sizeof(__pyx_k_follow_player_y_speed), 0, 1, 0, 1},
  {&__pyx_n_u_follow_x_mod, __pyx_k_follow_x_mod, sizeof(__pyx_k_follow_x_mod), 0, 1, 0, 1},
  {&__pyx_n_u_follow_y_mod, __pyx_k_follow_y_mod, sizeof(__pyx_k_follow_y_mod), 0, 1, 0, 1},
  {&__pyx_n_u_font, __pyx_k_font, sizeof(__pyx_k_font), 0, 1, 0, 1},
  {&__pyx_kp_u_for_item_inside_list, __pyx_k_for_item_inside_list, sizeof(__pyx_k_for_item_inside_list), 0, 1, 0, 0},
  {&__pyx_n_s_format, __pyx_k_format, sizeof(__pyx_k_format), 0, 0, 1, 1},
  {&__pyx_n_s_fromString, __pyx_k_fromString, sizeof(__pyx_k_fromString), 0, 0, 1, 1},
  {&__pyx_n_s_func, __pyx_k_func, sizeof(__pyx_k_func), 0, 0, 1, 1},
  {&__pyx_n_s_future, __pyx_k_future, sizeof(__pyx_k_future), 0, 0, 1, 1},
  {&__pyx_n_u_gameVersion, __pyx_k_gameVersion, sizeof(__pyx_k_gameVersion), 0, 1, 0, 1},
  {&__pyx_kp_u_gameVersion_21_binaryVersion_35, __pyx_k_gameVersion_21_binaryVersion_35, sizeof(__pyx_k_gameVersion_21_binaryVersion_35), 0, 1, 0, 0},
  {&__pyx_n_u_gdw, __pyx_k_gdw, sizeof(__pyx_k_gdw), 0, 1, 0, 1},
  {&__pyx_n_s_genexpr, __pyx_k_genexpr, sizeof(__pyx_k_genexpr), 0, 0, 1, 1},
  {&__pyx_n_s_get, __pyx_k_get, sizeof(__pyx_k_get), 0, 0, 1, 1},
  {&__pyx_n_s_getAccountID, __pyx_k_getAccountID, sizeof(__pyx_k_getAccountID), 0, 0, 1, 1},
  {&__pyx_n_s_getSong, __pyx_k_getSong, sizeof(__pyx_k_getSong), 0, 0, 1, 1},
  {&__pyx_n_s_getattr, __pyx_k_getattr, sizeof(__pyx_k_getattr), 0, 0, 1, 1},
  {&__pyx_n_s_getattr___locals_lambda, __pyx_k_getattr___locals_lambda, sizeof(__pyx_k_getattr___locals_lambda), 0, 0, 1, 1},
  {&__pyx_n_s_getfGroupID, __pyx_k_getfGroupID, sizeof(__pyx_k_getfGroupID), 0, 0, 1, 1},
  {&__pyx_n_s_getitem, __pyx_k_getitem, sizeof(__pyx_k_getitem), 0, 0, 1, 1},
  {&__pyx_n_s_getstate, __pyx_k_getstate, sizeof(__pyx_k_getstate), 0, 0, 1, 1},
  {&__pyx_n_u_gjp, __pyx_k_gjp, sizeof(__pyx_k_gjp), 0, 1, 0, 1},
  {&__pyx_n_u_glow_disabled, __pyx_k_glow_disabled, sizeof(__pyx_k_glow_disabled), 0, 1, 0, 1},
  {&__pyx_n_u_green, __pyx_k_green, sizeof(__pyx_k_green), 0, 1, 0, 1},
  {&__pyx_n_u_ground, __pyx_k_ground, sizeof(__pyx_k_ground), 0, 1, 0, 1},
  {&__pyx_n_u_ground_line, __pyx_k_ground_line, sizeof(__pyx_k_ground_line), 0, 1, 0, 1},
  {&__pyx_n_u_group_ids, __pyx_k_group_ids, sizeof(__pyx_k_group_ids), 0, 1, 0, 1},
  {&__pyx_n_u_group_parent, __pyx_k_group_parent, sizeof(__pyx_k_group_parent), 0, 1, 0, 1},
  {&__pyx_n_s_groupid, __pyx_k_groupid, sizeof(__pyx_k_groupid), 0, 0, 1, 1},
  {&__pyx_n_s_gs, __pyx_k_gs, sizeof(__pyx_k_gs), 0, 0, 1, 1},
  {&__pyx_n_s_gzip, __pyx_k_gzip, sizeof(__pyx_k_gzip), 0, 0, 1, 1},
  {&__pyx_n_s_handler, __pyx_k_handler, sizeof(__pyx_k_handler), 0, 0, 1, 1},
  {&__pyx_kp_u_handler_name_callback, __pyx_k_handler_name_callback, sizeof(__pyx_k_handler_name_callback), 0, 1, 0, 0},
  {&__pyx_n_s_hashlib, __pyx_k_hashlib, sizeof(__pyx_k_hashlib), 0, 0, 1, 1},
  {&__pyx_n_s_header, __pyx_k_header, sizeof(__pyx_k_header), 0, 0, 1, 1},
  {&__pyx_n_s_headers, __pyx_k_headers, sizeof(__pyx_k_headers), 0, 0, 1, 1},
  {&__pyx_n_s_hexdigest, __pyx_k_hexdigest, sizeof(__pyx_k_hexdigest), 0, 0, 1, 1},
  {&__pyx_n_u_high_detail, __pyx_k_high_detail, sizeof(__pyx_k_high_detail), 0, 1, 0, 1},
  {&__pyx_n_u_hold_mode, __pyx_k_hold_mode, sizeof(__pyx_k_hold_mode), 0, 1, 0, 1},
  {&__pyx_n_u_hsv_enabled_1, __pyx_k_hsv_enabled_1, sizeof(__pyx_k_hsv_enabled_1), 0, 1, 0, 1},
  {&__pyx_n_u_hsv_enabled_2, __pyx_k_hsv_enabled_2, sizeof(__pyx_k_hsv_enabled_2), 0, 1, 0, 1},
  {&__pyx_n_u_hsv_values_1, __pyx_k_hsv_values_1, sizeof(__pyx_k_hsv_values_1), 0, 1, 0, 1},
  {&__pyx_n_u_hsv_values_2, __pyx_k_hsv_values_2, sizeof(__pyx_k_hsv_values_2), 0, 1, 0, 1},
  {&__pyx_kp_u_http_boomlings_com_database_uplo, __pyx_k_http_boomlings_com_database_uplo, sizeof(__pyx_k_http_boomlings_com_database_uplo), 0, 1, 0, 0},
  {&__pyx_kp_u_http_www_boomlings_com_database, __pyx_k_http_www_boomlings_com_database, sizeof(__pyx_k_http_www_boomlings_com_database), 0, 1, 0, 0},
  {&__pyx_kp_u_http_www_boomlings_com_database_2, __pyx_k_http_www_boomlings_com_database_2, sizeof(__pyx_k_http_www_boomlings_com_database_2), 0, 1, 0, 0},
  {&__pyx_n_s_i, __pyx_k_i, sizeof(__pyx_k_i), 0, 0, 1, 1},
  {&__pyx_n_u_idk, __pyx_k_idk, sizeof(__pyx_k_idk), 0, 1, 0, 1},
  {&__pyx_n_s_ids, __pyx_k_ids, sizeof(__pyx_k_ids), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_init, __pyx_k_init, sizeof(__pyx_k_init), 0, 0, 1, 1},
  {&__pyx_n_s_init_2, __pyx_k_init_2, sizeof(__pyx_k_init_2), 0, 0, 1, 1},
  {&__pyx_n_u_instant_count_comparison, __pyx_k_instant_count_comparison, sizeof(__pyx_k_instant_count_comparison), 0, 1, 0, 1},
  {&__pyx_n_u_is_active_trigger_type, __pyx_k_is_active_trigger_type, sizeof(__pyx_k_is_active_trigger_type), 0, 1, 0, 1},
  {&__pyx_n_u_is_flipped_horizontal, __pyx_k_is_flipped_horizontal, sizeof(__pyx_k_is_flipped_horizontal), 0, 1, 0, 1},
  {&__pyx_n_u_is_flipped_vertical, __pyx_k_is_flipped_vertical, sizeof(__pyx_k_is_flipped_vertical), 0, 1, 0, 1},
  {&__pyx_n_u_item_id, __pyx_k_item_id, sizeof(__pyx_k_item_id), 0, 1, 0, 1},
  {&__pyx_n_s_items, __pyx_k_items, sizeof(__pyx_k_items), 0, 0, 1, 1},
  {&__pyx_n_s_itertools, __pyx_k_itertools, sizeof(__pyx_k_itertools), 0, 0, 1, 1},
  {&__pyx_n_s_izip, __pyx_k_izip, sizeof(__pyx_k_izip), 0, 0, 1, 1},
  {&__pyx_n_s_jso, __pyx_k_jso, sizeof(__pyx_k_jso), 0, 0, 1, 1},
  {&__pyx_n_s_json, __pyx_k_json, sizeof(__pyx_k_json), 0, 0, 1, 1},
  {&__pyx_n_s_k, __pyx_k_k, sizeof(__pyx_k_k), 0, 0, 1, 1},
  {&__pyx_n_u_kA10, __pyx_k_kA10, sizeof(__pyx_k_kA10), 0, 1, 0, 1},
  {&__pyx_n_u_kA11, __pyx_k_kA11, sizeof(__pyx_k_kA11), 0, 1, 0, 1},
  {&__pyx_n_u_kA13, __pyx_k_kA13, sizeof(__pyx_k_kA13), 0, 1, 0, 1},
  {&__pyx_n_u_kA14, __pyx_k_kA14, sizeof(__pyx_k_kA14), 0, 1, 0, 1},
  {&__pyx_n_u_kA15, __pyx_k_kA15, sizeof(__pyx_k_kA15), 0, 1, 0, 1},
  {&__pyx_n_u_kA16, __pyx_k_kA16, sizeof(__pyx_k_kA16), 0, 1, 0, 1},
  {&__pyx_n_u_kA17, __pyx_k_kA17, sizeof(__pyx_k_kA17), 0, 1, 0, 1},
  {&__pyx_n_u_kA18, __pyx_k_kA18, sizeof(__pyx_k_kA18), 0, 1, 0, 1},
  {&__pyx_n_u_kA2, __pyx_k_kA2, sizeof(__pyx_k_kA2), 0, 1, 0, 1},
  {&__pyx_n_u_kA3, __pyx_k_kA3, sizeof(__pyx_k_kA3), 0, 1, 0, 1},
  {&__pyx_n_u_kA4, __pyx_k_kA4, sizeof(__pyx_k_kA4), 0, 1, 0, 1},
  {&__pyx_n_u_kA6, __pyx_k_kA6, sizeof(__pyx_k_kA6), 0, 1, 0, 1},
  {&__pyx_n_u_kA7, __pyx_k_kA7, sizeof(__pyx_k_kA7), 0, 1, 0, 1},
  {&__pyx_n_u_kA8, __pyx_k_kA8, sizeof(__pyx_k_kA8), 0, 1, 0, 1},
  {&__pyx_n_u_kA9, __pyx_k_kA9, sizeof(__pyx_k_kA9), 0, 1, 0, 1},
  {&__pyx_n_u_kS38, __pyx_k_kS38, sizeof(__pyx_k_kS38), 0, 1, 0, 1},
  {&__pyx_n_u_kS39, __pyx_k_kS39, sizeof(__pyx_k_kS39), 0, 1, 0, 1},
  {&__pyx_n_s_key, __pyx_k_key, sizeof(__pyx_k_key), 0, 0, 1, 1},
  {&__pyx_n_s_kwargs, __pyx_k_kwargs, sizeof(__pyx_k_kwargs), 0, 0, 1, 1},
  {&__pyx_n_u_ldm, __pyx_k_ldm, sizeof(__pyx_k_ldm), 0, 1, 0, 1},
  {&__pyx_n_s_len, __pyx_k_len, sizeof(__pyx_k_len), 0, 0, 1, 1},
  {&__pyx_n_u_levelDesc, __pyx_k_levelDesc, sizeof(__pyx_k_levelDesc), 0, 1, 0, 1},
  {&__pyx_n_u_levelID, __pyx_k_levelID, sizeof(__pyx_k_levelID), 0, 1, 0, 1},
  {&__pyx_n_u_levelInfo, __pyx_k_levelInfo, sizeof(__pyx_k_levelInfo), 0, 1, 0, 1},
  {&__pyx_n_u_levelLength, __pyx_k_levelLength, sizeof(__pyx_k_levelLength), 0, 1, 0, 1},
  {&__pyx_n_u_levelName, __pyx_k_levelName, sizeof(__pyx_k_levelName), 0, 1, 0, 1},
  {&__pyx_n_s_levelString, __pyx_k_levelString, sizeof(__pyx_k_levelString), 0, 0, 1, 1},
  {&__pyx_n_u_levelString, __pyx_k_levelString, sizeof(__pyx_k_levelString), 0, 1, 0, 1},
  {&__pyx_n_u_levelVersion, __pyx_k_levelVersion, sizeof(__pyx_k_levelVersion), 0, 1, 0, 1},
  {&__pyx_n_s_levelid, __pyx_k_levelid, sizeof(__pyx_k_levelid), 0, 0, 1, 1},
  {&__pyx_n_s_levelname, __pyx_k_levelname, sizeof(__pyx_k_levelname), 0, 0, 1, 1},
  {&__pyx_n_s_levelstring, __pyx_k_levelstring, sizeof(__pyx_k_levelstring), 0, 0, 1, 1},
  {&__pyx_n_s_lid, __pyx_k_lid, sizeof(__pyx_k_lid), 0, 0, 1, 1},
  {&__pyx_n_u_linked_group, __pyx_k_linked_group, sizeof(__pyx_k_linked_group), 0, 1, 0, 1},
  {&__pyx_n_s_lpassword, __pyx_k_lpassword, sizeof(__pyx_k_lpassword), 0, 0, 1, 1},
  {&__pyx_n_s_lst, __pyx_k_lst, sizeof(__pyx_k_lst), 0, 0, 1, 1},
  {&__pyx_n_s_lstr, __pyx_k_lstr, sizeof(__pyx_k_lstr), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_main_2, __pyx_k_main_2, sizeof(__pyx_k_main_2), 0, 0, 1, 1},
  {&__pyx_n_s_makeSeed, __pyx_k_makeSeed, sizeof(__pyx_k_makeSeed), 0, 0, 1, 1},
  {&__pyx_n_s_math, __pyx_k_math, sizeof(__pyx_k_math), 0, 0, 1, 1},
  {&__pyx_n_s_metaclass, __pyx_k_metaclass, sizeof(__pyx_k_metaclass), 0, 0, 1, 1},
  {&__pyx_n_u_mini, __pyx_k_mini, sizeof(__pyx_k_mini), 0, 1, 0, 1},
  {&__pyx_n_s_module, __pyx_k_module, sizeof(__pyx_k_module), 0, 0, 1, 1},
  {&__pyx_n_u_move_lock_to_player_x, __pyx_k_move_lock_to_player_x, sizeof(__pyx_k_move_lock_to_player_x), 0, 1, 0, 1},
  {&__pyx_n_u_move_lock_to_player_y, __pyx_k_move_lock_to_player_y, sizeof(__pyx_k_move_lock_to_player_y), 0, 1, 0, 1},
  {&__pyx_n_u_move_objects, __pyx_k_move_objects, sizeof(__pyx_k_move_objects), 0, 1, 0, 1},
  {&__pyx_n_u_move_target_enabled, __pyx_k_move_target_enabled, sizeof(__pyx_k_move_target_enabled), 0, 1, 0, 1},
  {&__pyx_n_u_move_target_pos_coordinates, __pyx_k_move_target_pos_coordinates, sizeof(__pyx_k_move_target_pos_coordinates), 0, 1, 0, 1},
  {&__pyx_n_u_move_trigger_9_units, __pyx_k_move_trigger_9_units, sizeof(__pyx_k_move_trigger_9_units), 0, 1, 0, 1},
  {&__pyx_n_u_move_trigger_x_units, __pyx_k_move_trigger_x_units, sizeof(__pyx_k_move_trigger_x_units), 0, 1, 0, 1},
  {&__pyx_n_u_multi_trigger, __pyx_k_multi_trigger, sizeof(__pyx_k_multi_trigger), 0, 1, 0, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_s_name_2, __pyx_k_name_2, sizeof(__pyx_k_name_2), 0, 0, 1, 1},
  {&__pyx_n_u_name_2, __pyx_k_name_2, sizeof(__pyx_k_name_2), 0, 1, 0, 1},
  {&__pyx_n_s_namedtuple, __pyx_k_namedtuple, sizeof(__pyx_k_namedtuple), 0, 0, 1, 1},
  {&__pyx_n_u_no, __pyx_k_no, sizeof(__pyx_k_no), 0, 1, 0, 1},
  {&__pyx_kp_s_no_default___reduce___due_to_non, __pyx_k_no_default___reduce___due_to_non, sizeof(__pyx_k_no_default___reduce___due_to_non), 0, 0, 1, 0},
  {&__pyx_n_u_nothing, __pyx_k_nothing, sizeof(__pyx_k_nothing), 0, 1, 0, 1},
  {&__pyx_n_u_nutin, __pyx_k_nutin, sizeof(__pyx_k_nutin), 0, 1, 0, 1},
  {&__pyx_n_u_object, __pyx_k_object, sizeof(__pyx_k_object), 0, 1, 0, 1},
  {&__pyx_n_s_objectid, __pyx_k_objectid, sizeof(__pyx_k_objectid), 0, 0, 1, 1},
  {&__pyx_n_u_objects, __pyx_k_objects, sizeof(__pyx_k_objects), 0, 1, 0, 1},
  {&__pyx_n_s_odds, __pyx_k_odds, sizeof(__pyx_k_odds), 0, 0, 1, 1},
  {&__pyx_n_u_opacity, __pyx_k_opacity, sizeof(__pyx_k_opacity), 0, 1, 0, 1},
  {&__pyx_n_u_original, __pyx_k_original, sizeof(__pyx_k_original), 0, 1, 0, 1},
  {&__pyx_n_s_os, __pyx_k_os, sizeof(__pyx_k_os), 0, 0, 1, 1},
  {&__pyx_n_s_otheritems, __pyx_k_otheritems, sizeof(__pyx_k_otheritems), 0, 0, 1, 1},
  {&__pyx_n_s_out, __pyx_k_out, sizeof(__pyx_k_out), 0, 0, 1, 1},
  {&__pyx_n_s_p, __pyx_k_p, sizeof(__pyx_k_p), 0, 0, 1, 1},
  {&__pyx_n_u_page, __pyx_k_page, sizeof(__pyx_k_page), 0, 1, 0, 1},
  {&__pyx_n_s_password, __pyx_k_password, sizeof(__pyx_k_password), 0, 0, 1, 1},
  {&__pyx_n_u_password, __pyx_k_password, sizeof(__pyx_k_password), 0, 1, 0, 1},
  {&__pyx_n_s_pasteStr, __pyx_k_pasteStr, sizeof(__pyx_k_pasteStr), 0, 0, 1, 1},
  {&__pyx_n_u_pickup_mode, __pyx_k_pickup_mode, sizeof(__pyx_k_pickup_mode), 0, 1, 0, 1},
  {&__pyx_n_u_player_color_1, __pyx_k_player_color_1, sizeof(__pyx_k_player_color_1), 0, 1, 0, 1},
  {&__pyx_n_u_player_color_2, __pyx_k_player_color_2, sizeof(__pyx_k_player_color_2), 0, 1, 0, 1},
  {&__pyx_n_u_portal_checked, __pyx_k_portal_checked, sizeof(__pyx_k_portal_checked), 0, 1, 0, 1},
  {&__pyx_n_s_positionX, __pyx_k_positionX, sizeof(__pyx_k_positionX), 0, 0, 1, 1},
  {&__pyx_n_s_post, __pyx_k_post, sizeof(__pyx_k_post), 0, 0, 1, 1},
  {&__pyx_n_s_prepare, __pyx_k_prepare, sizeof(__pyx_k_prepare), 0, 0, 1, 1},
  {&__pyx_n_u_press_edit_button, __pyx_k_press_edit_button, sizeof(__pyx_k_press_edit_button), 0, 1, 0, 1},
  {&__pyx_n_u_press_key, __pyx_k_press_key, sizeof(__pyx_k_press_key), 0, 1, 0, 1},
  {&__pyx_n_u_press_menu_button, __pyx_k_press_menu_button, sizeof(__pyx_k_press_menu_button), 0, 1, 0, 1},
  {&__pyx_n_s_print, __pyx_k_print, sizeof(__pyx_k_print), 0, 0, 1, 1},
  {&__pyx_n_u_pulse_detail_only, __pyx_k_pulse_detail_only, sizeof(__pyx_k_pulse_detail_only), 0, 1, 0, 1},
  {&__pyx_n_u_pulse_exclusive, __pyx_k_pulse_exclusive, sizeof(__pyx_k_pulse_exclusive), 0, 1, 0, 1},
  {&__pyx_n_u_pulse_fade_in, __pyx_k_pulse_fade_in, sizeof(__pyx_k_pulse_fade_in), 0, 1, 0, 1},
  {&__pyx_n_u_pulse_fade_out, __pyx_k_pulse_fade_out, sizeof(__pyx_k_pulse_fade_out), 0, 1, 0, 1},
  {&__pyx_n_u_pulse_hold, __pyx_k_pulse_hold, sizeof(__pyx_k_pulse_hold), 0, 1, 0, 1},
  {&__pyx_n_u_pulse_main_only, __pyx_k_pulse_main_only, sizeof(__pyx_k_pulse_main_only), 0, 1, 0, 1},
  {&__pyx_n_u_pulse_mode, __pyx_k_pulse_mode, sizeof(__pyx_k_pulse_mode), 0, 1, 0, 1},
  {&__pyx_n_u_pulse_target_type, __pyx_k_pulse_target_type, sizeof(__pyx_k_pulse_target_type), 0, 1, 0, 1},
  {&__pyx_n_u_pulsing_animation_randomize, __pyx_k_pulsing_animation_randomize, sizeof(__pyx_k_pulsing_animation_randomize), 0, 1, 0, 1},
  {&__pyx_n_u_pulsing_animation_speed, __pyx_k_pulsing_animation_speed, sizeof(__pyx_k_pulsing_animation_speed), 0, 1, 0, 1},
  {&__pyx_n_s_pygd, __pyx_k_pygd, sizeof(__pyx_k_pygd), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_n_s_qualname, __pyx_k_qualname, sizeof(__pyx_k_qualname), 0, 0, 1, 1},
  {&__pyx_n_s_r, __pyx_k_r, sizeof(__pyx_k_r), 0, 0, 1, 1},
  {&__pyx_n_s_random, __pyx_k_random, sizeof(__pyx_k_random), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_read, __pyx_k_read, sizeof(__pyx_k_read), 0, 0, 1, 1},
  {&__pyx_n_u_red, __pyx_k_red, sizeof(__pyx_k_red), 0, 1, 0, 1},
  {&__pyx_n_s_reduce, __pyx_k_reduce, sizeof(__pyx_k_reduce), 0, 0, 1, 1},
  {&__pyx_n_s_reduce_cython, __pyx_k_reduce_cython, sizeof(__pyx_k_reduce_cython), 0, 0, 1, 1},
  {&__pyx_n_s_reduce_ex, __pyx_k_reduce_ex, sizeof(__pyx_k_reduce_ex), 0, 0, 1, 1},
  {&__pyx_n_s_reinterpret_cast, __pyx_k_reinterpret_cast, sizeof(__pyx_k_reinterpret_cast), 0, 0, 1, 1},
  {&__pyx_n_u_remove_objects, __pyx_k_remove_objects, sizeof(__pyx_k_remove_objects), 0, 1, 0, 1},
  {&__pyx_n_s_replace, __pyx_k_replace, sizeof(__pyx_k_replace), 0, 0, 1, 1},
  {&__pyx_n_s_repr, __pyx_k_repr, sizeof(__pyx_k_repr), 0, 0, 1, 1},
  {&__pyx_n_u_requestedStars, __pyx_k_requestedStars, sizeof(__pyx_k_requestedStars), 0, 1, 0, 1},
  {&__pyx_n_s_requests, __pyx_k_requests, sizeof(__pyx_k_requests), 0, 0, 1, 1},
  {&__pyx_n_s_rot, __pyx_k_rot, sizeof(__pyx_k_rot), 0, 0, 1, 1},
  {&__pyx_n_s_rotate, __pyx_k_rotate, sizeof(__pyx_k_rotate), 0, 0, 1, 1},
  {&__pyx_n_s_rotateTo, __pyx_k_rotateTo, sizeof(__pyx_k_rotateTo), 0, 0, 1, 1},
  {&__pyx_n_s_rotation, __pyx_k_rotation, sizeof(__pyx_k_rotation), 0, 0, 1, 1},
  {&__pyx_n_u_rotation, __pyx_k_rotation, sizeof(__pyx_k_rotation), 0, 1, 0, 1},
  {&__pyx_n_u_rotation_degrees, __pyx_k_rotation_degrees, sizeof(__pyx_k_rotation_degrees), 0, 1, 0, 1},
  {&__pyx_n_u_rotation_lock, __pyx_k_rotation_lock, sizeof(__pyx_k_rotation_lock), 0, 1, 0, 1},
  {&__pyx_n_u_rotation_times_360, __pyx_k_rotation_times_360, sizeof(__pyx_k_rotation_times_360), 0, 1, 0, 1},
  {&__pyx_n_s_scaleTo, __pyx_k_scaleTo, sizeof(__pyx_k_scaleTo), 0, 0, 1, 1},
  {&__pyx_n_u_secret, __pyx_k_secret, sizeof(__pyx_k_secret), 0, 1, 0, 1},
  {&__pyx_n_u_seed, __pyx_k_seed, sizeof(__pyx_k_seed), 0, 1, 0, 1},
  {&__pyx_n_s_seed2, __pyx_k_seed2, sizeof(__pyx_k_seed2), 0, 0, 1, 1},
  {&__pyx_n_u_seed2, __pyx_k_seed2, sizeof(__pyx_k_seed2), 0, 1, 0, 1},
  {&__pyx_n_u_select_objects, __pyx_k_select_objects, sizeof(__pyx_k_select_objects), 0, 1, 0, 1},
  {&__pyx_n_s_selection, __pyx_k_selection, sizeof(__pyx_k_selection), 0, 0, 1, 1},
  {&__pyx_n_s_self, __pyx_k_self, sizeof(__pyx_k_self), 0, 0, 1, 1},
  {&__pyx_n_u_self, __pyx_k_self, sizeof(__pyx_k_self), 0, 1, 0, 1},
  {&__pyx_kp_s_self_inst_cannot_be_converted_to, __pyx_k_self_inst_cannot_be_converted_to, sizeof(__pyx_k_self_inst_cannot_be_converted_to), 0, 0, 1, 0},
  {&__pyx_n_s_send, __pyx_k_send, sizeof(__pyx_k_send), 0, 0, 1, 1},
  {&__pyx_n_s_setCoords, __pyx_k_setCoords, sizeof(__pyx_k_setCoords), 0, 0, 1, 1},
  {&__pyx_n_s_setitem, __pyx_k_setitem, sizeof(__pyx_k_setitem), 0, 0, 1, 1},
  {&__pyx_n_s_setstate, __pyx_k_setstate, sizeof(__pyx_k_setstate), 0, 0, 1, 1},
  {&__pyx_n_s_setstate_cython, __pyx_k_setstate_cython, sizeof(__pyx_k_setstate_cython), 0, 0, 1, 1},
  {&__pyx_n_s_sha1, __pyx_k_sha1, sizeof(__pyx_k_sha1), 0, 0, 1, 1},
  {&__pyx_n_u_shake_interval, __pyx_k_shake_interval, sizeof(__pyx_k_shake_interval), 0, 1, 0, 1},
  {&__pyx_n_u_shake_strength, __pyx_k_shake_strength, sizeof(__pyx_k_shake_strength), 0, 1, 0, 1},
  {&__pyx_n_s_size, __pyx_k_size, sizeof(__pyx_k_size), 0, 0, 1, 1},
  {&__pyx_n_u_size, __pyx_k_size, sizeof(__pyx_k_size), 0, 1, 0, 1},
  {&__pyx_n_u_songID, __pyx_k_songID, sizeof(__pyx_k_songID), 0, 1, 0, 1},
  {&__pyx_n_u_song_offset, __pyx_k_song_offset, sizeof(__pyx_k_song_offset), 0, 1, 0, 1},
  {&__pyx_n_s_songid, __pyx_k_songid, sizeof(__pyx_k_songid), 0, 0, 1, 1},
  {&__pyx_n_s_sortX_locals_lambda, __pyx_k_sortX_locals_lambda, sizeof(__pyx_k_sortX_locals_lambda), 0, 0, 1, 1},
  {&__pyx_n_s_sorted, __pyx_k_sorted, sizeof(__pyx_k_sorted), 0, 0, 1, 1},
  {&__pyx_n_u_spawn_delay, __pyx_k_spawn_delay, sizeof(__pyx_k_spawn_delay), 0, 1, 0, 1},
  {&__pyx_n_u_spawn_editor_disable, __pyx_k_spawn_editor_disable, sizeof(__pyx_k_spawn_editor_disable), 0, 1, 0, 1},
  {&__pyx_n_u_spawn_triggered, __pyx_k_spawn_triggered, sizeof(__pyx_k_spawn_triggered), 0, 1, 0, 1},
  {&__pyx_n_u_speed, __pyx_k_speed, sizeof(__pyx_k_speed), 0, 1, 0, 1},
  {&__pyx_n_s_split, __pyx_k_split, sizeof(__pyx_k_split), 0, 0, 1, 1},
  {&__pyx_n_s_sqrt, __pyx_k_sqrt, sizeof(__pyx_k_sqrt), 0, 0, 1, 1},
  {&__pyx_n_s_stars, __pyx_k_stars, sizeof(__pyx_k_stars), 0, 0, 1, 1},
  {&__pyx_n_s_starting, __pyx_k_starting, sizeof(__pyx_k_starting), 0, 0, 1, 1},
  {&__pyx_n_s_staticmethod, __pyx_k_staticmethod, sizeof(__pyx_k_staticmethod), 0, 0, 1, 1},
  {&__pyx_n_s_str, __pyx_k_str, sizeof(__pyx_k_str), 0, 0, 1, 1},
  {&__pyx_n_u_str, __pyx_k_str, sizeof(__pyx_k_str), 0, 1, 0, 1},
  {&__pyx_n_s_str_2, __pyx_k_str_2, sizeof(__pyx_k_str_2), 0, 0, 1, 1},
  {&__pyx_n_s_stri, __pyx_k_stri, sizeof(__pyx_k_stri), 0, 0, 1, 1},
  {&__pyx_n_s_strip, __pyx_k_strip, sizeof(__pyx_k_strip), 0, 0, 1, 1},
  {&__pyx_n_s_stuff, __pyx_k_stuff, sizeof(__pyx_k_stuff), 0, 0, 1, 1},
  {&__pyx_n_u_substract_count, __pyx_k_substract_count, sizeof(__pyx_k_substract_count), 0, 1, 0, 1},
  {&__pyx_n_s_t, __pyx_k_t, sizeof(__pyx_k_t), 0, 0, 1, 1},
  {&__pyx_n_u_target_color_id, __pyx_k_target_color_id, sizeof(__pyx_k_target_color_id), 0, 1, 0, 1},
  {&__pyx_n_u_target_group_id, __pyx_k_target_group_id, sizeof(__pyx_k_target_group_id), 0, 1, 0, 1},
  {&__pyx_n_u_teleportation_yellow_distance, __pyx_k_teleportation_yellow_distance, sizeof(__pyx_k_teleportation_yellow_distance), 0, 1, 0, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_text, __pyx_k_text, sizeof(__pyx_k_text), 0, 0, 1, 1},
  {&__pyx_n_u_text, __pyx_k_text, sizeof(__pyx_k_text), 0, 1, 0, 1},
  {&__pyx_n_s_thread_async, __pyx_k_thread_async, sizeof(__pyx_k_thread_async), 0, 0, 1, 1},
  {&__pyx_n_s_thread_async_locals_k, __pyx_k_thread_async_locals_k, sizeof(__pyx_k_thread_async_locals_k), 0, 0, 1, 1},
  {&__pyx_n_s_thread_async_locals_k_locals_lam, __pyx_k_thread_async_locals_k_locals_lam, sizeof(__pyx_k_thread_async_locals_k_locals_lam), 0, 0, 1, 1},
  {&__pyx_n_s_thread_sync, __pyx_k_thread_sync, sizeof(__pyx_k_thread_sync), 0, 0, 1, 1},
  {&__pyx_n_s_thread_sync_locals_k, __pyx_k_thread_sync_locals_k, sizeof(__pyx_k_thread_sync_locals_k), 0, 0, 1, 1},
  {&__pyx_n_s_thread_sync_locals_k_locals_why, __pyx_k_thread_sync_locals_k_locals_why, sizeof(__pyx_k_thread_sync_locals_k_locals_why), 0, 0, 1, 1},
  {&__pyx_n_s_threading, __pyx_k_threading, sizeof(__pyx_k_threading), 0, 0, 1, 1},
  {&__pyx_n_s_throw, __pyx_k_throw, sizeof(__pyx_k_throw), 0, 0, 1, 1},
  {&__pyx_n_u_total, __pyx_k_total, sizeof(__pyx_k_total), 0, 1, 0, 1},
  {&__pyx_n_u_touch_dual_mode, __pyx_k_touch_dual_mode, sizeof(__pyx_k_touch_dual_mode), 0, 1, 0, 1},
  {&__pyx_n_u_touch_toggle, __pyx_k_touch_toggle, sizeof(__pyx_k_touch_toggle), 0, 1, 0, 1},
  {&__pyx_n_u_touch_triggered, __pyx_k_touch_triggered, sizeof(__pyx_k_touch_triggered), 0, 1, 0, 1},
  {&__pyx_n_s_twoPlayer, __pyx_k_twoPlayer, sizeof(__pyx_k_twoPlayer), 0, 0, 1, 1},
  {&__pyx_n_u_twoPlayer, __pyx_k_twoPlayer, sizeof(__pyx_k_twoPlayer), 0, 1, 0, 1},
  {&__pyx_n_s_typeinfo, __pyx_k_typeinfo, sizeof(__pyx_k_typeinfo), 0, 0, 1, 1},
  {&__pyx_n_s_unlisted, __pyx_k_unlisted, sizeof(__pyx_k_unlisted), 0, 0, 1, 1},
  {&__pyx_n_u_unlisted, __pyx_k_unlisted, sizeof(__pyx_k_unlisted), 0, 1, 0, 1},
  {&__pyx_n_s_update, __pyx_k_update, sizeof(__pyx_k_update), 0, 0, 1, 1},
  {&__pyx_n_s_uploadLevel, __pyx_k_uploadLevel, sizeof(__pyx_k_uploadLevel), 0, 0, 1, 1},
  {&__pyx_n_s_url, __pyx_k_url, sizeof(__pyx_k_url), 0, 0, 1, 1},
  {&__pyx_n_s_urlencode, __pyx_k_urlencode, sizeof(__pyx_k_urlencode), 0, 0, 1, 1},
  {&__pyx_n_s_urllib, __pyx_k_urllib, sizeof(__pyx_k_urllib), 0, 0, 1, 1},
  {&__pyx_n_s_urllib2, __pyx_k_urllib2, sizeof(__pyx_k_urllib2), 0, 0, 1, 1},
  {&__pyx_n_s_urllib_parse, __pyx_k_urllib_parse, sizeof(__pyx_k_urllib_parse), 0, 0, 1, 1},
  {&__pyx_n_s_urllib_request, __pyx_k_urllib_request, sizeof(__pyx_k_urllib_request), 0, 0, 1, 1},
  {&__pyx_n_s_urlopen, __pyx_k_urlopen, sizeof(__pyx_k_urlopen), 0, 0, 1, 1},
  {&__pyx_n_u_userName, __pyx_k_userName, sizeof(__pyx_k_userName), 0, 1, 0, 1},
  {&__pyx_n_s_username, __pyx_k_username, sizeof(__pyx_k_username), 0, 0, 1, 1},
  {&__pyx_n_u_vehicle, __pyx_k_vehicle, sizeof(__pyx_k_vehicle), 0, 1, 0, 1},
  {&__pyx_n_s_version, __pyx_k_version, sizeof(__pyx_k_version), 0, 0, 1, 1},
  {&__pyx_kp_u_while_True_self__runLoop, __pyx_k_while_True_self__runLoop, sizeof(__pyx_k_while_True_self__runLoop), 0, 1, 0, 0},
  {&__pyx_n_s_why, __pyx_k_why, sizeof(__pyx_k_why), 0, 0, 1, 1},
  {&__pyx_n_u_wt, __pyx_k_wt, sizeof(__pyx_k_wt), 0, 1, 0, 1},
  {&__pyx_n_u_wt2, __pyx_k_wt2, sizeof(__pyx_k_wt2), 0, 1, 0, 1},
  {&__pyx_n_u_ww, __pyx_k_ww, sizeof(__pyx_k_ww), 0, 1, 0, 1},
  {&__pyx_n_s_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
  {&__pyx_n_b_xI25fpAapCQg, __pyx_k_xI25fpAapCQg, sizeof(__pyx_k_xI25fpAapCQg), 0, 0, 0, 1},
  {&__pyx_n_u_x_position, __pyx_k_x_position, sizeof(__pyx_k_x_position), 0, 1, 0, 1},
  {&__pyx_n_s_xor, __pyx_k_xor, sizeof(__pyx_k_xor), 0, 0, 1, 1},
  {&__pyx_n_s_xor_locals_genexpr, __pyx_k_xor_locals_genexpr, sizeof(__pyx_k_xor_locals_genexpr), 0, 0, 1, 1},
  {&__pyx_n_s_xored, __pyx_k_xored, sizeof(__pyx_k_xored), 0, 0, 1, 1},
  {&__pyx_n_s_y, __pyx_k_y, sizeof(__pyx_k_y), 0, 0, 1, 1},
  {&__pyx_n_u_y_position, __pyx_k_y_position, sizeof(__pyx_k_y_position), 0, 1, 0, 1},
  {&__pyx_n_u_z_layer, __pyx_k_z_layer, sizeof(__pyx_k_z_layer), 0, 1, 0, 1},
  {&__pyx_n_u_z_order, __pyx_k_z_order, sizeof(__pyx_k_z_order), 0, 1, 0, 1},
  {&__pyx_n_s_zip, __pyx_k_zip, sizeof(__pyx_k_zip), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_zip = __Pyx_GetBuiltinName(__pyx_n_s_zip); if (!__pyx_builtin_zip) __PYX_ERR(0, 4, __pyx_L1_error)
  __pyx_builtin_staticmethod = __Pyx_GetBuiltinName(__pyx_n_s_staticmethod); if (!__pyx_builtin_staticmethod) __PYX_ERR(0, 64, __pyx_L1_error)
  __pyx_builtin_print = __Pyx_GetBuiltinName(__pyx_n_s_print); if (!__pyx_builtin_print) __PYX_ERR(1, 25, __pyx_L1_error)
  __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_n_s_TypeError); if (!__pyx_builtin_TypeError) __PYX_ERR(2, 2, __pyx_L1_error)
  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_n_s_RuntimeError); if (!__pyx_builtin_RuntimeError) __PYX_ERR(1, 44, __pyx_L1_error)
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) __PYX_ERR(3, 8, __pyx_L1_error)
  __pyx_builtin_IndexError = __Pyx_GetBuiltinName(__pyx_n_s_IndexError); if (!__pyx_builtin_IndexError) __PYX_ERR(3, 20, __pyx_L1_error)
  __pyx_builtin_sorted = __Pyx_GetBuiltinName(__pyx_n_s_sorted); if (!__pyx_builtin_sorted) __PYX_ERR(3, 23, __pyx_L1_error)
  __pyx_builtin_AttributeError = __Pyx_GetBuiltinName(__pyx_n_s_AttributeError); if (!__pyx_builtin_AttributeError) __PYX_ERR(3, 53, __pyx_L1_error)
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(3, 50, __pyx_L1_error)
  __pyx_builtin_chr = __Pyx_GetBuiltinName(__pyx_n_s_chr); if (!__pyx_builtin_chr) __PYX_ERR(0, 37, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 */
  __pyx_tuple_ = PyTuple_Pack(1, __pyx_kp_s_self_inst_cannot_be_converted_to); if (unlikely(!__pyx_tuple_)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "(tree fragment)":4
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_kp_s_self_inst_cannot_be_converted_to); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "main.pyx":34
 *         future = []
 *         err = 0
 *         def why():             # <<<<<<<<<<<<<<
 *             try:
 *                 a = func(*args, **kwargs)
 */
  __pyx_tuple__3 = PyTuple_Pack(2, __pyx_n_s_a, __pyx_n_s_err); if (unlikely(!__pyx_tuple__3)) __PYX_ERR(1, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);
  __pyx_codeobj__4 = (PyObject*)__Pyx_PyCode_New(0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__3, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_main_p, __pyx_n_s_why, 34, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__4)) __PYX_ERR(1, 34, __pyx_L1_error)

  /* "main.pyx":44
 *         while len(future)==0:
 *             if err==1:
 *                 raise RuntimeError("Function failed")             # <<<<<<<<<<<<<<
 *             continue
 *         return future[0]
 */
  __pyx_tuple__5 = PyTuple_Pack(1, __pyx_kp_u_Function_failed); if (unlikely(!__pyx_tuple__5)) __PYX_ERR(1, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);

  /* "main.pyx":29
 * 
 * def thread_sync(func):
 *     def k(*args, **kwargs):             # <<<<<<<<<<<<<<
 *         if (onMainThread()):
 *             return func(*args, **kwargs)
 */
  __pyx_tuple__6 = PyTuple_Pack(6, __pyx_n_s_args, __pyx_n_s_kwargs, __pyx_n_s_future, __pyx_n_s_err, __pyx_n_s_why, __pyx_n_s_why); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(1, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);
  __pyx_codeobj__7 = (PyObject*)__Pyx_PyCode_New(0, 0, 6, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS|CO_VARKEYWORDS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__6, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_main_p, __pyx_n_s_k, 29, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__7)) __PYX_ERR(1, 29, __pyx_L1_error)

  /* "main.pyx":50
 * 
 * def thread_async(func):
 *     def k(*args, **kwargs):             # <<<<<<<<<<<<<<
 *         if (onMainThread()):
 *             return func(*args, **kwargs)
 */
  __pyx_tuple__8 = PyTuple_Pack(2, __pyx_n_s_args, __pyx_n_s_kwargs); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(1, 50, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);
  __pyx_codeobj__9 = (PyObject*)__Pyx_PyCode_New(0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS|CO_VARKEYWORDS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__8, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_main_p, __pyx_n_s_k, 50, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__9)) __PYX_ERR(1, 50, __pyx_L1_error)

  /* "../../pyedit_engine/cy/GDArray.pyx":8
 *     cdef CCArray* arr_inst(self):
 *         if  <long>self.inst == 0L:
 *             raise ValueError("Array got deallocated")             # <<<<<<<<<<<<<<
 *         return <CCArray*>self.inst
 * 
 */
  __pyx_tuple__10 = PyTuple_Pack(1, __pyx_kp_u_Array_got_deallocated); if (unlikely(!__pyx_tuple__10)) __PYX_ERR(3, 8, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);

  /* "../../pyedit_engine/cy/GDArray.pyx":18
 *     def __getitem__(self, e):
 *         if type(e) != int:
 *             raise ValueError("Invalid index")             # <<<<<<<<<<<<<<
 *         if e >= len(self):
 *             raise IndexError("CCArray index out of range")
 */
  __pyx_tuple__11 = PyTuple_Pack(1, __pyx_kp_u_Invalid_index); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(3, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "../../pyedit_engine/cy/GDArray.pyx":20
 *             raise ValueError("Invalid index")
 *         if e >= len(self):
 *             raise IndexError("CCArray index out of range")             # <<<<<<<<<<<<<<
 *         return PyCCObject().fromPtr(self.arr_inst().objectAtIndex(e)).reinterpret_cast()
 *     def sortBy(self, toSort):
 */
  __pyx_tuple__12 = PyTuple_Pack(1, __pyx_kp_u_CCArray_index_out_of_range); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(3, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);

  /* "../../pyedit_engine/cy/GDArray.pyx":29
 *     def init(self, stuff=[]):
 *         if not issubclass(type(stuff), PyCCArray) and type(stuff) != list:
 *             raise ValueError("Input must be a list or subclass of PyCCArray")             # <<<<<<<<<<<<<<
 * 
 *         if type(stuff) != list:
 */
  __pyx_tuple__14 = PyTuple_Pack(1, __pyx_kp_u_Input_must_be_a_list_or_subclass); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(3, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__15 = PyTuple_Pack(1, __pyx_kp_s_self_inst_cannot_be_converted_to); if (unlikely(!__pyx_tuple__15)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__15);
  __Pyx_GIVEREF(__pyx_tuple__15);

  /* "(tree fragment)":4
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__16 = PyTuple_Pack(1, __pyx_kp_s_self_inst_cannot_be_converted_to); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__18 = PyTuple_Pack(1, __pyx_kp_s_self_inst_cannot_be_converted_to); if (unlikely(!__pyx_tuple__18)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);

  /* "(tree fragment)":4
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__19 = PyTuple_Pack(1, __pyx_kp_s_self_inst_cannot_be_converted_to); if (unlikely(!__pyx_tuple__19)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__19);
  __Pyx_GIVEREF(__pyx_tuple__19);

  /* "../../pyedit_engine/cy/EditorUI.pyx":9
 *     cdef EditorUI* edit_inst(self):
 *         if makeUsable(self.inst) == 0:
 *             raise RuntimeError("Unable to fetch editor")             # <<<<<<<<<<<<<<
 *         return <EditorUI*>self.inst
 * 
 */
  __pyx_tuple__20 = PyTuple_Pack(1, __pyx_kp_u_Unable_to_fetch_editor); if (unlikely(!__pyx_tuple__20)) __PYX_ERR(4, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__20);
  __Pyx_GIVEREF(__pyx_tuple__20);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__21 = PyTuple_Pack(1, __pyx_kp_s_self_inst_cannot_be_converted_to); if (unlikely(!__pyx_tuple__21)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__21);
  __Pyx_GIVEREF(__pyx_tuple__21);

  /* "(tree fragment)":4
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__22 = PyTuple_Pack(1, __pyx_kp_s_self_inst_cannot_be_converted_to); if (unlikely(!__pyx_tuple__22)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__22);
  __Pyx_GIVEREF(__pyx_tuple__22);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__23 = PyTuple_Pack(1, __pyx_kp_s_self_inst_cannot_be_converted_to); if (unlikely(!__pyx_tuple__23)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__23);
  __Pyx_GIVEREF(__pyx_tuple__23);

  /* "(tree fragment)":4
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.inst cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__24 = PyTuple_Pack(1, __pyx_kp_s_self_inst_cannot_be_converted_to); if (unlikely(!__pyx_tuple__24)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__24);
  __Pyx_GIVEREF(__pyx_tuple__24);

  /* "../../pyedit_engine/cy/PyLvl.pyx":32
 * 	d.update(starting)
 * 
 * 	r = requests.post("http://www.boomlings.com/database/getGJUsers20.php",data=d)             # <<<<<<<<<<<<<<
 * 
 * 	try: return r.text.split(":")[21]
 */
  __pyx_tuple__26 = PyTuple_Pack(1, __pyx_kp_u_http_www_boomlings_com_database); if (unlikely(!__pyx_tuple__26)) __PYX_ERR(0, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);

  /* "../../pyedit_engine/cy/PyLvl.pyx":35
 * 
 * 	try: return r.text.split(":")[21]
 * 	except: raise ValueError("Incorrect Username")             # <<<<<<<<<<<<<<
 * def xor(data, key):
 * 	xored = ''.join(chr(ord(x) ^ ord(y)) for (x,y) in zip(data, cycle(key)))
 */
  __pyx_tuple__28 = PyTuple_Pack(1, __pyx_kp_u_Incorrect_Username); if (unlikely(!__pyx_tuple__28)) __PYX_ERR(0, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__28);
  __Pyx_GIVEREF(__pyx_tuple__28);

  /* "../../pyedit_engine/cy/PyLvl.pyx":67
 * 	def blockFromString(stri):
 * 		a = stri.split(',')
 * 		evens = a[1::2]             # <<<<<<<<<<<<<<
 * 		odds = a[0::2]
 * 		jso = {}
 */
  __pyx_slice__30 = PySlice_New(__pyx_int_1, Py_None, __pyx_int_2); if (unlikely(!__pyx_slice__30)) __PYX_ERR(0, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__30);
  __Pyx_GIVEREF(__pyx_slice__30);

  /* "../../pyedit_engine/cy/PyLvl.pyx":68
 * 		a = stri.split(',')
 * 		evens = a[1::2]
 * 		odds = a[0::2]             # <<<<<<<<<<<<<<
 * 		jso = {}
 * 		for x in range(len(odds)):
 */
  __pyx_slice__31 = PySlice_New(__pyx_int_0, Py_None, __pyx_int_2); if (unlikely(!__pyx_slice__31)) __PYX_ERR(0, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__31);
  __Pyx_GIVEREF(__pyx_slice__31);

  /* "../../pyedit_engine/cy/PyLvl.pyx":149
 * 		dictionary = {"accountID":getAccountID(username),"gjp":xor(password,"37526"),"userName":username,"levelID":levelid,"levelName":self.name,"levelDesc":base64.b64encode(description.encode()),"levelVersion":str(version),"levelLength":"0","audioTrack":str(audiotrack),"auto":"0","password":str(lpassword),"original":"0","twoPlayer":str(twoPlayer),"songID":str(songid),"objects":str(len(self.blocks)),"coins":coins,"requestedStars":str(stars),"unlisted":str(unlisted),"wt":"13","wt2":"0","ldm":"0","seed":"BBUEIHF1rd","extraString":"0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0","seed2":seed2,"levelString":self.encoded,"secret":"Wmfd2893gb7","levelInfo":"H4sIAAAAAAAAEzOwNrQ20DMwsrY21DMztbYGAJp7I8gQAAAA"}
 * 		dictionary.update(starting)
 * 		return urlopen(url,urlencode(dictionary).replace('%3D','=')).read().decode()             # <<<<<<<<<<<<<<
 * 	def __str__(self):
 * 		return str(self.header) + ';' + ';'.join([str(x) for x in self.blocks])
 */
  __pyx_tuple__34 = PyTuple_Pack(2, __pyx_kp_u_3D, __pyx_kp_u__33); if (unlikely(!__pyx_tuple__34)) __PYX_ERR(0, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__34);
  __Pyx_GIVEREF(__pyx_tuple__34);

  /* "../../pyedit_engine/cy/PyLvl.pyx":154
 * 	def encodee(self):
 * 		data = base64.b64encode((gzip.compress(self.__str__().encode(),compresslevel=6)))
 * 		self.encoded = data.replace(data[4:13],b"AAAAAAAAE").replace(b"+",b"-").replace(b"/",b"_").decode()             # <<<<<<<<<<<<<<
 * def getSong(lid):
 * 		return requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[49]
 */
  __pyx_slice__36 = PySlice_New(__pyx_int_4, __pyx_int_13, Py_None); if (unlikely(!__pyx_slice__36)) __PYX_ERR(0, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__36);
  __Pyx_GIVEREF(__pyx_slice__36);
  __pyx_tuple__39 = PyTuple_Pack(2, __pyx_kp_b__37, __pyx_kp_b__38); if (unlikely(!__pyx_tuple__39)) __PYX_ERR(0, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__39);
  __Pyx_GIVEREF(__pyx_tuple__39);
  __pyx_tuple__42 = PyTuple_Pack(2, __pyx_kp_b__40, __pyx_n_b__41); if (unlikely(!__pyx_tuple__42)) __PYX_ERR(0, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__42);
  __Pyx_GIVEREF(__pyx_tuple__42);

  /* "../../pyedit_engine/cy/PyLvl.pyx":161
 * 	lst = lstr.split(";")
 * 	a.header = lst[0]
 * 	for i in lst[1:-1]:             # <<<<<<<<<<<<<<
 * 		a.blocks.append(Block.blockFromString(i))
 * 	return a
 */
  __pyx_slice__43 = PySlice_New(__pyx_int_1, __pyx_int_neg_1, Py_None); if (unlikely(!__pyx_slice__43)) __PYX_ERR(0, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__43);
  __Pyx_GIVEREF(__pyx_slice__43);

  /* "../../pyedit_engine/cy/PyEvent.pyx":46
 * 			import pygd
 * 			pygd.alert("Error", "Invalid event handler {}".format(handler), "Ok")
 * 			raise ValueError("no")             # <<<<<<<<<<<<<<
 * 
 * 	def get_events(self):
 */
  __pyx_tuple__44 = PyTuple_Pack(1, __pyx_n_u_no); if (unlikely(!__pyx_tuple__44)) __PYX_ERR(6, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__44);
  __Pyx_GIVEREF(__pyx_tuple__44);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__45 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__45)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__45);
  __Pyx_GIVEREF(__pyx_tuple__45);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__46 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__46)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__46);
  __Pyx_GIVEREF(__pyx_tuple__46);

  /* "main.pyx":28
 *             return self
 * 
 * def thread_sync(func):             # <<<<<<<<<<<<<<
 *     def k(*args, **kwargs):
 *         if (onMainThread()):
 */
  __pyx_tuple__47 = PyTuple_Pack(3, __pyx_n_s_func, __pyx_n_s_k, __pyx_n_s_k); if (unlikely(!__pyx_tuple__47)) __PYX_ERR(1, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__47);
  __Pyx_GIVEREF(__pyx_tuple__47);
  __pyx_codeobj__48 = (PyObject*)__Pyx_PyCode_New(1, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__47, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_main_p, __pyx_n_s_thread_sync, 28, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__48)) __PYX_ERR(1, 28, __pyx_L1_error)

  /* "main.pyx":49
 *     return k
 * 
 * def thread_async(func):             # <<<<<<<<<<<<<<
 *     def k(*args, **kwargs):
 *         if (onMainThread()):
 */
  __pyx_tuple__49 = PyTuple_Pack(3, __pyx_n_s_func, __pyx_n_s_k, __pyx_n_s_k); if (unlikely(!__pyx_tuple__49)) __PYX_ERR(1, 49, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__49);
  __Pyx_GIVEREF(__pyx_tuple__49);
  __pyx_codeobj__50 = (PyObject*)__Pyx_PyCode_New(1, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__49, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_main_p, __pyx_n_s_thread_async, 49, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__50)) __PYX_ERR(1, 49, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":13
 * 	import urllib2
 * from math import sqrt
 * def makeSeed(encoded):             # <<<<<<<<<<<<<<
 * 	if len(encoded)< 49:
 * 		seed2 = encoded
 */
  __pyx_tuple__52 = PyTuple_Pack(3, __pyx_n_s_encoded, __pyx_n_s_seed2, __pyx_n_s_i); if (unlikely(!__pyx_tuple__52)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__52);
  __Pyx_GIVEREF(__pyx_tuple__52);
  __pyx_codeobj__53 = (PyObject*)__Pyx_PyCode_New(1, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__52, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_makeSeed, 13, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__53)) __PYX_ERR(0, 13, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":23
 * 			i+=1
 * 	return xor(hashlib.sha1(seed2.encode()+b"xI25fpAapCQg").hexdigest(),"41274")
 * def urlopen(url,p):             # <<<<<<<<<<<<<<
 * 	t = urllib2.Request(url,p.encode())
 * 	return urllib2.urlopen(t)
 */
  __pyx_tuple__54 = PyTuple_Pack(3, __pyx_n_s_url, __pyx_n_s_p, __pyx_n_s_t); if (unlikely(!__pyx_tuple__54)) __PYX_ERR(0, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__54);
  __Pyx_GIVEREF(__pyx_tuple__54);
  __pyx_codeobj__55 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__54, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_urlopen, 23, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__55)) __PYX_ERR(0, 23, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":27
 * 	return urllib2.urlopen(t)
 * starting = {"gameVersion":"21","binaryVersion":"35","gdw":"0"}
 * def getAccountID(username):             # <<<<<<<<<<<<<<
 * 	diction = {"str":username,"total":"0","page":"0","secret":"Wmfd2893gb7"}
 * 	d = dict(diction)
 */
  __pyx_tuple__56 = PyTuple_Pack(4, __pyx_n_s_username, __pyx_n_s_diction, __pyx_n_s_d, __pyx_n_s_r); if (unlikely(!__pyx_tuple__56)) __PYX_ERR(0, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__56);
  __Pyx_GIVEREF(__pyx_tuple__56);
  __pyx_codeobj__57 = (PyObject*)__Pyx_PyCode_New(1, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__56, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_getAccountID, 27, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__57)) __PYX_ERR(0, 27, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":36
 * 	try: return r.text.split(":")[21]
 * 	except: raise ValueError("Incorrect Username")
 * def xor(data, key):             # <<<<<<<<<<<<<<
 * 	xored = ''.join(chr(ord(x) ^ ord(y)) for (x,y) in zip(data, cycle(key)))
 * 	return base64.encodestring(xored.encode()).strip()
 */
  __pyx_tuple__58 = PyTuple_Pack(5, __pyx_n_s_data, __pyx_n_s_key, __pyx_n_s_xored, __pyx_n_s_genexpr, __pyx_n_s_genexpr); if (unlikely(!__pyx_tuple__58)) __PYX_ERR(0, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__58);
  __Pyx_GIVEREF(__pyx_tuple__58);
  __pyx_codeobj__59 = (PyObject*)__Pyx_PyCode_New(2, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__58, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_xor, 36, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__59)) __PYX_ERR(0, 36, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":42
 * 	items = {"1_9_color":"19","green":"8","player_color_1":"15","player_color_2":"16","text":"31","rotation_times_360":"69","target_group_id":"51","z_layer":"24","instant_count_comparison":"88","copy_opacity":"60","custom_rotation_speed":"97","substract_count":"78","pulse_target_type":"52","move_target_enabled":"100","count":"77","spawn_delay":"63","color1":"21","pulse_exclusive":"86","color2":"22","rotation":"6","group_ids":"57","follow_player_y_offset":"92","move_trigger_9_units":"29","multi_trigger":"87","rotation_lock":"70","red":"7","group_parent":"34","dont_enter":"67","touch_dual_mode":"89","spawn_triggered":"62","is_flipped_horizontal":"4","duration":"10","blue":"9","activate_group":"56","dynamic_block":"93","follow_player_y_delay":"91","move_lock_to_player_y":"59","move_lock_to_player_x":"58","target_color_id":"23","follow_y_mod":"73","follow_player_y_speed":"90","is_flipped_vertical":"5","touch_toggle":"82","item_id":"80","glow_disabled":"96","copied_color_hsv_values":"49","hold_mode":"81","pickup_mode":"79","editor_layer_2":"61","editor_layer_1":"20","pulse_detail_only":"66","hsv_enabled_1":"41","hsv_enabled_2":"42","shake_strength":"75","is_active_trigger_type":"36","move_target_pos_coordinates":"101","portal_checked":"13","teleportation_yellow_distance":"54","blending":"17","pulse_hold":"46","pulsing_animation_randomize":"106","size":"32","disable_rotation":"98","collision_block_b_id":"95","high_detail":"103","rotation_degrees":"68","pulse_main_only":"65","pulse_fade_out":"47","x_position":"2","z_order":"25","dont_fade":"64","easing_rate":"85","hsv_values_1":"43","hsv_values_2":"44","follow_x_mod":"72","pulse_fade_in":"45","spawn_editor_disable":"102","move_trigger_x_units":"28","blockid":"1","linked_group":"108","follow_player_y_max_speed":"105","touch_triggered":"11","opacity":"35","copied_color_id":"50","pulse_mode":"48","y_position":"3","shake_interval":"84","pulsing_animation_speed":"107","count_multi_activate":"99","easing":"30","follow_group_id":"71"}
 * 	otheritems = {v: k for k, v in items.items()}
 * 	def __init__(self,**kwargs):             # <<<<<<<<<<<<<<
 * 		self.levelstring = ""
 * 		self.json = {"blockid":str(kwargs.get("blockid")),"x_position":str(kwargs.get("x_position")),"y_position":str(kwargs.get("y_position"))}
 */
  __pyx_tuple__60 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_kwargs, __pyx_n_s_i); if (unlikely(!__pyx_tuple__60)) __PYX_ERR(0, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__60);
  __Pyx_GIVEREF(__pyx_tuple__60);
  __pyx_codeobj__61 = (PyObject*)__Pyx_PyCode_New(1, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARKEYWORDS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__60, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_init_2, 42, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__61)) __PYX_ERR(0, 42, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":46
 * 		self.json = {"blockid":str(kwargs.get("blockid")),"x_position":str(kwargs.get("x_position")),"y_position":str(kwargs.get("y_position"))}
 * 		for i in kwargs: self.json[i] = kwargs[i]
 * 	def __getitem__(self,e):             # <<<<<<<<<<<<<<
 * 		if e in self.json:
 * 			return self.json[e]
 */
  __pyx_tuple__62 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_e); if (unlikely(!__pyx_tuple__62)) __PYX_ERR(0, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__62);
  __Pyx_GIVEREF(__pyx_tuple__62);
  __pyx_codeobj__63 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__62, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_getitem, 46, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__63)) __PYX_ERR(0, 46, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":51
 * 		else:
 * 			return '0'
 * 	def __setitem__(self,e,f):             # <<<<<<<<<<<<<<
 * 		self.json[e] = f
 * 	def __str__(self):
 */
  __pyx_tuple__64 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_e, __pyx_n_s_f); if (unlikely(!__pyx_tuple__64)) __PYX_ERR(0, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__64);
  __Pyx_GIVEREF(__pyx_tuple__64);
  __pyx_codeobj__65 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__64, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_setitem, 51, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__65)) __PYX_ERR(0, 51, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":53
 * 	def __setitem__(self,e,f):
 * 		self.json[e] = f
 * 	def __str__(self):             # <<<<<<<<<<<<<<
 * 		ar = []
 * 		for i in self.json:
 */
  __pyx_tuple__66 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_ar, __pyx_n_s_i); if (unlikely(!__pyx_tuple__66)) __PYX_ERR(0, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__66);
  __Pyx_GIVEREF(__pyx_tuple__66);
  __pyx_codeobj__67 = (PyObject*)__Pyx_PyCode_New(1, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__66, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_str_2, 53, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__67)) __PYX_ERR(0, 53, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":59
 * 			ar.append(str(self.json[i]))
 * 		return ','.join(ar)
 * 	def change(self,**kwargs):             # <<<<<<<<<<<<<<
 * 		a = Block(**self.json)
 * 		for i in kwargs:
 */
  __pyx_tuple__68 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_kwargs, __pyx_n_s_a, __pyx_n_s_i); if (unlikely(!__pyx_tuple__68)) __PYX_ERR(0, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__68);
  __Pyx_GIVEREF(__pyx_tuple__68);
  __pyx_codeobj__69 = (PyObject*)__Pyx_PyCode_New(1, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARKEYWORDS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__68, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_change, 59, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__69)) __PYX_ERR(0, 59, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":65
 * 		return a
 * 	@staticmethod
 * 	def blockFromString(stri):             # <<<<<<<<<<<<<<
 * 		a = stri.split(',')
 * 		evens = a[1::2]
 */
  __pyx_tuple__70 = PyTuple_Pack(8, __pyx_n_s_stri, __pyx_n_s_a, __pyx_n_s_evens, __pyx_n_s_odds, __pyx_n_s_jso, __pyx_n_s_x, __pyx_n_s_i, __pyx_n_s_bloc); if (unlikely(!__pyx_tuple__70)) __PYX_ERR(0, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__70);
  __Pyx_GIVEREF(__pyx_tuple__70);
  __pyx_codeobj__71 = (PyObject*)__Pyx_PyCode_New(1, 0, 8, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_blockFromString, 65, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__71)) __PYX_ERR(0, 65, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":76
 * 		bloc = Block(**jso)
 * 		return bloc
 * 	def __repr__(self):             # <<<<<<<<<<<<<<
 * 		return self.__str__()
 * 	def coords(self):
 */
  __pyx_tuple__72 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__72)) __PYX_ERR(0, 76, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__72);
  __Pyx_GIVEREF(__pyx_tuple__72);
  __pyx_codeobj__73 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__72, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_repr, 76, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__73)) __PYX_ERR(0, 76, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":78
 * 	def __repr__(self):
 * 		return self.__str__()
 * 	def coords(self):             # <<<<<<<<<<<<<<
 * 		return [float(self['x_position']), float(self['y_position'])]
 * 	def setCoords(self, x='d', y='d'):
 */
  __pyx_tuple__74 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__74)) __PYX_ERR(0, 78, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__74);
  __Pyx_GIVEREF(__pyx_tuple__74);
  __pyx_codeobj__75 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__74, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_coords, 78, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__75)) __PYX_ERR(0, 78, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":80
 * 	def coords(self):
 * 		return [float(self['x_position']), float(self['y_position'])]
 * 	def setCoords(self, x='d', y='d'):             # <<<<<<<<<<<<<<
 * 		if x!='d':
 * 			self['x_position'] = str(x)
 */
  __pyx_tuple__76 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_x, __pyx_n_s_y); if (unlikely(!__pyx_tuple__76)) __PYX_ERR(0, 80, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__76);
  __Pyx_GIVEREF(__pyx_tuple__76);
  __pyx_codeobj__77 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__76, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_setCoords, 80, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__77)) __PYX_ERR(0, 80, __pyx_L1_error)
  __pyx_tuple__78 = PyTuple_Pack(2, ((PyObject*)__pyx_n_u_d), ((PyObject*)__pyx_n_u_d)); if (unlikely(!__pyx_tuple__78)) __PYX_ERR(0, 80, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__78);
  __Pyx_GIVEREF(__pyx_tuple__78);

  /* "../../pyedit_engine/cy/PyLvl.pyx":85
 * 		if y!='d':
 * 			self['y_position'] = str(y)
 * 	def rotate(self, degrees=0.):             # <<<<<<<<<<<<<<
 * 		rot = float(self['rotation'])
 * 		self['rotation'] = str(rot+degrees)
 */
  __pyx_tuple__79 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_degrees, __pyx_n_s_rot); if (unlikely(!__pyx_tuple__79)) __PYX_ERR(0, 85, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__79);
  __Pyx_GIVEREF(__pyx_tuple__79);
  __pyx_codeobj__80 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__79, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_rotate, 85, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__80)) __PYX_ERR(0, 85, __pyx_L1_error)
  __pyx_tuple__81 = PyTuple_Pack(1, ((PyObject*)__pyx_float_0_)); if (unlikely(!__pyx_tuple__81)) __PYX_ERR(0, 85, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__81);
  __Pyx_GIVEREF(__pyx_tuple__81);

  /* "../../pyedit_engine/cy/PyLvl.pyx":90
 * class Header:
 * 	key = {'mini': 'kA3', 'ground_line': 'kA17', 'background': 'kA6', 'dual': 'kA8', 'fade_out': 'kA16', 'ground': 'kA7', 'song_offset': 'kA13', 'colors': 'kS38', '2_player': 'kA10', 'vehicle': 'kA2', 'font': 'kA18', 'speed': 'kA4', 'fade_in': 'kA15',"nothing":"kA14","idk":"kA9","nutin":"kA11","ww":"kS39"}
 * 	def __init__(self,**kwargs):             # <<<<<<<<<<<<<<
 * 		self.json = {'colors': '1_40_2_125_3_255_11_255_12_255_13_255_4_-1_6_1000_7_1_15_1_18_0_8_1|1_0_2_102_3_255_11_255_12_255_13_255_4_-1_6_1001_7_1_15_1_18_0_8_1|1_0_2_102_3_255_11_255_12_255_13_255_4_-1_6_1009_7_1_15_1_18_0_8_1|1_255_2_255_3_255_11_255_12_255_13_255_4_-1_6_1002_5_1_7_1_15_1_18_0_8_1|1_0_2_255_3_125_11_255_12_255_13_255_4_-1_6_1005_5_1_7_1_15_1_18_0_8_1|1_0_2_255_3_125_11_255_12_255_13_255_4_-1_6_1006_5_1_7_1_15_1_18_0_8_1|1_0_2_0_3_0_11_255_12_255_13_255_4_-1_6_3_7_1_15_1_18_0_8_1|','song_offset': '0','fade_in': '0','fade_out': '0',"nothing":"",'background': '1', 'ground': '0', 'ground_line': '0', 'font': '0',"ww":"0","vehicle":'0','mini':'0','dual':'0',"speed":"0","idk":"0","2_player":"0","nutin":"0"}
 * 		for i in kwargs:
 */
  __pyx_tuple__82 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_kwargs, __pyx_n_s_i); if (unlikely(!__pyx_tuple__82)) __PYX_ERR(0, 90, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__82);
  __Pyx_GIVEREF(__pyx_tuple__82);
  __pyx_codeobj__83 = (PyObject*)__Pyx_PyCode_New(1, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARKEYWORDS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__82, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_init_2, 90, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__83)) __PYX_ERR(0, 90, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":94
 * 		for i in kwargs:
 * 			self.json[i] = kwargs[i]
 * 	def __getitem__(self,e):             # <<<<<<<<<<<<<<
 * 		return self.json[e]
 * 	def __setitem__(self,e,f):
 */
  __pyx_tuple__84 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_e); if (unlikely(!__pyx_tuple__84)) __PYX_ERR(0, 94, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__84);
  __Pyx_GIVEREF(__pyx_tuple__84);
  __pyx_codeobj__85 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__84, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_getitem, 94, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__85)) __PYX_ERR(0, 94, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":96
 * 	def __getitem__(self,e):
 * 		return self.json[e]
 * 	def __setitem__(self,e,f):             # <<<<<<<<<<<<<<
 * 		self.json[e] = str(f)
 * 	def __str__(self):
 */
  __pyx_tuple__86 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_e, __pyx_n_s_f); if (unlikely(!__pyx_tuple__86)) __PYX_ERR(0, 96, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__86);
  __Pyx_GIVEREF(__pyx_tuple__86);
  __pyx_codeobj__87 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__86, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_setitem, 96, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__87)) __PYX_ERR(0, 96, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":98
 * 	def __setitem__(self,e,f):
 * 		self.json[e] = str(f)
 * 	def __str__(self):             # <<<<<<<<<<<<<<
 * 		ar = []
 * 		for i in self.json:
 */
  __pyx_tuple__88 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_ar, __pyx_n_s_i); if (unlikely(!__pyx_tuple__88)) __PYX_ERR(0, 98, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__88);
  __Pyx_GIVEREF(__pyx_tuple__88);
  __pyx_codeobj__89 = (PyObject*)__Pyx_PyCode_New(1, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__88, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_str_2, 98, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__89)) __PYX_ERR(0, 98, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":104
 * 			ar.append(str(self.json[i]))
 * 		return ','.join(ar)
 * 	def __repr__(self):             # <<<<<<<<<<<<<<
 * 		return self.__str__()
 * class Level:
 */
  __pyx_tuple__90 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__90)) __PYX_ERR(0, 104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__90);
  __Pyx_GIVEREF(__pyx_tuple__90);
  __pyx_codeobj__91 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__90, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_repr, 104, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__91)) __PYX_ERR(0, 104, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":108
 * class Level:
 * 	@staticmethod
 * 	def downloadLevel(levelname,lid):             # <<<<<<<<<<<<<<
 * 		return levelString(levelname,gzip.decompress(base64.b64decode(requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[7],'-_')).decode())
 * 	def getfGroupID(self):
 */
  __pyx_tuple__92 = PyTuple_Pack(2, __pyx_n_s_levelname, __pyx_n_s_lid); if (unlikely(!__pyx_tuple__92)) __PYX_ERR(0, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__92);
  __Pyx_GIVEREF(__pyx_tuple__92);
  __pyx_codeobj__93 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__92, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_downloadLevel, 108, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__93)) __PYX_ERR(0, 108, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":110
 * 	def downloadLevel(levelname,lid):
 * 		return levelString(levelname,gzip.decompress(base64.b64decode(requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[7],'-_')).decode())
 * 	def getfGroupID(self):             # <<<<<<<<<<<<<<
 * 		ids = [0]
 * 		for i in self.blocks:
 */
  __pyx_tuple__94 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_ids, __pyx_n_s_i, __pyx_n_s_e); if (unlikely(!__pyx_tuple__94)) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__94);
  __Pyx_GIVEREF(__pyx_tuple__94);
  __pyx_codeobj__95 = (PyObject*)__Pyx_PyCode_New(1, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__94, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_getfGroupID, 110, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__95)) __PYX_ERR(0, 110, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":120
 * 			if ids[i] != ids[i-1]+1:
 * 				return i
 * 	def blocksInGroup(self, groupid):             # <<<<<<<<<<<<<<
 * 		out = []
 * 		for b in self.blocks:
 */
  __pyx_tuple__96 = PyTuple_Pack(5, __pyx_n_s_self, __pyx_n_s_groupid, __pyx_n_s_out, __pyx_n_s_b, __pyx_n_s_gs); if (unlikely(!__pyx_tuple__96)) __PYX_ERR(0, 120, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__96);
  __Pyx_GIVEREF(__pyx_tuple__96);
  __pyx_codeobj__97 = (PyObject*)__Pyx_PyCode_New(2, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__96, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_blocksInGroup, 120, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__97)) __PYX_ERR(0, 120, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":127
 * 				out.append(b)
 * 		return out
 * 	def __init__(self,levelname,**kwargs):             # <<<<<<<<<<<<<<
 * 		self.header = Header(**kwargs)
 * 		self.blocks = []
 */
  __pyx_tuple__98 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_levelname, __pyx_n_s_kwargs); if (unlikely(!__pyx_tuple__98)) __PYX_ERR(0, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__98);
  __Pyx_GIVEREF(__pyx_tuple__98);
  __pyx_codeobj__99 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARKEYWORDS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__98, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_init_2, 127, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__99)) __PYX_ERR(0, 127, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":132
 * 		self.name = levelname
 * 		self.str = ""
 * 	def addBlock(self,a,b,c,**kwargs):             # <<<<<<<<<<<<<<
 * 		aa = {"x_position":b,"y_position":c,"blockid":a}
 * 		b = Block(**dict(aa,**kwargs))
 */
  __pyx_tuple__100 = PyTuple_Pack(6, __pyx_n_s_self, __pyx_n_s_a, __pyx_n_s_b, __pyx_n_s_c, __pyx_n_s_kwargs, __pyx_n_s_aa); if (unlikely(!__pyx_tuple__100)) __PYX_ERR(0, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__100);
  __Pyx_GIVEREF(__pyx_tuple__100);
  __pyx_codeobj__101 = (PyObject*)__Pyx_PyCode_New(4, 0, 6, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARKEYWORDS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__100, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_addBlock, 132, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__101)) __PYX_ERR(0, 132, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":137
 * 		self.blocks.append(b)
 * 		return b
 * 	def addBlocks(self, *args):             # <<<<<<<<<<<<<<
 * 		for i in args:
 * 			if hasattr(i,'coords'):
 */
  __pyx_tuple__102 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_args, __pyx_n_s_i); if (unlikely(!__pyx_tuple__102)) __PYX_ERR(0, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__102);
  __Pyx_GIVEREF(__pyx_tuple__102);
  __pyx_codeobj__103 = (PyObject*)__Pyx_PyCode_New(1, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__102, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_addBlocks, 137, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__103)) __PYX_ERR(0, 137, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":141
 * 			if hasattr(i,'coords'):
 * 				self.blocks.append(i)
 * 	def uploadLevel(self,username,password,description="",stars=0,unlisted=0,lpassword=0,songid=0,audiotrack=1,twoPlayer=0,fromString=False,coins='0',url="http://boomlings.com/database/uploadGJLevel21.php",version=1,levelid=0):             # <<<<<<<<<<<<<<
 * 		if not fromString:
 * 			self.encodee()
 */
  __pyx_tuple__104 = PyTuple_Pack(17, __pyx_n_s_self, __pyx_n_s_username, __pyx_n_s_password, __pyx_n_s_description, __pyx_n_s_stars, __pyx_n_s_unlisted, __pyx_n_s_lpassword, __pyx_n_s_songid, __pyx_n_s_audiotrack, __pyx_n_s_twoPlayer, __pyx_n_s_fromString, __pyx_n_s_coins, __pyx_n_s_url, __pyx_n_s_version, __pyx_n_s_levelid, __pyx_n_s_seed2, __pyx_n_s_dictionary); if (unlikely(!__pyx_tuple__104)) __PYX_ERR(0, 141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__104);
  __Pyx_GIVEREF(__pyx_tuple__104);
  __pyx_codeobj__105 = (PyObject*)__Pyx_PyCode_New(15, 0, 17, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__104, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_uploadLevel, 141, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__105)) __PYX_ERR(0, 141, __pyx_L1_error)
  __pyx_tuple__106 = PyTuple_Pack(12, ((PyObject*)__pyx_kp_u__25), ((PyObject *)__pyx_int_0), ((PyObject *)__pyx_int_0), ((PyObject *)__pyx_int_0), ((PyObject *)__pyx_int_0), ((PyObject *)__pyx_int_1), ((PyObject *)__pyx_int_0), ((PyObject *)Py_False), ((PyObject*)__pyx_kp_u_0), ((PyObject*)__pyx_kp_u_http_boomlings_com_database_uplo), ((PyObject *)__pyx_int_1), ((PyObject *)__pyx_int_0)); if (unlikely(!__pyx_tuple__106)) __PYX_ERR(0, 141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__106);
  __Pyx_GIVEREF(__pyx_tuple__106);

  /* "../../pyedit_engine/cy/PyLvl.pyx":150
 * 		dictionary.update(starting)
 * 		return urlopen(url,urlencode(dictionary).replace('%3D','=')).read().decode()
 * 	def __str__(self):             # <<<<<<<<<<<<<<
 * 		return str(self.header) + ';' + ';'.join([str(x) for x in self.blocks])
 * 	def encodee(self):
 */
  __pyx_tuple__107 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_x); if (unlikely(!__pyx_tuple__107)) __PYX_ERR(0, 150, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__107);
  __Pyx_GIVEREF(__pyx_tuple__107);
  __pyx_codeobj__108 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__107, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_str_2, 150, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__108)) __PYX_ERR(0, 150, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":152
 * 	def __str__(self):
 * 		return str(self.header) + ';' + ';'.join([str(x) for x in self.blocks])
 * 	def encodee(self):             # <<<<<<<<<<<<<<
 * 		data = base64.b64encode((gzip.compress(self.__str__().encode(),compresslevel=6)))
 * 		self.encoded = data.replace(data[4:13],b"AAAAAAAAE").replace(b"+",b"-").replace(b"/",b"_").decode()
 */
  __pyx_tuple__109 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_data); if (unlikely(!__pyx_tuple__109)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__109);
  __Pyx_GIVEREF(__pyx_tuple__109);
  __pyx_codeobj__110 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__109, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_encodee, 152, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__110)) __PYX_ERR(0, 152, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":155
 * 		data = base64.b64encode((gzip.compress(self.__str__().encode(),compresslevel=6)))
 * 		self.encoded = data.replace(data[4:13],b"AAAAAAAAE").replace(b"+",b"-").replace(b"/",b"_").decode()
 * def getSong(lid):             # <<<<<<<<<<<<<<
 * 		return requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[49]
 * def levelString(levelname,lstr):
 */
  __pyx_tuple__111 = PyTuple_Pack(1, __pyx_n_s_lid); if (unlikely(!__pyx_tuple__111)) __PYX_ERR(0, 155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__111);
  __Pyx_GIVEREF(__pyx_tuple__111);
  __pyx_codeobj__112 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__111, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_getSong, 155, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__112)) __PYX_ERR(0, 155, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":157
 * def getSong(lid):
 * 		return requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[49]
 * def levelString(levelname,lstr):             # <<<<<<<<<<<<<<
 * 	a = Level(levelname)
 * 	lst = lstr.split(";")
 */
  __pyx_tuple__113 = PyTuple_Pack(5, __pyx_n_s_levelname, __pyx_n_s_lstr, __pyx_n_s_a, __pyx_n_s_lst, __pyx_n_s_i); if (unlikely(!__pyx_tuple__113)) __PYX_ERR(0, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__113);
  __Pyx_GIVEREF(__pyx_tuple__113);
  __pyx_codeobj__114 = (PyObject*)__Pyx_PyCode_New(2, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__113, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_levelString, 157, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__114)) __PYX_ERR(0, 157, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":164
 * 		a.blocks.append(Block.blockFromString(i))
 * 	return a
 * def downloadLevel(levelname,lid):             # <<<<<<<<<<<<<<
 * 	base64.b64decode(requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[7],'-_')
 * 	return levelString(levelname,gzip.decompress(base64.b64decode(requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[7],'-_')).decode())
 */
  __pyx_tuple__115 = PyTuple_Pack(2, __pyx_n_s_levelname, __pyx_n_s_lid); if (unlikely(!__pyx_tuple__115)) __PYX_ERR(0, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__115);
  __Pyx_GIVEREF(__pyx_tuple__115);
  __pyx_codeobj__116 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__115, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Y_pyedit_pyedit_engine_cy_PyLvl, __pyx_n_s_downloadLevel, 164, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__116)) __PYX_ERR(0, 164, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyEvent.pyx":7
 * 
 * 
 * PyEvent = namedtuple('PyEvent', 'handler name callback')             # <<<<<<<<<<<<<<
 * cdef class PyEventHandler:
 * 	cdef list events;
 */
  __pyx_tuple__117 = PyTuple_Pack(2, __pyx_n_u_PyEvent, __pyx_kp_u_handler_name_callback); if (unlikely(!__pyx_tuple__117)) __PYX_ERR(6, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__117);
  __Pyx_GIVEREF(__pyx_tuple__117);
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  __pyx_umethod_PyDict_Type_get.type = (PyObject*)&PyDict_Type;
  __pyx_umethod_PyDict_Type_update.type = (PyObject*)&PyDict_Type;
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(1, 1, __pyx_L1_error);
  __pyx_float_0_ = PyFloat_FromDouble(0.); if (unlikely(!__pyx_float_0_)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_float_0_0 = PyFloat_FromDouble(0.0); if (unlikely(!__pyx_float_0_0)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_4 = PyInt_FromLong(4); if (unlikely(!__pyx_int_4)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_6 = PyInt_FromLong(6); if (unlikely(!__pyx_int_6)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_13 = PyInt_FromLong(13); if (unlikely(!__pyx_int_13)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_36 = PyInt_FromLong(36); if (unlikely(!__pyx_int_36)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_50 = PyInt_FromLong(50); if (unlikely(!__pyx_int_50)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_84 = PyInt_FromLong(84); if (unlikely(!__pyx_int_84)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_90 = PyInt_FromLong(90); if (unlikely(!__pyx_int_90)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_141 = PyInt_FromLong(141); if (unlikely(!__pyx_int_141)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_1022 = PyInt_FromLong(1022); if (unlikely(!__pyx_int_1022)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_1330 = PyInt_FromLong(1330); if (unlikely(!__pyx_int_1330)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_1333 = PyInt_FromLong(1333); if (unlikely(!__pyx_int_1333)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_1594 = PyInt_FromLong(1594); if (unlikely(!__pyx_int_1594)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_1704 = PyInt_FromLong(1704); if (unlikely(!__pyx_int_1704)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_1751 = PyInt_FromLong(1751); if (unlikely(!__pyx_int_1751)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_neg_1 = PyInt_FromLong(-1); if (unlikely(!__pyx_int_neg_1)) __PYX_ERR(1, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __pyx_8genexpr4__pyx_v_4main_5Block_k = Py_None; Py_INCREF(Py_None);
  __pyx_8genexpr4__pyx_v_4main_5Block_v = Py_None; Py_INCREF(Py_None);
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  __pyx_vtabptr_4main_PyCCObject = &__pyx_vtable_4main_PyCCObject;
  __pyx_vtable_4main_PyCCObject.ob_inst = (CCObject *(*)(struct _CCObject *))__pyx_f_4main_10PyCCObject_ob_inst;
  __pyx_vtable_4main_PyCCObject.fromPtr = (PyObject *(*)(struct _CCObject *, CCObject *))__pyx_f_4main_10PyCCObject_fromPtr;
  if (PyType_Ready(&__CCObject) < 0) __PYX_ERR(1, 4, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __CCObject.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__CCObject.tp_dictoffset && __CCObject.tp_getattro == PyObject_GenericGetAttr)) {
    __CCObject.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__CCObject.tp_dict, __pyx_vtabptr_4main_PyCCObject) < 0) __PYX_ERR(1, 4, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyCCObject, (PyObject *)&__CCObject) < 0) __PYX_ERR(1, 4, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__CCObject) < 0) __PYX_ERR(1, 4, __pyx_L1_error)
  __pyx_ptype_4main_PyCCObject = &__CCObject;
  __pyx_vtabptr_4main_PyCCArray = &__pyx_vtable_4main_PyCCArray;
  __pyx_vtable_4main_PyCCArray.__pyx_base = *__pyx_vtabptr_4main_PyCCObject;
  __pyx_vtable_4main_PyCCArray.arr_inst = (CCArray *(*)(struct _CCArray *))__pyx_f_4main_9PyCCArray_arr_inst;
  __CCArray.tp_base = __pyx_ptype_4main_PyCCObject;
  if (PyType_Ready(&__CCArray) < 0) __PYX_ERR(3, 4, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __CCArray.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__CCArray.tp_dictoffset && __CCArray.tp_getattro == PyObject_GenericGetAttr)) {
    __CCArray.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__CCArray.tp_dict, __pyx_vtabptr_4main_PyCCArray) < 0) __PYX_ERR(3, 4, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyCCArray, (PyObject *)&__CCArray) < 0) __PYX_ERR(3, 4, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__CCArray) < 0) __PYX_ERR(3, 4, __pyx_L1_error)
  __pyx_ptype_4main_PyCCArray = &__CCArray;
  __pyx_vtabptr_4main_GameObjArray = &__pyx_vtable_4main_GameObjArray;
  __pyx_vtable_4main_GameObjArray.__pyx_base = *__pyx_vtabptr_4main_PyCCArray;
  __GOArray.tp_base = __pyx_ptype_4main_PyCCArray;
  if (PyType_Ready(&__GOArray) < 0) __PYX_ERR(3, 47, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __GOArray.tp_print = 0;
  #endif
  if (__Pyx_SetVtable(__GOArray.tp_dict, __pyx_vtabptr_4main_GameObjArray) < 0) __PYX_ERR(3, 47, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_GameObjArray, (PyObject *)&__GOArray) < 0) __PYX_ERR(3, 47, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__GOArray) < 0) __PYX_ERR(3, 47, __pyx_L1_error)
  __pyx_ptype_4main_GameObjArray = &__GOArray;
  __pyx_vtabptr_4main_Editor = &__pyx_vtable_4main_Editor;
  __pyx_vtable_4main_Editor.__pyx_base = *__pyx_vtabptr_4main_PyCCObject;
  __pyx_vtable_4main_Editor.edit_inst = (EditorUI *(*)(struct PyEditorUI *))__pyx_f_4main_6Editor_edit_inst;
  PyEditUI.tp_base = __pyx_ptype_4main_PyCCObject;
  if (PyType_Ready(&PyEditUI) < 0) __PYX_ERR(4, 5, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  PyEditUI.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!PyEditUI.tp_dictoffset && PyEditUI.tp_getattro == PyObject_GenericGetAttr)) {
    PyEditUI.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(PyEditUI.tp_dict, __pyx_vtabptr_4main_Editor) < 0) __PYX_ERR(4, 5, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_Editor, (PyObject *)&PyEditUI) < 0) __PYX_ERR(4, 5, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&PyEditUI) < 0) __PYX_ERR(4, 5, __pyx_L1_error)
  __pyx_ptype_4main_Editor = &PyEditUI;
  __pyx_vtabptr_4main_PyGameObject = &__pyx_vtable_4main_PyGameObject;
  __pyx_vtable_4main_PyGameObject.__pyx_base = *__pyx_vtabptr_4main_PyCCObject;
  __pyx_vtable_4main_PyGameObject.gameob_inst = (GameObject *(*)(struct PyGameOb *))__pyx_f_4main_12PyGameObject_gameob_inst;
  PyGameObj.tp_base = __pyx_ptype_4main_PyCCObject;
  if (PyType_Ready(&PyGameObj) < 0) __PYX_ERR(5, 5, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  PyGameObj.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!PyGameObj.tp_dictoffset && PyGameObj.tp_getattro == PyObject_GenericGetAttr)) {
    PyGameObj.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(PyGameObj.tp_dict, __pyx_vtabptr_4main_PyGameObject) < 0) __PYX_ERR(5, 5, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyGameObject, (PyObject *)&PyGameObj) < 0) __PYX_ERR(5, 5, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&PyGameObj) < 0) __PYX_ERR(5, 5, __pyx_L1_error)
  __pyx_ptype_4main_PyGameObject = &PyGameObj;
  __pyx_vtabptr_4main_PyEventHandler = &__pyx_vtable_4main_PyEventHandler;
  __pyx_vtable_4main_PyEventHandler.extractEv = (PyObject *(*)(struct __pyx_obj_4main_PyEventHandler *, struct event_base *))__pyx_f_4main_14PyEventHandler_extractEv;
  if (PyType_Ready(&__pyx_type_4main_PyEventHandler) < 0) __PYX_ERR(6, 8, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_4main_PyEventHandler.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_4main_PyEventHandler.tp_dictoffset && __pyx_type_4main_PyEventHandler.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_4main_PyEventHandler.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_4main_PyEventHandler.tp_dict, __pyx_vtabptr_4main_PyEventHandler) < 0) __PYX_ERR(6, 8, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyEventHandler, (PyObject *)&__pyx_type_4main_PyEventHandler) < 0) __PYX_ERR(6, 8, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_4main_PyEventHandler) < 0) __PYX_ERR(6, 8, __pyx_L1_error)
  __pyx_ptype_4main_PyEventHandler = &__pyx_type_4main_PyEventHandler;
  if (PyType_Ready(&__pyx_type_4main___pyx_scope_struct__thread_sync) < 0) __PYX_ERR(1, 28, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_4main___pyx_scope_struct__thread_sync.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_4main___pyx_scope_struct__thread_sync.tp_dictoffset && __pyx_type_4main___pyx_scope_struct__thread_sync.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_4main___pyx_scope_struct__thread_sync.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_4main___pyx_scope_struct__thread_sync = &__pyx_type_4main___pyx_scope_struct__thread_sync;
  if (PyType_Ready(&__pyx_type_4main___pyx_scope_struct_1_k) < 0) __PYX_ERR(1, 29, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_4main___pyx_scope_struct_1_k.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_4main___pyx_scope_struct_1_k.tp_dictoffset && __pyx_type_4main___pyx_scope_struct_1_k.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_4main___pyx_scope_struct_1_k.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_4main___pyx_scope_struct_1_k = &__pyx_type_4main___pyx_scope_struct_1_k;
  if (PyType_Ready(&__pyx_type_4main___pyx_scope_struct_2_thread_async) < 0) __PYX_ERR(1, 49, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_4main___pyx_scope_struct_2_thread_async.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_4main___pyx_scope_struct_2_thread_async.tp_dictoffset && __pyx_type_4main___pyx_scope_struct_2_thread_async.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_4main___pyx_scope_struct_2_thread_async.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_4main___pyx_scope_struct_2_thread_async = &__pyx_type_4main___pyx_scope_struct_2_thread_async;
  if (PyType_Ready(&__pyx_type_4main___pyx_scope_struct_3_k) < 0) __PYX_ERR(1, 50, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_4main___pyx_scope_struct_3_k.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_4main___pyx_scope_struct_3_k.tp_dictoffset && __pyx_type_4main___pyx_scope_struct_3_k.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_4main___pyx_scope_struct_3_k.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_4main___pyx_scope_struct_3_k = &__pyx_type_4main___pyx_scope_struct_3_k;
  if (PyType_Ready(&__pyx_type_4main___pyx_scope_struct_4___getattr__) < 0) __PYX_ERR(3, 49, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_4main___pyx_scope_struct_4___getattr__.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_4main___pyx_scope_struct_4___getattr__.tp_dictoffset && __pyx_type_4main___pyx_scope_struct_4___getattr__.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_4main___pyx_scope_struct_4___getattr__.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_4main___pyx_scope_struct_4___getattr__ = &__pyx_type_4main___pyx_scope_struct_4___getattr__;
  if (PyType_Ready(&__pyx_type_4main___pyx_scope_struct_5___get__) < 0) __PYX_ERR(4, 34, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_4main___pyx_scope_struct_5___get__.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_4main___pyx_scope_struct_5___get__.tp_dictoffset && __pyx_type_4main___pyx_scope_struct_5___get__.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_4main___pyx_scope_struct_5___get__.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_4main___pyx_scope_struct_5___get__ = &__pyx_type_4main___pyx_scope_struct_5___get__;
  if (PyType_Ready(&__pyx_type_4main___pyx_scope_struct_6___set__) < 0) __PYX_ERR(4, 56, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_4main___pyx_scope_struct_6___set__.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_4main___pyx_scope_struct_6___set__.tp_dictoffset && __pyx_type_4main___pyx_scope_struct_6___set__.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_4main___pyx_scope_struct_6___set__.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_4main___pyx_scope_struct_6___set__ = &__pyx_type_4main___pyx_scope_struct_6___set__;
  if (PyType_Ready(&__pyx_type_4main___pyx_scope_struct_7___get__) < 0) __PYX_ERR(4, 39, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_4main___pyx_scope_struct_7___get__.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_4main___pyx_scope_struct_7___get__.tp_dictoffset && __pyx_type_4main___pyx_scope_struct_7___get__.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_4main___pyx_scope_struct_7___get__.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_4main___pyx_scope_struct_7___get__ = &__pyx_type_4main___pyx_scope_struct_7___get__;
  if (PyType_Ready(&__pyx_type_4main___pyx_scope_struct_8_xor) < 0) __PYX_ERR(0, 36, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_4main___pyx_scope_struct_8_xor.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_4main___pyx_scope_struct_8_xor.tp_dictoffset && __pyx_type_4main___pyx_scope_struct_8_xor.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_4main___pyx_scope_struct_8_xor.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_4main___pyx_scope_struct_8_xor = &__pyx_type_4main___pyx_scope_struct_8_xor;
  if (PyType_Ready(&__pyx_type_4main___pyx_scope_struct_9_genexpr) < 0) __PYX_ERR(0, 37, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_4main___pyx_scope_struct_9_genexpr.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_4main___pyx_scope_struct_9_genexpr.tp_dictoffset && __pyx_type_4main___pyx_scope_struct_9_genexpr.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_4main___pyx_scope_struct_9_genexpr.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_4main___pyx_scope_struct_9_genexpr = &__pyx_type_4main___pyx_scope_struct_9_genexpr;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}


#ifndef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#elif PY_MAJOR_VERSION < 3
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" void
#else
#define __Pyx_PyMODINIT_FUNC void
#endif
#else
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyObject *
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC initmain(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC initmain(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_main(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_main(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none) {
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
            result = PyDict_SetItemString(moddict, to_name, value);
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, CYTHON_UNUSED PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_main(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  Py_ssize_t __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'main' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_main(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(1, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(WITH_THREAD) && PY_VERSION_HEX < 0x030700F0 && defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  PyEval_InitThreads();
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("main", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(1, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(1, 1, __pyx_L1_error)
  Py_INCREF(__pyx_b);
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(1, 1, __pyx_L1_error)
  Py_INCREF(__pyx_cython_runtime);
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(1, 1, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_main) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name, __pyx_n_s_main_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(1, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "main")) {
      if (unlikely(PyDict_SetItemString(modules, "main", __pyx_m) < 0)) __PYX_ERR(1, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  (void)__Pyx_modinit_function_export_code();
  if (unlikely(__Pyx_modinit_type_init_code() < 0)) __PYX_ERR(1, 1, __pyx_L1_error)
  (void)__Pyx_modinit_type_import_code();
  (void)__Pyx_modinit_variable_import_code();
  (void)__Pyx_modinit_function_import_code();
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif

  /* "main.pyx":28
 *             return self
 * 
 * def thread_sync(func):             # <<<<<<<<<<<<<<
 *     def k(*args, **kwargs):
 *         if (onMainThread()):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_4main_1thread_sync, NULL, __pyx_n_s_main); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_thread_sync, __pyx_t_1) < 0) __PYX_ERR(1, 28, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "main.pyx":49
 *     return k
 * 
 * def thread_async(func):             # <<<<<<<<<<<<<<
 *     def k(*args, **kwargs):
 *         if (onMainThread()):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_4main_3thread_async, NULL, __pyx_n_s_main); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 49, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_thread_async, __pyx_t_1) < 0) __PYX_ERR(1, 49, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/GDArray.pyx":11
 *         return <CCArray*>self.inst
 * 
 *     @thread_sync             # <<<<<<<<<<<<<<
 *     def __len__(self):
 *         return self.arr_inst().count()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_thread_sync); if (unlikely(!__pyx_t_2)) __PYX_ERR(3, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "../../pyedit_engine/cy/GDArray.pyx":12
 * 
 *     @thread_sync
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self.arr_inst().count()
 * 
 */
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_4main_PyCCArray, __pyx_n_s_len); if (unlikely(!__pyx_t_3)) __PYX_ERR(3, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4main_PyCCArray->tp_dict, __pyx_n_s_len, __pyx_t_1) < 0) __PYX_ERR(3, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_4main_PyCCArray);

  /* "../../pyedit_engine/cy/GDArray.pyx":15
 *         return self.arr_inst().count()
 * 
 *     @thread_sync             # <<<<<<<<<<<<<<
 *     def __getitem__(self, e):
 *         if type(e) != int:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_thread_sync); if (unlikely(!__pyx_t_2)) __PYX_ERR(3, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "../../pyedit_engine/cy/GDArray.pyx":16
 * 
 *     @thread_sync
 *     def __getitem__(self, e):             # <<<<<<<<<<<<<<
 *         if type(e) != int:
 *             raise ValueError("Invalid index")
 */
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_4main_PyCCArray, __pyx_n_s_getitem); if (unlikely(!__pyx_t_3)) __PYX_ERR(3, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4main_PyCCArray->tp_dict, __pyx_n_s_getitem, __pyx_t_1) < 0) __PYX_ERR(3, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_4main_PyCCArray);

  /* "../../pyedit_engine/cy/GDArray.pyx":27
 *         return [x for x in self]
 * 
 *     def init(self, stuff=[]):             # <<<<<<<<<<<<<<
 *         if not issubclass(type(stuff), PyCCArray) and type(stuff) != list:
 *             raise ValueError("Input must be a list or subclass of PyCCArray")
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_k__13 = __pyx_t_1;
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/GDArray.pyx":48
 * 
 * cdef public class GameObjArray(PyCCArray) [object _GOArray, type __GOArray]:
 *     @thread_sync             # <<<<<<<<<<<<<<
 *     def __getattr__(self, attr):
 *         stuff = [getattr(self[x], attr) for x in range(len(self))]
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_thread_sync); if (unlikely(!__pyx_t_2)) __PYX_ERR(3, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "../../pyedit_engine/cy/GDArray.pyx":49
 * cdef public class GameObjArray(PyCCArray) [object _GOArray, type __GOArray]:
 *     @thread_sync
 *     def __getattr__(self, attr):             # <<<<<<<<<<<<<<
 *         stuff = [getattr(self[x], attr) for x in range(len(self))]
 *         if stuff[0].__class__.__name__ != "builtin_function_or_method":
 */
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_4main_GameObjArray, __pyx_n_s_getattr); if (unlikely(!__pyx_t_3)) __PYX_ERR(3, 49, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4main_GameObjArray->tp_dict, __pyx_n_s_getattr, __pyx_t_1) < 0) __PYX_ERR(3, 49, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_4main_GameObjArray);

  /* "../../pyedit_engine/cy/EditorUI.pyx":16
 *         if makeUsable(self.inst) == 0:
 *             raise RuntimeError("Unable to fetch editor")
 *     @thread_async             # <<<<<<<<<<<<<<
 *     def pasteStr(self, obs):
 *         if type(obs)==str:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_thread_async); if (unlikely(!__pyx_t_2)) __PYX_ERR(4, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "../../pyedit_engine/cy/EditorUI.pyx":17
 *             raise RuntimeError("Unable to fetch editor")
 *     @thread_async
 *     def pasteStr(self, obs):             # <<<<<<<<<<<<<<
 *         if type(obs)==str:
 *             obs = obs.encode()
 */
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_4main_Editor, __pyx_n_s_pasteStr); if (unlikely(!__pyx_t_3)) __PYX_ERR(4, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(4, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4main_Editor->tp_dict, __pyx_n_s_pasteStr, __pyx_t_1) < 0) __PYX_ERR(4, 17, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_4main_Editor);

  /* "../../pyedit_engine/cy/EditorUI.pyx":22
 *         self.edit_inst().pasteObjects(obs)
 * 
 *     @thread_sync             # <<<<<<<<<<<<<<
 *     def createObject(self, objectid, x=0.0, y=0.0):
 *         objectid = int(objectid)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_thread_sync); if (unlikely(!__pyx_t_2)) __PYX_ERR(4, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "../../pyedit_engine/cy/EditorUI.pyx":23
 * 
 *     @thread_sync
 *     def createObject(self, objectid, x=0.0, y=0.0):             # <<<<<<<<<<<<<<
 *         objectid = int(objectid)
 *         cdef CCPoint p
 */
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_4main_Editor, __pyx_n_s_createObject); if (unlikely(!__pyx_t_3)) __PYX_ERR(4, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(4, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4main_Editor->tp_dict, __pyx_n_s_createObject, __pyx_t_1) < 0) __PYX_ERR(4, 23, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_4main_Editor);

  /* "../../pyedit_engine/cy/EditorUI.pyx":46
 *         self.edit_inst().deselectAll()
 * 
 *     @thread_sync             # <<<<<<<<<<<<<<
 *     def deleteSelection(self):
 *         self.edit_inst().onDeleteSelected(<CCObject*>self.edit_inst())
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_thread_sync); if (unlikely(!__pyx_t_2)) __PYX_ERR(4, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "../../pyedit_engine/cy/EditorUI.pyx":47
 * 
 *     @thread_sync
 *     def deleteSelection(self):             # <<<<<<<<<<<<<<
 *         self.edit_inst().onDeleteSelected(<CCObject*>self.edit_inst())
 * 
 */
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_4main_Editor, __pyx_n_s_deleteSelection); if (unlikely(!__pyx_t_3)) __PYX_ERR(4, 47, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(4, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4main_Editor->tp_dict, __pyx_n_s_deleteSelection, __pyx_t_1) < 0) __PYX_ERR(4, 47, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_4main_Editor);

  /* "../../pyedit_engine/cy/EditorUI.pyx":50
 *         self.edit_inst().onDeleteSelected(<CCObject*>self.edit_inst())
 * 
 *     @thread_sync             # <<<<<<<<<<<<<<
 *     def duplicate(self):
 *         self.edit_inst().onDuplicate(<CCObject*>self.edit_inst())
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_thread_sync); if (unlikely(!__pyx_t_2)) __PYX_ERR(4, 50, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "../../pyedit_engine/cy/EditorUI.pyx":51
 * 
 *     @thread_sync
 *     def duplicate(self):             # <<<<<<<<<<<<<<
 *         self.edit_inst().onDuplicate(<CCObject*>self.edit_inst())
 *         return self.selection
 */
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_4main_Editor, __pyx_n_s_duplicate); if (unlikely(!__pyx_t_3)) __PYX_ERR(4, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(4, 50, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4main_Editor->tp_dict, __pyx_n_s_duplicate, __pyx_t_1) < 0) __PYX_ERR(4, 51, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_4main_Editor);

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":2
 * from base cimport *
 * from enum import Enum             # <<<<<<<<<<<<<<
 * 
 * class PyRingType(Enum):
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(7, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_Enum);
  __Pyx_GIVEREF(__pyx_n_s_Enum);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_Enum);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_enum, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_Enum); if (unlikely(!__pyx_t_1)) __PYX_ERR(7, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Enum, __pyx_t_1) < 0) __PYX_ERR(7, 2, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":4
 * from enum import Enum
 * 
 * class PyRingType(Enum):             # <<<<<<<<<<<<<<
 * 	PINK = 141
 * 	YELLOW = 36
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Enum); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(7, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_CalculateMetaclass(NULL, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare(__pyx_t_2, __pyx_t_1, __pyx_n_s_PyRingType, __pyx_n_s_PyRingType, (PyObject *) NULL, __pyx_n_s_main, (PyObject *) NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(7, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":5
 * 
 * class PyRingType(Enum):
 * 	PINK = 141             # <<<<<<<<<<<<<<
 * 	YELLOW = 36
 * 	RED = 1333
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_PINK, __pyx_int_141) < 0) __PYX_ERR(7, 5, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":6
 * class PyRingType(Enum):
 * 	PINK = 141
 * 	YELLOW = 36             # <<<<<<<<<<<<<<
 * 	RED = 1333
 * 	BLUE = 84
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_YELLOW, __pyx_int_36) < 0) __PYX_ERR(7, 6, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":7
 * 	PINK = 141
 * 	YELLOW = 36
 * 	RED = 1333             # <<<<<<<<<<<<<<
 * 	BLUE = 84
 * 	GREEN = 1022
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_RED, __pyx_int_1333) < 0) __PYX_ERR(7, 7, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":8
 * 	YELLOW = 36
 * 	RED = 1333
 * 	BLUE = 84             # <<<<<<<<<<<<<<
 * 	GREEN = 1022
 * 	BLACK = 1330
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_BLUE, __pyx_int_84) < 0) __PYX_ERR(7, 8, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":9
 * 	RED = 1333
 * 	BLUE = 84
 * 	GREEN = 1022             # <<<<<<<<<<<<<<
 * 	BLACK = 1330
 * 	DASH_GREEN = 1704
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_GREEN, __pyx_int_1022) < 0) __PYX_ERR(7, 9, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":10
 * 	BLUE = 84
 * 	GREEN = 1022
 * 	BLACK = 1330             # <<<<<<<<<<<<<<
 * 	DASH_GREEN = 1704
 * 	DASH_PINK = 1751
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_BLACK, __pyx_int_1330) < 0) __PYX_ERR(7, 10, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":11
 * 	GREEN = 1022
 * 	BLACK = 1330
 * 	DASH_GREEN = 1704             # <<<<<<<<<<<<<<
 * 	DASH_PINK = 1751
 * 	CUSTOM = 1594
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_DASH_GREEN, __pyx_int_1704) < 0) __PYX_ERR(7, 11, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":12
 * 	BLACK = 1330
 * 	DASH_GREEN = 1704
 * 	DASH_PINK = 1751             # <<<<<<<<<<<<<<
 * 	CUSTOM = 1594
 * 
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_DASH_PINK, __pyx_int_1751) < 0) __PYX_ERR(7, 12, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":13
 * 	DASH_GREEN = 1704
 * 	DASH_PINK = 1751
 * 	CUSTOM = 1594             # <<<<<<<<<<<<<<
 * 
 * class PyPortalType(Enum):
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_CUSTOM, __pyx_int_1594) < 0) __PYX_ERR(7, 13, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":4
 * from enum import Enum
 * 
 * class PyRingType(Enum):             # <<<<<<<<<<<<<<
 * 	PINK = 141
 * 	YELLOW = 36
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_2, __pyx_n_s_PyRingType, __pyx_t_1, __pyx_t_3, NULL, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(7, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PyRingType, __pyx_t_4) < 0) __PYX_ERR(7, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":15
 * 	CUSTOM = 1594
 * 
 * class PyPortalType(Enum):             # <<<<<<<<<<<<<<
 * 	CUBE = 0
 * 	SHIP = 0
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_Enum); if (unlikely(!__pyx_t_1)) __PYX_ERR(7, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_CalculateMetaclass(NULL, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(7, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare(__pyx_t_1, __pyx_t_2, __pyx_n_s_PyPortalType, __pyx_n_s_PyPortalType, (PyObject *) NULL, __pyx_n_s_main, (PyObject *) NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(7, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":16
 * 
 * class PyPortalType(Enum):
 * 	CUBE = 0             # <<<<<<<<<<<<<<
 * 	SHIP = 0
 * 	UFO = 0
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_CUBE, __pyx_int_0) < 0) __PYX_ERR(7, 16, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":17
 * class PyPortalType(Enum):
 * 	CUBE = 0
 * 	SHIP = 0             # <<<<<<<<<<<<<<
 * 	UFO = 0
 * 	WAVE = 0
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_SHIP, __pyx_int_0) < 0) __PYX_ERR(7, 17, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":18
 * 	CUBE = 0
 * 	SHIP = 0
 * 	UFO = 0             # <<<<<<<<<<<<<<
 * 	WAVE = 0
 * 	ROBOT = 0
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_UFO, __pyx_int_0) < 0) __PYX_ERR(7, 18, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":19
 * 	SHIP = 0
 * 	UFO = 0
 * 	WAVE = 0             # <<<<<<<<<<<<<<
 * 	ROBOT = 0
 * 	SPIDER = 0
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_WAVE, __pyx_int_0) < 0) __PYX_ERR(7, 19, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":20
 * 	UFO = 0
 * 	WAVE = 0
 * 	ROBOT = 0             # <<<<<<<<<<<<<<
 * 	SPIDER = 0
 * 	GRAVITY_FLIPPED = 0
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_ROBOT, __pyx_int_0) < 0) __PYX_ERR(7, 20, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":21
 * 	WAVE = 0
 * 	ROBOT = 0
 * 	SPIDER = 0             # <<<<<<<<<<<<<<
 * 	GRAVITY_FLIPPED = 0
 * 	GRAVITY_NORMAL = 0
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_SPIDER, __pyx_int_0) < 0) __PYX_ERR(7, 21, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":22
 * 	ROBOT = 0
 * 	SPIDER = 0
 * 	GRAVITY_FLIPPED = 0             # <<<<<<<<<<<<<<
 * 	GRAVITY_NORMAL = 0
 * 	DIRECTION_REVERSE = 0
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_GRAVITY_FLIPPED, __pyx_int_0) < 0) __PYX_ERR(7, 22, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":23
 * 	SPIDER = 0
 * 	GRAVITY_FLIPPED = 0
 * 	GRAVITY_NORMAL = 0             # <<<<<<<<<<<<<<
 * 	DIRECTION_REVERSE = 0
 * 	DIRECTION_NORMAL = 0
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_GRAVITY_NORMAL, __pyx_int_0) < 0) __PYX_ERR(7, 23, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":24
 * 	GRAVITY_FLIPPED = 0
 * 	GRAVITY_NORMAL = 0
 * 	DIRECTION_REVERSE = 0             # <<<<<<<<<<<<<<
 * 	DIRECTION_NORMAL = 0
 * 	SIZE_NORMAL = 0
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_DIRECTION_REVERSE, __pyx_int_0) < 0) __PYX_ERR(7, 24, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":25
 * 	GRAVITY_NORMAL = 0
 * 	DIRECTION_REVERSE = 0
 * 	DIRECTION_NORMAL = 0             # <<<<<<<<<<<<<<
 * 	SIZE_NORMAL = 0
 * 	SIZE_SMALL = 0
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_DIRECTION_NORMAL, __pyx_int_0) < 0) __PYX_ERR(7, 25, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":26
 * 	DIRECTION_REVERSE = 0
 * 	DIRECTION_NORMAL = 0
 * 	SIZE_NORMAL = 0             # <<<<<<<<<<<<<<
 * 	SIZE_SMALL = 0
 * 	DUAL_ON = 0
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_SIZE_NORMAL, __pyx_int_0) < 0) __PYX_ERR(7, 26, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":27
 * 	DIRECTION_NORMAL = 0
 * 	SIZE_NORMAL = 0
 * 	SIZE_SMALL = 0             # <<<<<<<<<<<<<<
 * 	DUAL_ON = 0
 * 	DUAL_OFF = 0
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_SIZE_SMALL, __pyx_int_0) < 0) __PYX_ERR(7, 27, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":28
 * 	SIZE_NORMAL = 0
 * 	SIZE_SMALL = 0
 * 	DUAL_ON = 0             # <<<<<<<<<<<<<<
 * 	DUAL_OFF = 0
 * 	TELEPORT = 0
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_DUAL_ON, __pyx_int_0) < 0) __PYX_ERR(7, 28, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":29
 * 	SIZE_SMALL = 0
 * 	DUAL_ON = 0
 * 	DUAL_OFF = 0             # <<<<<<<<<<<<<<
 * 	TELEPORT = 0
 * 
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_DUAL_OFF, __pyx_int_0) < 0) __PYX_ERR(7, 29, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":30
 * 	DUAL_ON = 0
 * 	DUAL_OFF = 0
 * 	TELEPORT = 0             # <<<<<<<<<<<<<<
 * 
 * class PySpeedType(Enum):
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_TELEPORT, __pyx_int_0) < 0) __PYX_ERR(7, 30, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":15
 * 	CUSTOM = 1594
 * 
 * class PyPortalType(Enum):             # <<<<<<<<<<<<<<
 * 	CUBE = 0
 * 	SHIP = 0
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_1, __pyx_n_s_PyPortalType, __pyx_t_2, __pyx_t_3, NULL, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(7, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PyPortalType, __pyx_t_4) < 0) __PYX_ERR(7, 15, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":32
 * 	TELEPORT = 0
 * 
 * class PySpeedType(Enum):             # <<<<<<<<<<<<<<
 * 	NORMAL = 0
 * 	SLOW = 0
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Enum); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(7, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_CalculateMetaclass(NULL, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare(__pyx_t_2, __pyx_t_1, __pyx_n_s_PySpeedType, __pyx_n_s_PySpeedType, (PyObject *) NULL, __pyx_n_s_main, (PyObject *) NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(7, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":33
 * 
 * class PySpeedType(Enum):
 * 	NORMAL = 0             # <<<<<<<<<<<<<<
 * 	SLOW = 0
 * 	FAST = 0
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_NORMAL, __pyx_int_0) < 0) __PYX_ERR(7, 33, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":34
 * class PySpeedType(Enum):
 * 	NORMAL = 0
 * 	SLOW = 0             # <<<<<<<<<<<<<<
 * 	FAST = 0
 * 	FASTER = 0
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_SLOW, __pyx_int_0) < 0) __PYX_ERR(7, 34, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":35
 * 	NORMAL = 0
 * 	SLOW = 0
 * 	FAST = 0             # <<<<<<<<<<<<<<
 * 	FASTER = 0
 * 	FASTEST = 0
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_FAST, __pyx_int_0) < 0) __PYX_ERR(7, 35, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":36
 * 	SLOW = 0
 * 	FAST = 0
 * 	FASTER = 0             # <<<<<<<<<<<<<<
 * 	FASTEST = 0
 * 
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_FASTER, __pyx_int_0) < 0) __PYX_ERR(7, 36, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":37
 * 	FAST = 0
 * 	FASTER = 0
 * 	FASTEST = 0             # <<<<<<<<<<<<<<
 * 
 * class PyCollectibleType(Enum):
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_FASTEST, __pyx_int_0) < 0) __PYX_ERR(7, 37, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":32
 * 	TELEPORT = 0
 * 
 * class PySpeedType(Enum):             # <<<<<<<<<<<<<<
 * 	NORMAL = 0
 * 	SLOW = 0
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_2, __pyx_n_s_PySpeedType, __pyx_t_1, __pyx_t_3, NULL, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(7, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PySpeedType, __pyx_t_4) < 0) __PYX_ERR(7, 32, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":39
 * 	FASTEST = 0
 * 
 * class PyCollectibleType(Enum):             # <<<<<<<<<<<<<<
 * 	KEY = 0
 * 	HEART = 0
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_Enum); if (unlikely(!__pyx_t_1)) __PYX_ERR(7, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(7, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_CalculateMetaclass(NULL, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(7, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare(__pyx_t_1, __pyx_t_2, __pyx_n_s_PyCollectibleType, __pyx_n_s_PyCollectibleType, (PyObject *) NULL, __pyx_n_s_main, (PyObject *) NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(7, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":40
 * 
 * class PyCollectibleType(Enum):
 * 	KEY = 0             # <<<<<<<<<<<<<<
 * 	HEART = 0
 * 	FLASK = 0
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_KEY, __pyx_int_0) < 0) __PYX_ERR(7, 40, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":41
 * class PyCollectibleType(Enum):
 * 	KEY = 0
 * 	HEART = 0             # <<<<<<<<<<<<<<
 * 	FLASK = 0
 * 	SKULL = 0
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_HEART, __pyx_int_0) < 0) __PYX_ERR(7, 41, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":42
 * 	KEY = 0
 * 	HEART = 0
 * 	FLASK = 0             # <<<<<<<<<<<<<<
 * 	SKULL = 0
 * 	COIN = 0
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_FLASK, __pyx_int_0) < 0) __PYX_ERR(7, 42, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":43
 * 	HEART = 0
 * 	FLASK = 0
 * 	SKULL = 0             # <<<<<<<<<<<<<<
 * 	COIN = 0
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_SKULL, __pyx_int_0) < 0) __PYX_ERR(7, 43, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":44
 * 	FLASK = 0
 * 	SKULL = 0
 * 	COIN = 0             # <<<<<<<<<<<<<<
 */
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_COIN, __pyx_int_0) < 0) __PYX_ERR(7, 44, __pyx_L1_error)

  /* "../../pyedit_engine/cy/ObjectExtensions.pyx":39
 * 	FASTEST = 0
 * 
 * class PyCollectibleType(Enum):             # <<<<<<<<<<<<<<
 * 	KEY = 0
 * 	HEART = 0
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_1, __pyx_n_s_PyCollectibleType, __pyx_t_2, __pyx_t_3, NULL, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(7, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PyCollectibleType, __pyx_t_4) < 0) __PYX_ERR(7, 39, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":1
 * import json, base64, hashlib, random, os             # <<<<<<<<<<<<<<
 * requests = os
 * from itertools import cycle
 */
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_json, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_json, __pyx_t_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_base64, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_base64, __pyx_t_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_hashlib, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_hashlib, __pyx_t_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_random, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_random, __pyx_t_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_os, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_os, __pyx_t_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":2
 * import json, base64, hashlib, random, os
 * requests = os             # <<<<<<<<<<<<<<
 * from itertools import cycle
 * izip = zip
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_os); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_requests, __pyx_t_2) < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":3
 * import json, base64, hashlib, random, os
 * requests = os
 * from itertools import cycle             # <<<<<<<<<<<<<<
 * izip = zip
 * import gzip
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_cycle);
  __Pyx_GIVEREF(__pyx_n_s_cycle);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_cycle);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_itertools, __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_cycle); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_cycle, __pyx_t_2) < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":4
 * requests = os
 * from itertools import cycle
 * izip = zip             # <<<<<<<<<<<<<<
 * import gzip
 * try:
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_izip, __pyx_builtin_zip) < 0) __PYX_ERR(0, 4, __pyx_L1_error)

  /* "../../pyedit_engine/cy/PyLvl.pyx":5
 * from itertools import cycle
 * izip = zip
 * import gzip             # <<<<<<<<<<<<<<
 * try:
 * 	from urllib.parse import urlencode
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_gzip, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_gzip, __pyx_t_1) < 0) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":6
 * izip = zip
 * import gzip
 * try:             # <<<<<<<<<<<<<<
 * 	from urllib.parse import urlencode
 * 	import urllib.request as urllib2
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_6);
    __Pyx_XGOTREF(__pyx_t_7);
    /*try:*/ {

      /* "../../pyedit_engine/cy/PyLvl.pyx":7
 * import gzip
 * try:
 * 	from urllib.parse import urlencode             # <<<<<<<<<<<<<<
 * 	import urllib.request as urllib2
 * except:
 */
      __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7, __pyx_L2_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_n_s_urlencode);
      __Pyx_GIVEREF(__pyx_n_s_urlencode);
      PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_urlencode);
      __pyx_t_2 = __Pyx_Import(__pyx_n_s_urllib_parse, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 7, __pyx_L2_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_urlencode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7, __pyx_L2_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_urlencode, __pyx_t_1) < 0) __PYX_ERR(0, 7, __pyx_L2_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "../../pyedit_engine/cy/PyLvl.pyx":8
 * try:
 * 	from urllib.parse import urlencode
 * 	import urllib.request as urllib2             # <<<<<<<<<<<<<<
 * except:
 * 	from urllib import urlencode
 */
      __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 8, __pyx_L2_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_n_s__51);
      __Pyx_GIVEREF(__pyx_n_s__51);
      PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s__51);
      __pyx_t_1 = __Pyx_Import(__pyx_n_s_urllib_request, __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8, __pyx_L2_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_urllib2, __pyx_t_1) < 0) __PYX_ERR(0, 8, __pyx_L2_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "../../pyedit_engine/cy/PyLvl.pyx":6
 * izip = zip
 * import gzip
 * try:             # <<<<<<<<<<<<<<
 * 	from urllib.parse import urlencode
 * 	import urllib.request as urllib2
 */
    }
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    goto __pyx_L7_try_end;
    __pyx_L2_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "../../pyedit_engine/cy/PyLvl.pyx":9
 * 	from urllib.parse import urlencode
 * 	import urllib.request as urllib2
 * except:             # <<<<<<<<<<<<<<
 * 	from urllib import urlencode
 * 	import urllib2
 */
    /*except:*/ {
      __Pyx_AddTraceback("main", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3) < 0) __PYX_ERR(0, 9, __pyx_L4_except_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GOTREF(__pyx_t_3);

      /* "../../pyedit_engine/cy/PyLvl.pyx":10
 * 	import urllib.request as urllib2
 * except:
 * 	from urllib import urlencode             # <<<<<<<<<<<<<<
 * 	import urllib2
 * from math import sqrt
 */
      __pyx_t_4 = PyList_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 10, __pyx_L4_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_n_s_urlencode);
      __Pyx_GIVEREF(__pyx_n_s_urlencode);
      PyList_SET_ITEM(__pyx_t_4, 0, __pyx_n_s_urlencode);
      __pyx_t_8 = __Pyx_Import(__pyx_n_s_urllib, __pyx_t_4, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 10, __pyx_L4_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_ImportFrom(__pyx_t_8, __pyx_n_s_urlencode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 10, __pyx_L4_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_urlencode, __pyx_t_4) < 0) __PYX_ERR(0, 10, __pyx_L4_except_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "../../pyedit_engine/cy/PyLvl.pyx":11
 * except:
 * 	from urllib import urlencode
 * 	import urllib2             # <<<<<<<<<<<<<<
 * from math import sqrt
 * def makeSeed(encoded):
 */
      __pyx_t_8 = __Pyx_Import(__pyx_n_s_urllib2, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 11, __pyx_L4_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_urllib2, __pyx_t_8) < 0) __PYX_ERR(0, 11, __pyx_L4_except_error)
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L3_exception_handled;
    }
    __pyx_L4_except_error:;

    /* "../../pyedit_engine/cy/PyLvl.pyx":6
 * izip = zip
 * import gzip
 * try:             # <<<<<<<<<<<<<<
 * 	from urllib.parse import urlencode
 * 	import urllib.request as urllib2
 */
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
    goto __pyx_L1_error;
    __pyx_L3_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
    __pyx_L7_try_end:;
  }

  /* "../../pyedit_engine/cy/PyLvl.pyx":12
 * 	from urllib import urlencode
 * 	import urllib2
 * from math import sqrt             # <<<<<<<<<<<<<<
 * def makeSeed(encoded):
 * 	if len(encoded)< 49:
 */
  __pyx_t_3 = PyList_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_n_s_sqrt);
  __Pyx_GIVEREF(__pyx_n_s_sqrt);
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_n_s_sqrt);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_math, __pyx_t_3, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_sqrt, __pyx_t_3) < 0) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":13
 * 	import urllib2
 * from math import sqrt
 * def makeSeed(encoded):             # <<<<<<<<<<<<<<
 * 	if len(encoded)< 49:
 * 		seed2 = encoded
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4main_5makeSeed, NULL, __pyx_n_s_main); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_makeSeed, __pyx_t_2) < 0) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":23
 * 			i+=1
 * 	return xor(hashlib.sha1(seed2.encode()+b"xI25fpAapCQg").hexdigest(),"41274")
 * def urlopen(url,p):             # <<<<<<<<<<<<<<
 * 	t = urllib2.Request(url,p.encode())
 * 	return urllib2.urlopen(t)
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4main_7urlopen, NULL, __pyx_n_s_main); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_urlopen, __pyx_t_2) < 0) __PYX_ERR(0, 23, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":26
 * 	t = urllib2.Request(url,p.encode())
 * 	return urllib2.urlopen(t)
 * starting = {"gameVersion":"21","binaryVersion":"35","gdw":"0"}             # <<<<<<<<<<<<<<
 * def getAccountID(username):
 * 	diction = {"str":username,"total":"0","page":"0","secret":"Wmfd2893gb7"}
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 26, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_u_gameVersion, __pyx_kp_u_21) < 0) __PYX_ERR(0, 26, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_u_binaryVersion, __pyx_kp_u_35) < 0) __PYX_ERR(0, 26, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_u_gdw, __pyx_kp_u_0) < 0) __PYX_ERR(0, 26, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_starting, __pyx_t_2) < 0) __PYX_ERR(0, 26, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":27
 * 	return urllib2.urlopen(t)
 * starting = {"gameVersion":"21","binaryVersion":"35","gdw":"0"}
 * def getAccountID(username):             # <<<<<<<<<<<<<<
 * 	diction = {"str":username,"total":"0","page":"0","secret":"Wmfd2893gb7"}
 * 	d = dict(diction)
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4main_9getAccountID, NULL, __pyx_n_s_main); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_getAccountID, __pyx_t_2) < 0) __PYX_ERR(0, 27, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":36
 * 	try: return r.text.split(":")[21]
 * 	except: raise ValueError("Incorrect Username")
 * def xor(data, key):             # <<<<<<<<<<<<<<
 * 	xored = ''.join(chr(ord(x) ^ ord(y)) for (x,y) in zip(data, cycle(key)))
 * 	return base64.encodestring(xored.encode()).strip()
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4main_11xor, NULL, __pyx_n_s_main); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_xor, __pyx_t_2) < 0) __PYX_ERR(0, 36, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":39
 * 	xored = ''.join(chr(ord(x) ^ ord(y)) for (x,y) in zip(data, cycle(key)))
 * 	return base64.encodestring(xored.encode()).strip()
 * class Block:             # <<<<<<<<<<<<<<
 * 	items = {"1_9_color":"19","green":"8","player_color_1":"15","player_color_2":"16","text":"31","rotation_times_360":"69","target_group_id":"51","z_layer":"24","instant_count_comparison":"88","copy_opacity":"60","custom_rotation_speed":"97","substract_count":"78","pulse_target_type":"52","move_target_enabled":"100","count":"77","spawn_delay":"63","color1":"21","pulse_exclusive":"86","color2":"22","rotation":"6","group_ids":"57","follow_player_y_offset":"92","move_trigger_9_units":"29","multi_trigger":"87","rotation_lock":"70","red":"7","group_parent":"34","dont_enter":"67","touch_dual_mode":"89","spawn_triggered":"62","is_flipped_horizontal":"4","duration":"10","blue":"9","activate_group":"56","dynamic_block":"93","follow_player_y_delay":"91","move_lock_to_player_y":"59","move_lock_to_player_x":"58","target_color_id":"23","follow_y_mod":"73","follow_player_y_speed":"90","is_flipped_vertical":"5","touch_toggle":"82","item_id":"80","glow_disabled":"96","copied_color_hsv_values":"49","hold_mode":"81","pickup_mode":"79","editor_layer_2":"61","editor_layer_1":"20","pulse_detail_only":"66","hsv_enabled_1":"41","hsv_enabled_2":"42","shake_strength":"75","is_active_trigger_type":"36","move_target_pos_coordinates":"101","portal_checked":"13","teleportation_yellow_distance":"54","blending":"17","pulse_hold":"46","pulsing_animation_randomize":"106","size":"32","disable_rotation":"98","collision_block_b_id":"95","high_detail":"103","rotation_degrees":"68","pulse_main_only":"65","pulse_fade_out":"47","x_position":"2","z_order":"25","dont_fade":"64","easing_rate":"85","hsv_values_1":"43","hsv_values_2":"44","follow_x_mod":"72","pulse_fade_in":"45","spawn_editor_disable":"102","move_trigger_x_units":"28","blockid":"1","linked_group":"108","follow_player_y_max_speed":"105","touch_triggered":"11","opacity":"35","copied_color_id":"50","pulse_mode":"48","y_position":"3","shake_interval":"84","pulsing_animation_speed":"107","count_multi_activate":"99","easing":"30","follow_group_id":"71"}
 * 	otheritems = {v: k for k, v in items.items()}
 */
  __pyx_t_2 = __Pyx_Py3MetaclassPrepare((PyObject *) NULL, __pyx_empty_tuple, __pyx_n_s_Block, __pyx_n_s_Block, (PyObject *) NULL, __pyx_n_s_main, (PyObject *) NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "../../pyedit_engine/cy/PyLvl.pyx":40
 * 	return base64.encodestring(xored.encode()).strip()
 * class Block:
 * 	items = {"1_9_color":"19","green":"8","player_color_1":"15","player_color_2":"16","text":"31","rotation_times_360":"69","target_group_id":"51","z_layer":"24","instant_count_comparison":"88","copy_opacity":"60","custom_rotation_speed":"97","substract_count":"78","pulse_target_type":"52","move_target_enabled":"100","count":"77","spawn_delay":"63","color1":"21","pulse_exclusive":"86","color2":"22","rotation":"6","group_ids":"57","follow_player_y_offset":"92","move_trigger_9_units":"29","multi_trigger":"87","rotation_lock":"70","red":"7","group_parent":"34","dont_enter":"67","touch_dual_mode":"89","spawn_triggered":"62","is_flipped_horizontal":"4","duration":"10","blue":"9","activate_group":"56","dynamic_block":"93","follow_player_y_delay":"91","move_lock_to_player_y":"59","move_lock_to_player_x":"58","target_color_id":"23","follow_y_mod":"73","follow_player_y_speed":"90","is_flipped_vertical":"5","touch_toggle":"82","item_id":"80","glow_disabled":"96","copied_color_hsv_values":"49","hold_mode":"81","pickup_mode":"79","editor_layer_2":"61","editor_layer_1":"20","pulse_detail_only":"66","hsv_enabled_1":"41","hsv_enabled_2":"42","shake_strength":"75","is_active_trigger_type":"36","move_target_pos_coordinates":"101","portal_checked":"13","teleportation_yellow_distance":"54","blending":"17","pulse_hold":"46","pulsing_animation_randomize":"106","size":"32","disable_rotation":"98","collision_block_b_id":"95","high_detail":"103","rotation_degrees":"68","pulse_main_only":"65","pulse_fade_out":"47","x_position":"2","z_order":"25","dont_fade":"64","easing_rate":"85","hsv_values_1":"43","hsv_values_2":"44","follow_x_mod":"72","pulse_fade_in":"45","spawn_editor_disable":"102","move_trigger_x_units":"28","blockid":"1","linked_group":"108","follow_player_y_max_speed":"105","touch_triggered":"11","opacity":"35","copied_color_id":"50","pulse_mode":"48","y_position":"3","shake_interval":"84","pulsing_animation_speed":"107","count_multi_activate":"99","easing":"30","follow_group_id":"71"}             # <<<<<<<<<<<<<<
 * 	otheritems = {v: k for k, v in items.items()}
 * 	def __init__(self,**kwargs):
 */
  __pyx_t_3 = __Pyx_PyDict_NewPresized(91); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_kp_u_1_9_color, __pyx_kp_u_19) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_green, __pyx_kp_u_8) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_player_color_1, __pyx_kp_u_15) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_player_color_2, __pyx_kp_u_16) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_text, __pyx_kp_u_31) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_rotation_times_360, __pyx_kp_u_69) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_target_group_id, __pyx_kp_u_51) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_z_layer, __pyx_kp_u_24) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_instant_count_comparison, __pyx_kp_u_88) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_copy_opacity, __pyx_kp_u_60) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_custom_rotation_speed, __pyx_kp_u_97) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_substract_count, __pyx_kp_u_78) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_pulse_target_type, __pyx_kp_u_52) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_move_target_enabled, __pyx_kp_u_100) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_count, __pyx_kp_u_77) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_spawn_delay, __pyx_kp_u_63) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_color1, __pyx_kp_u_21) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_pulse_exclusive, __pyx_kp_u_86) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_color2, __pyx_kp_u_22) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_rotation, __pyx_kp_u_6) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_group_ids, __pyx_kp_u_57) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_follow_player_y_offset, __pyx_kp_u_92) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_move_trigger_9_units, __pyx_kp_u_29) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_multi_trigger, __pyx_kp_u_87) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_rotation_lock, __pyx_kp_u_70) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_red, __pyx_kp_u_7) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_group_parent, __pyx_kp_u_34) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_dont_enter, __pyx_kp_u_67) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_touch_dual_mode, __pyx_kp_u_89) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_spawn_triggered, __pyx_kp_u_62) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_is_flipped_horizontal, __pyx_kp_u_4) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_duration, __pyx_kp_u_10) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_blue, __pyx_kp_u_9) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_activate_group, __pyx_kp_u_56) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_dynamic_block, __pyx_kp_u_93) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_follow_player_y_delay, __pyx_kp_u_91) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_move_lock_to_player_y, __pyx_kp_u_59) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_move_lock_to_player_x, __pyx_kp_u_58) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_target_color_id, __pyx_kp_u_23) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_follow_y_mod, __pyx_kp_u_73) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_follow_player_y_speed, __pyx_kp_u_90) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_is_flipped_vertical, __pyx_kp_u_5) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_touch_toggle, __pyx_kp_u_82) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_item_id, __pyx_kp_u_80) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_glow_disabled, __pyx_kp_u_96) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_copied_color_hsv_values, __pyx_kp_u_49) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_hold_mode, __pyx_kp_u_81) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_pickup_mode, __pyx_kp_u_79) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_editor_layer_2, __pyx_kp_u_61) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_editor_layer_1, __pyx_kp_u_20) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_pulse_detail_only, __pyx_kp_u_66) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_hsv_enabled_1, __pyx_kp_u_41) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_hsv_enabled_2, __pyx_kp_u_42) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_shake_strength, __pyx_kp_u_75) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_is_active_trigger_type, __pyx_kp_u_36) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_move_target_pos_coordinates, __pyx_kp_u_101) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_portal_checked, __pyx_kp_u_13) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_teleportation_yellow_distance, __pyx_kp_u_54) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_blending, __pyx_kp_u_17) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_pulse_hold, __pyx_kp_u_46) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_pulsing_animation_randomize, __pyx_kp_u_106) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_size, __pyx_kp_u_32) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_disable_rotation, __pyx_kp_u_98) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_collision_block_b_id, __pyx_kp_u_95) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_high_detail, __pyx_kp_u_103) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_rotation_degrees, __pyx_kp_u_68) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_pulse_main_only, __pyx_kp_u_65) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_pulse_fade_out, __pyx_kp_u_47) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_x_position, __pyx_kp_u_2) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_z_order, __pyx_kp_u_25) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_dont_fade, __pyx_kp_u_64) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_easing_rate, __pyx_kp_u_85) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_hsv_values_1, __pyx_kp_u_43) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_hsv_values_2, __pyx_kp_u_44) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_follow_x_mod, __pyx_kp_u_72) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_pulse_fade_in, __pyx_kp_u_45) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_spawn_editor_disable, __pyx_kp_u_102) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_move_trigger_x_units, __pyx_kp_u_28) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_blockid, __pyx_kp_u_1) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_linked_group, __pyx_kp_u_108) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_follow_player_y_max_speed, __pyx_kp_u_105) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_touch_triggered, __pyx_kp_u_11) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_opacity, __pyx_kp_u_35) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_copied_color_id, __pyx_kp_u_50) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_pulse_mode, __pyx_kp_u_48) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_y_position, __pyx_kp_u_3) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_shake_interval, __pyx_kp_u_84) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_pulsing_animation_speed, __pyx_kp_u_107) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_count_multi_activate, __pyx_kp_u_99) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_easing, __pyx_kp_u_30) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_follow_group_id, __pyx_kp_u_71) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_items, __pyx_t_3) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":41
 * class Block:
 * 	items = {"1_9_color":"19","green":"8","player_color_1":"15","player_color_2":"16","text":"31","rotation_times_360":"69","target_group_id":"51","z_layer":"24","instant_count_comparison":"88","copy_opacity":"60","custom_rotation_speed":"97","substract_count":"78","pulse_target_type":"52","move_target_enabled":"100","count":"77","spawn_delay":"63","color1":"21","pulse_exclusive":"86","color2":"22","rotation":"6","group_ids":"57","follow_player_y_offset":"92","move_trigger_9_units":"29","multi_trigger":"87","rotation_lock":"70","red":"7","group_parent":"34","dont_enter":"67","touch_dual_mode":"89","spawn_triggered":"62","is_flipped_horizontal":"4","duration":"10","blue":"9","activate_group":"56","dynamic_block":"93","follow_player_y_delay":"91","move_lock_to_player_y":"59","move_lock_to_player_x":"58","target_color_id":"23","follow_y_mod":"73","follow_player_y_speed":"90","is_flipped_vertical":"5","touch_toggle":"82","item_id":"80","glow_disabled":"96","copied_color_hsv_values":"49","hold_mode":"81","pickup_mode":"79","editor_layer_2":"61","editor_layer_1":"20","pulse_detail_only":"66","hsv_enabled_1":"41","hsv_enabled_2":"42","shake_strength":"75","is_active_trigger_type":"36","move_target_pos_coordinates":"101","portal_checked":"13","teleportation_yellow_distance":"54","blending":"17","pulse_hold":"46","pulsing_animation_randomize":"106","size":"32","disable_rotation":"98","collision_block_b_id":"95","high_detail":"103","rotation_degrees":"68","pulse_main_only":"65","pulse_fade_out":"47","x_position":"2","z_order":"25","dont_fade":"64","easing_rate":"85","hsv_values_1":"43","hsv_values_2":"44","follow_x_mod":"72","pulse_fade_in":"45","spawn_editor_disable":"102","move_trigger_x_units":"28","blockid":"1","linked_group":"108","follow_player_y_max_speed":"105","touch_triggered":"11","opacity":"35","copied_color_id":"50","pulse_mode":"48","y_position":"3","shake_interval":"84","pulsing_animation_speed":"107","count_multi_activate":"99","easing":"30","follow_group_id":"71"}
 * 	otheritems = {v: k for k, v in items.items()}             # <<<<<<<<<<<<<<
 * 	def __init__(self,**kwargs):
 * 		self.levelstring = ""
 */
  { /* enter inner scope */
    __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 41, __pyx_L12_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_9 = 0;
    __pyx_t_8 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_items);
    if (unlikely(!__pyx_t_8)) {
      PyErr_Clear();
      __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_items);
    }
    if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 41, __pyx_L12_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_4 = __Pyx_dict_iterator(__pyx_t_8, 0, __pyx_n_s_items, (&__pyx_t_10), (&__pyx_t_11)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 41, __pyx_L12_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_1);
    __pyx_t_1 = __pyx_t_4;
    __pyx_t_4 = 0;
    while (1) {
      __pyx_t_12 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_10, &__pyx_t_9, &__pyx_t_4, &__pyx_t_8, NULL, __pyx_t_11);
      if (unlikely(__pyx_t_12 == 0)) break;
      if (unlikely(__pyx_t_12 == -1)) __PYX_ERR(0, 41, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_XDECREF_SET(__pyx_8genexpr4__pyx_v_4main_5Block_k, __pyx_t_4);
      __pyx_t_4 = 0;
      __Pyx_XDECREF_SET(__pyx_8genexpr4__pyx_v_4main_5Block_v, __pyx_t_8);
      __pyx_t_8 = 0;
      if (unlikely(PyDict_SetItem(__pyx_t_3, (PyObject*)__pyx_8genexpr4__pyx_v_4main_5Block_v, (PyObject*)__pyx_8genexpr4__pyx_v_4main_5Block_k))) __PYX_ERR(0, 41, __pyx_L12_error)
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_8genexpr4__pyx_v_4main_5Block_k); __pyx_8genexpr4__pyx_v_4main_5Block_k = 0;
    __Pyx_XDECREF(__pyx_8genexpr4__pyx_v_4main_5Block_v); __pyx_8genexpr4__pyx_v_4main_5Block_v = 0;
    goto __pyx_L15_exit_scope;
    __pyx_L12_error:;
    __Pyx_XDECREF(__pyx_8genexpr4__pyx_v_4main_5Block_k); __pyx_8genexpr4__pyx_v_4main_5Block_k = 0;
    __Pyx_XDECREF(__pyx_8genexpr4__pyx_v_4main_5Block_v); __pyx_8genexpr4__pyx_v_4main_5Block_v = 0;
    goto __pyx_L1_error;
    __pyx_L15_exit_scope:;
  } /* exit inner scope */
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_otheritems, __pyx_t_3) < 0) __PYX_ERR(0, 41, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":42
 * 	items = {"1_9_color":"19","green":"8","player_color_1":"15","player_color_2":"16","text":"31","rotation_times_360":"69","target_group_id":"51","z_layer":"24","instant_count_comparison":"88","copy_opacity":"60","custom_rotation_speed":"97","substract_count":"78","pulse_target_type":"52","move_target_enabled":"100","count":"77","spawn_delay":"63","color1":"21","pulse_exclusive":"86","color2":"22","rotation":"6","group_ids":"57","follow_player_y_offset":"92","move_trigger_9_units":"29","multi_trigger":"87","rotation_lock":"70","red":"7","group_parent":"34","dont_enter":"67","touch_dual_mode":"89","spawn_triggered":"62","is_flipped_horizontal":"4","duration":"10","blue":"9","activate_group":"56","dynamic_block":"93","follow_player_y_delay":"91","move_lock_to_player_y":"59","move_lock_to_player_x":"58","target_color_id":"23","follow_y_mod":"73","follow_player_y_speed":"90","is_flipped_vertical":"5","touch_toggle":"82","item_id":"80","glow_disabled":"96","copied_color_hsv_values":"49","hold_mode":"81","pickup_mode":"79","editor_layer_2":"61","editor_layer_1":"20","pulse_detail_only":"66","hsv_enabled_1":"41","hsv_enabled_2":"42","shake_strength":"75","is_active_trigger_type":"36","move_target_pos_coordinates":"101","portal_checked":"13","teleportation_yellow_distance":"54","blending":"17","pulse_hold":"46","pulsing_animation_randomize":"106","size":"32","disable_rotation":"98","collision_block_b_id":"95","high_detail":"103","rotation_degrees":"68","pulse_main_only":"65","pulse_fade_out":"47","x_position":"2","z_order":"25","dont_fade":"64","easing_rate":"85","hsv_values_1":"43","hsv_values_2":"44","follow_x_mod":"72","pulse_fade_in":"45","spawn_editor_disable":"102","move_trigger_x_units":"28","blockid":"1","linked_group":"108","follow_player_y_max_speed":"105","touch_triggered":"11","opacity":"35","copied_color_id":"50","pulse_mode":"48","y_position":"3","shake_interval":"84","pulsing_animation_speed":"107","count_multi_activate":"99","easing":"30","follow_group_id":"71"}
 * 	otheritems = {v: k for k, v in items.items()}
 * 	def __init__(self,**kwargs):             # <<<<<<<<<<<<<<
 * 		self.levelstring = ""
 * 		self.json = {"blockid":str(kwargs.get("blockid")),"x_position":str(kwargs.get("x_position")),"y_position":str(kwargs.get("y_position"))}
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_4main_5Block_1__init__, 0, __pyx_n_s_Block___init, NULL, __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__61)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_init_2, __pyx_t_3) < 0) __PYX_ERR(0, 42, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":46
 * 		self.json = {"blockid":str(kwargs.get("blockid")),"x_position":str(kwargs.get("x_position")),"y_position":str(kwargs.get("y_position"))}
 * 		for i in kwargs: self.json[i] = kwargs[i]
 * 	def __getitem__(self,e):             # <<<<<<<<<<<<<<
 * 		if e in self.json:
 * 			return self.json[e]
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_4main_5Block_3__getitem__, 0, __pyx_n_s_Block___getitem, NULL, __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__63)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_getitem, __pyx_t_3) < 0) __PYX_ERR(0, 46, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":51
 * 		else:
 * 			return '0'
 * 	def __setitem__(self,e,f):             # <<<<<<<<<<<<<<
 * 		self.json[e] = f
 * 	def __str__(self):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_4main_5Block_5__setitem__, 0, __pyx_n_s_Block___setitem, NULL, __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__65)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_setitem, __pyx_t_3) < 0) __PYX_ERR(0, 51, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":53
 * 	def __setitem__(self,e,f):
 * 		self.json[e] = f
 * 	def __str__(self):             # <<<<<<<<<<<<<<
 * 		ar = []
 * 		for i in self.json:
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_4main_5Block_7__str__, 0, __pyx_n_s_Block___str, NULL, __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__67)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_str_2, __pyx_t_3) < 0) __PYX_ERR(0, 53, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":59
 * 			ar.append(str(self.json[i]))
 * 		return ','.join(ar)
 * 	def change(self,**kwargs):             # <<<<<<<<<<<<<<
 * 		a = Block(**self.json)
 * 		for i in kwargs:
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_4main_5Block_9change, 0, __pyx_n_s_Block_change, NULL, __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__69)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_change, __pyx_t_3) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":65
 * 		return a
 * 	@staticmethod
 * 	def blockFromString(stri):             # <<<<<<<<<<<<<<
 * 		a = stri.split(',')
 * 		evens = a[1::2]
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_4main_5Block_11blockFromString, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_Block_blockFromString, NULL, __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__71)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);

  /* "../../pyedit_engine/cy/PyLvl.pyx":64
 * 			a[i] = kwargs[i]
 * 		return a
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def blockFromString(stri):
 * 		a = stri.split(',')
 */
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 64, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_blockFromString, __pyx_t_1) < 0) __PYX_ERR(0, 65, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":76
 * 		bloc = Block(**jso)
 * 		return bloc
 * 	def __repr__(self):             # <<<<<<<<<<<<<<
 * 		return self.__str__()
 * 	def coords(self):
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_4main_5Block_13__repr__, 0, __pyx_n_s_Block___repr, NULL, __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__73)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 76, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_repr, __pyx_t_1) < 0) __PYX_ERR(0, 76, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":78
 * 	def __repr__(self):
 * 		return self.__str__()
 * 	def coords(self):             # <<<<<<<<<<<<<<
 * 		return [float(self['x_position']), float(self['y_position'])]
 * 	def setCoords(self, x='d', y='d'):
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_4main_5Block_15coords, 0, __pyx_n_s_Block_coords, NULL, __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__75)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 78, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_coords, __pyx_t_1) < 0) __PYX_ERR(0, 78, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":80
 * 	def coords(self):
 * 		return [float(self['x_position']), float(self['y_position'])]
 * 	def setCoords(self, x='d', y='d'):             # <<<<<<<<<<<<<<
 * 		if x!='d':
 * 			self['x_position'] = str(x)
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_4main_5Block_17setCoords, 0, __pyx_n_s_Block_setCoords, NULL, __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__77)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 80, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_1, __pyx_tuple__78);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_setCoords, __pyx_t_1) < 0) __PYX_ERR(0, 80, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":85
 * 		if y!='d':
 * 			self['y_position'] = str(y)
 * 	def rotate(self, degrees=0.):             # <<<<<<<<<<<<<<
 * 		rot = float(self['rotation'])
 * 		self['rotation'] = str(rot+degrees)
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_4main_5Block_19rotate, 0, __pyx_n_s_Block_rotate, NULL, __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__80)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 85, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_1, __pyx_tuple__81);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_rotate, __pyx_t_1) < 0) __PYX_ERR(0, 85, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":39
 * 	xored = ''.join(chr(ord(x) ^ ord(y)) for (x,y) in zip(data, cycle(key)))
 * 	return base64.encodestring(xored.encode()).strip()
 * class Block:             # <<<<<<<<<<<<<<
 * 	items = {"1_9_color":"19","green":"8","player_color_1":"15","player_color_2":"16","text":"31","rotation_times_360":"69","target_group_id":"51","z_layer":"24","instant_count_comparison":"88","copy_opacity":"60","custom_rotation_speed":"97","substract_count":"78","pulse_target_type":"52","move_target_enabled":"100","count":"77","spawn_delay":"63","color1":"21","pulse_exclusive":"86","color2":"22","rotation":"6","group_ids":"57","follow_player_y_offset":"92","move_trigger_9_units":"29","multi_trigger":"87","rotation_lock":"70","red":"7","group_parent":"34","dont_enter":"67","touch_dual_mode":"89","spawn_triggered":"62","is_flipped_horizontal":"4","duration":"10","blue":"9","activate_group":"56","dynamic_block":"93","follow_player_y_delay":"91","move_lock_to_player_y":"59","move_lock_to_player_x":"58","target_color_id":"23","follow_y_mod":"73","follow_player_y_speed":"90","is_flipped_vertical":"5","touch_toggle":"82","item_id":"80","glow_disabled":"96","copied_color_hsv_values":"49","hold_mode":"81","pickup_mode":"79","editor_layer_2":"61","editor_layer_1":"20","pulse_detail_only":"66","hsv_enabled_1":"41","hsv_enabled_2":"42","shake_strength":"75","is_active_trigger_type":"36","move_target_pos_coordinates":"101","portal_checked":"13","teleportation_yellow_distance":"54","blending":"17","pulse_hold":"46","pulsing_animation_randomize":"106","size":"32","disable_rotation":"98","collision_block_b_id":"95","high_detail":"103","rotation_degrees":"68","pulse_main_only":"65","pulse_fade_out":"47","x_position":"2","z_order":"25","dont_fade":"64","easing_rate":"85","hsv_values_1":"43","hsv_values_2":"44","follow_x_mod":"72","pulse_fade_in":"45","spawn_editor_disable":"102","move_trigger_x_units":"28","blockid":"1","linked_group":"108","follow_player_y_max_speed":"105","touch_triggered":"11","opacity":"35","copied_color_id":"50","pulse_mode":"48","y_position":"3","shake_interval":"84","pulsing_animation_speed":"107","count_multi_activate":"99","easing":"30","follow_group_id":"71"}
 * 	otheritems = {v: k for k, v in items.items()}
 */
  __pyx_t_1 = __Pyx_Py3ClassCreate(((PyObject*)&__Pyx_DefaultClassType), __pyx_n_s_Block, __pyx_empty_tuple, __pyx_t_2, NULL, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Block, __pyx_t_1) < 0) __PYX_ERR(0, 39, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":88
 * 		rot = float(self['rotation'])
 * 		self['rotation'] = str(rot+degrees)
 * class Header:             # <<<<<<<<<<<<<<
 * 	key = {'mini': 'kA3', 'ground_line': 'kA17', 'background': 'kA6', 'dual': 'kA8', 'fade_out': 'kA16', 'ground': 'kA7', 'song_offset': 'kA13', 'colors': 'kS38', '2_player': 'kA10', 'vehicle': 'kA2', 'font': 'kA18', 'speed': 'kA4', 'fade_in': 'kA15',"nothing":"kA14","idk":"kA9","nutin":"kA11","ww":"kS39"}
 * 	def __init__(self,**kwargs):
 */
  __pyx_t_2 = __Pyx_Py3MetaclassPrepare((PyObject *) NULL, __pyx_empty_tuple, __pyx_n_s_Header, __pyx_n_s_Header, (PyObject *) NULL, __pyx_n_s_main, (PyObject *) NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 88, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "../../pyedit_engine/cy/PyLvl.pyx":89
 * 		self['rotation'] = str(rot+degrees)
 * class Header:
 * 	key = {'mini': 'kA3', 'ground_line': 'kA17', 'background': 'kA6', 'dual': 'kA8', 'fade_out': 'kA16', 'ground': 'kA7', 'song_offset': 'kA13', 'colors': 'kS38', '2_player': 'kA10', 'vehicle': 'kA2', 'font': 'kA18', 'speed': 'kA4', 'fade_in': 'kA15',"nothing":"kA14","idk":"kA9","nutin":"kA11","ww":"kS39"}             # <<<<<<<<<<<<<<
 * 	def __init__(self,**kwargs):
 * 		self.json = {'colors': '1_40_2_125_3_255_11_255_12_255_13_255_4_-1_6_1000_7_1_15_1_18_0_8_1|1_0_2_102_3_255_11_255_12_255_13_255_4_-1_6_1001_7_1_15_1_18_0_8_1|1_0_2_102_3_255_11_255_12_255_13_255_4_-1_6_1009_7_1_15_1_18_0_8_1|1_255_2_255_3_255_11_255_12_255_13_255_4_-1_6_1002_5_1_7_1_15_1_18_0_8_1|1_0_2_255_3_125_11_255_12_255_13_255_4_-1_6_1005_5_1_7_1_15_1_18_0_8_1|1_0_2_255_3_125_11_255_12_255_13_255_4_-1_6_1006_5_1_7_1_15_1_18_0_8_1|1_0_2_0_3_0_11_255_12_255_13_255_4_-1_6_3_7_1_15_1_18_0_8_1|','song_offset': '0','fade_in': '0','fade_out': '0',"nothing":"",'background': '1', 'ground': '0', 'ground_line': '0', 'font': '0',"ww":"0","vehicle":'0','mini':'0','dual':'0',"speed":"0","idk":"0","2_player":"0","nutin":"0"}
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(17); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 89, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_mini, __pyx_n_u_kA3) < 0) __PYX_ERR(0, 89, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_ground_line, __pyx_n_u_kA17) < 0) __PYX_ERR(0, 89, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_background, __pyx_n_u_kA6) < 0) __PYX_ERR(0, 89, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_dual, __pyx_n_u_kA8) < 0) __PYX_ERR(0, 89, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_fade_out, __pyx_n_u_kA16) < 0) __PYX_ERR(0, 89, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_ground, __pyx_n_u_kA7) < 0) __PYX_ERR(0, 89, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_song_offset, __pyx_n_u_kA13) < 0) __PYX_ERR(0, 89, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_colors, __pyx_n_u_kS38) < 0) __PYX_ERR(0, 89, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_kp_u_2_player, __pyx_n_u_kA10) < 0) __PYX_ERR(0, 89, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_vehicle, __pyx_n_u_kA2) < 0) __PYX_ERR(0, 89, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_font, __pyx_n_u_kA18) < 0) __PYX_ERR(0, 89, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_speed, __pyx_n_u_kA4) < 0) __PYX_ERR(0, 89, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_fade_in, __pyx_n_u_kA15) < 0) __PYX_ERR(0, 89, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_nothing, __pyx_n_u_kA14) < 0) __PYX_ERR(0, 89, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_idk, __pyx_n_u_kA9) < 0) __PYX_ERR(0, 89, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_nutin, __pyx_n_u_kA11) < 0) __PYX_ERR(0, 89, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_ww, __pyx_n_u_kS39) < 0) __PYX_ERR(0, 89, __pyx_L1_error)
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_key, __pyx_t_1) < 0) __PYX_ERR(0, 89, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":90
 * class Header:
 * 	key = {'mini': 'kA3', 'ground_line': 'kA17', 'background': 'kA6', 'dual': 'kA8', 'fade_out': 'kA16', 'ground': 'kA7', 'song_offset': 'kA13', 'colors': 'kS38', '2_player': 'kA10', 'vehicle': 'kA2', 'font': 'kA18', 'speed': 'kA4', 'fade_in': 'kA15',"nothing":"kA14","idk":"kA9","nutin":"kA11","ww":"kS39"}
 * 	def __init__(self,**kwargs):             # <<<<<<<<<<<<<<
 * 		self.json = {'colors': '1_40_2_125_3_255_11_255_12_255_13_255_4_-1_6_1000_7_1_15_1_18_0_8_1|1_0_2_102_3_255_11_255_12_255_13_255_4_-1_6_1001_7_1_15_1_18_0_8_1|1_0_2_102_3_255_11_255_12_255_13_255_4_-1_6_1009_7_1_15_1_18_0_8_1|1_255_2_255_3_255_11_255_12_255_13_255_4_-1_6_1002_5_1_7_1_15_1_18_0_8_1|1_0_2_255_3_125_11_255_12_255_13_255_4_-1_6_1005_5_1_7_1_15_1_18_0_8_1|1_0_2_255_3_125_11_255_12_255_13_255_4_-1_6_1006_5_1_7_1_15_1_18_0_8_1|1_0_2_0_3_0_11_255_12_255_13_255_4_-1_6_3_7_1_15_1_18_0_8_1|','song_offset': '0','fade_in': '0','fade_out': '0',"nothing":"",'background': '1', 'ground': '0', 'ground_line': '0', 'font': '0',"ww":"0","vehicle":'0','mini':'0','dual':'0',"speed":"0","idk":"0","2_player":"0","nutin":"0"}
 * 		for i in kwargs:
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_4main_6Header_1__init__, 0, __pyx_n_s_Header___init, NULL, __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__83)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 90, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_init_2, __pyx_t_1) < 0) __PYX_ERR(0, 90, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":94
 * 		for i in kwargs:
 * 			self.json[i] = kwargs[i]
 * 	def __getitem__(self,e):             # <<<<<<<<<<<<<<
 * 		return self.json[e]
 * 	def __setitem__(self,e,f):
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_4main_6Header_3__getitem__, 0, __pyx_n_s_Header___getitem, NULL, __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__85)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 94, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_getitem, __pyx_t_1) < 0) __PYX_ERR(0, 94, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":96
 * 	def __getitem__(self,e):
 * 		return self.json[e]
 * 	def __setitem__(self,e,f):             # <<<<<<<<<<<<<<
 * 		self.json[e] = str(f)
 * 	def __str__(self):
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_4main_6Header_5__setitem__, 0, __pyx_n_s_Header___setitem, NULL, __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__87)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 96, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_setitem, __pyx_t_1) < 0) __PYX_ERR(0, 96, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":98
 * 	def __setitem__(self,e,f):
 * 		self.json[e] = str(f)
 * 	def __str__(self):             # <<<<<<<<<<<<<<
 * 		ar = []
 * 		for i in self.json:
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_4main_6Header_7__str__, 0, __pyx_n_s_Header___str, NULL, __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__89)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 98, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_str_2, __pyx_t_1) < 0) __PYX_ERR(0, 98, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":104
 * 			ar.append(str(self.json[i]))
 * 		return ','.join(ar)
 * 	def __repr__(self):             # <<<<<<<<<<<<<<
 * 		return self.__str__()
 * class Level:
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_4main_6Header_9__repr__, 0, __pyx_n_s_Header___repr, NULL, __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__91)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_repr, __pyx_t_1) < 0) __PYX_ERR(0, 104, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":88
 * 		rot = float(self['rotation'])
 * 		self['rotation'] = str(rot+degrees)
 * class Header:             # <<<<<<<<<<<<<<
 * 	key = {'mini': 'kA3', 'ground_line': 'kA17', 'background': 'kA6', 'dual': 'kA8', 'fade_out': 'kA16', 'ground': 'kA7', 'song_offset': 'kA13', 'colors': 'kS38', '2_player': 'kA10', 'vehicle': 'kA2', 'font': 'kA18', 'speed': 'kA4', 'fade_in': 'kA15',"nothing":"kA14","idk":"kA9","nutin":"kA11","ww":"kS39"}
 * 	def __init__(self,**kwargs):
 */
  __pyx_t_1 = __Pyx_Py3ClassCreate(((PyObject*)&__Pyx_DefaultClassType), __pyx_n_s_Header, __pyx_empty_tuple, __pyx_t_2, NULL, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 88, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Header, __pyx_t_1) < 0) __PYX_ERR(0, 88, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":106
 * 	def __repr__(self):
 * 		return self.__str__()
 * class Level:             # <<<<<<<<<<<<<<
 * 	@staticmethod
 * 	def downloadLevel(levelname,lid):
 */
  __pyx_t_2 = __Pyx_Py3MetaclassPrepare((PyObject *) NULL, __pyx_empty_tuple, __pyx_n_s_Level, __pyx_n_s_Level, (PyObject *) NULL, __pyx_n_s_main, (PyObject *) NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 106, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "../../pyedit_engine/cy/PyLvl.pyx":108
 * class Level:
 * 	@staticmethod
 * 	def downloadLevel(levelname,lid):             # <<<<<<<<<<<<<<
 * 		return levelString(levelname,gzip.decompress(base64.b64decode(requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[7],'-_')).decode())
 * 	def getfGroupID(self):
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_4main_5Level_1downloadLevel, __Pyx_CYFUNCTION_STATICMETHOD, __pyx_n_s_Level_downloadLevel, NULL, __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__93)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "../../pyedit_engine/cy/PyLvl.pyx":107
 * 		return self.__str__()
 * class Level:
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def downloadLevel(levelname,lid):
 * 		return levelString(levelname,gzip.decompress(base64.b64decode(requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[7],'-_')).decode())
 */
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 107, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_downloadLevel, __pyx_t_3) < 0) __PYX_ERR(0, 108, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":110
 * 	def downloadLevel(levelname,lid):
 * 		return levelString(levelname,gzip.decompress(base64.b64decode(requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[7],'-_')).decode())
 * 	def getfGroupID(self):             # <<<<<<<<<<<<<<
 * 		ids = [0]
 * 		for i in self.blocks:
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_4main_5Level_3getfGroupID, 0, __pyx_n_s_Level_getfGroupID, NULL, __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__95)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_getfGroupID, __pyx_t_3) < 0) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":120
 * 			if ids[i] != ids[i-1]+1:
 * 				return i
 * 	def blocksInGroup(self, groupid):             # <<<<<<<<<<<<<<
 * 		out = []
 * 		for b in self.blocks:
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_4main_5Level_5blocksInGroup, 0, __pyx_n_s_Level_blocksInGroup, NULL, __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__97)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 120, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_blocksInGroup, __pyx_t_3) < 0) __PYX_ERR(0, 120, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":127
 * 				out.append(b)
 * 		return out
 * 	def __init__(self,levelname,**kwargs):             # <<<<<<<<<<<<<<
 * 		self.header = Header(**kwargs)
 * 		self.blocks = []
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_4main_5Level_7__init__, 0, __pyx_n_s_Level___init, NULL, __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__99)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_init_2, __pyx_t_3) < 0) __PYX_ERR(0, 127, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":132
 * 		self.name = levelname
 * 		self.str = ""
 * 	def addBlock(self,a,b,c,**kwargs):             # <<<<<<<<<<<<<<
 * 		aa = {"x_position":b,"y_position":c,"blockid":a}
 * 		b = Block(**dict(aa,**kwargs))
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_4main_5Level_9addBlock, 0, __pyx_n_s_Level_addBlock, NULL, __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__101)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_addBlock, __pyx_t_3) < 0) __PYX_ERR(0, 132, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":137
 * 		self.blocks.append(b)
 * 		return b
 * 	def addBlocks(self, *args):             # <<<<<<<<<<<<<<
 * 		for i in args:
 * 			if hasattr(i,'coords'):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_4main_5Level_11addBlocks, 0, __pyx_n_s_Level_addBlocks, NULL, __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__103)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_addBlocks, __pyx_t_3) < 0) __PYX_ERR(0, 137, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":141
 * 			if hasattr(i,'coords'):
 * 				self.blocks.append(i)
 * 	def uploadLevel(self,username,password,description="",stars=0,unlisted=0,lpassword=0,songid=0,audiotrack=1,twoPlayer=0,fromString=False,coins='0',url="http://boomlings.com/database/uploadGJLevel21.php",version=1,levelid=0):             # <<<<<<<<<<<<<<
 * 		if not fromString:
 * 			self.encodee()
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_4main_5Level_13uploadLevel, 0, __pyx_n_s_Level_uploadLevel, NULL, __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__105)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_tuple__106);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_uploadLevel, __pyx_t_3) < 0) __PYX_ERR(0, 141, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":150
 * 		dictionary.update(starting)
 * 		return urlopen(url,urlencode(dictionary).replace('%3D','=')).read().decode()
 * 	def __str__(self):             # <<<<<<<<<<<<<<
 * 		return str(self.header) + ';' + ';'.join([str(x) for x in self.blocks])
 * 	def encodee(self):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_4main_5Level_15__str__, 0, __pyx_n_s_Level___str, NULL, __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__108)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 150, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_str_2, __pyx_t_3) < 0) __PYX_ERR(0, 150, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":152
 * 	def __str__(self):
 * 		return str(self.header) + ';' + ';'.join([str(x) for x in self.blocks])
 * 	def encodee(self):             # <<<<<<<<<<<<<<
 * 		data = base64.b64encode((gzip.compress(self.__str__().encode(),compresslevel=6)))
 * 		self.encoded = data.replace(data[4:13],b"AAAAAAAAE").replace(b"+",b"-").replace(b"/",b"_").decode()
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_4main_5Level_17encodee, 0, __pyx_n_s_Level_encodee, NULL, __pyx_n_s_main, __pyx_d, ((PyObject *)__pyx_codeobj__110)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_encodee, __pyx_t_3) < 0) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":106
 * 	def __repr__(self):
 * 		return self.__str__()
 * class Level:             # <<<<<<<<<<<<<<
 * 	@staticmethod
 * 	def downloadLevel(levelname,lid):
 */
  __pyx_t_3 = __Pyx_Py3ClassCreate(((PyObject*)&__Pyx_DefaultClassType), __pyx_n_s_Level, __pyx_empty_tuple, __pyx_t_2, NULL, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 106, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Level, __pyx_t_3) < 0) __PYX_ERR(0, 106, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":155
 * 		data = base64.b64encode((gzip.compress(self.__str__().encode(),compresslevel=6)))
 * 		self.encoded = data.replace(data[4:13],b"AAAAAAAAE").replace(b"+",b"-").replace(b"/",b"_").decode()
 * def getSong(lid):             # <<<<<<<<<<<<<<
 * 		return requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[49]
 * def levelString(levelname,lstr):
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4main_13getSong, NULL, __pyx_n_s_main); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_getSong, __pyx_t_2) < 0) __PYX_ERR(0, 155, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":157
 * def getSong(lid):
 * 		return requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[49]
 * def levelString(levelname,lstr):             # <<<<<<<<<<<<<<
 * 	a = Level(levelname)
 * 	lst = lstr.split(";")
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4main_15levelString, NULL, __pyx_n_s_main); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_levelString, __pyx_t_2) < 0) __PYX_ERR(0, 157, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "../../pyedit_engine/cy/PyLvl.pyx":164
 * 		a.blocks.append(Block.blockFromString(i))
 * 	return a
 * def downloadLevel(levelname,lid):             # <<<<<<<<<<<<<<
 * 	base64.b64decode(requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[7],'-_')
 * 	return levelString(levelname,gzip.decompress(base64.b64decode(requests.post('http://www.boomlings.com/database/downloadGJLevel22.php','gameVersion=21&binaryVersion=35&gdw=0&levelID=%s&inc=0&extras=0&secret=Wmfd2893gb7'%lid,headers={'Content-Type':'application/x-www-form-urlencoded'}).text.split(':')[7],'-_')).decode())
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4main_17downloadLevel, NULL, __pyx_n_s_main); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_downloadLevel, __pyx_t_2) < 0) __PYX_ERR(0, 164, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "../../pyedit_engine/cy/PyEvent.pyx":2
 * from base cimport *
 * from collections import namedtuple             # <<<<<<<<<<<<<<
 * import threading
 * 
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(6, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_namedtuple);
  __Pyx_GIVEREF(__pyx_n_s_namedtuple);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_namedtuple);
  __pyx_t_3 = __Pyx_Import(__pyx_n_s_collections, __pyx_t_2, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_namedtuple); if (unlikely(!__pyx_t_2)) __PYX_ERR(6, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_namedtuple, __pyx_t_2) < 0) __PYX_ERR(6, 2, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/PyEvent.pyx":3
 * from base cimport *
 * from collections import namedtuple
 * import threading             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __Pyx_Import(__pyx_n_s_threading, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_threading, __pyx_t_3) < 0) __PYX_ERR(6, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "../../pyedit_engine/cy/PyEvent.pyx":7
 * 
 * 
 * PyEvent = namedtuple('PyEvent', 'handler name callback')             # <<<<<<<<<<<<<<
 * cdef class PyEventHandler:
 * 	cdef list events;
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_namedtuple); if (unlikely(!__pyx_t_3)) __PYX_ERR(6, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__117, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(6, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PyEvent, __pyx_t_2) < 0) __PYX_ERR(6, 7, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "main.pyx":1
 * #cython: language_level=3             # <<<<<<<<<<<<<<
 * from base cimport *
 * 
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "vector.to_py":60
 * 
 * @cname("__pyx_convert_vector_to_py_int")
 * cdef object __pyx_convert_vector_to_py_int(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [v[i] for i in range(v.size())]
 * 
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_8);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init main", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_CLEAR(__pyx_m);
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init main");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* decode_c_string */
static CYTHON_INLINE PyObject* __Pyx_decode_c_string(
         const char* cstring, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors)) {
    Py_ssize_t length;
    if (unlikely((start < 0) | (stop < 0))) {
        size_t slen = strlen(cstring);
        if (unlikely(slen > (size_t) PY_SSIZE_T_MAX)) {
            PyErr_SetString(PyExc_OverflowError,
                            "c-string too long to convert to Python");
            return NULL;
        }
        length = (Py_ssize_t) slen;
        if (start < 0) {
            start += length;
            if (start < 0)
                start = 0;
        }
        if (stop < 0)
            stop += length;
    }
    if (unlikely(stop <= start))
        return __Pyx_NewRef(__pyx_empty_unicode);
    length = stop - start;
    cstring += start;
    if (decode_func) {
        return decode_func(cstring, length, errors);
    } else {
        return PyUnicode_Decode(cstring, length, encoding, errors);
    }
}

/* BytesEquals */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    if (s1 == s2) {
        return (equals == Py_EQ);
    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {
        const char *ps1, *ps2;
        Py_ssize_t length = PyBytes_GET_SIZE(s1);
        if (length != PyBytes_GET_SIZE(s2))
            return (equals == Py_NE);
        ps1 = PyBytes_AS_STRING(s1);
        ps2 = PyBytes_AS_STRING(s2);
        if (ps1[0] != ps2[0]) {
            return (equals == Py_NE);
        } else if (length == 1) {
            return (equals == Py_EQ);
        } else {
            int result;
#if CYTHON_USE_UNICODE_INTERNALS
            Py_hash_t hash1, hash2;
            hash1 = ((PyBytesObject*)s1)->ob_shash;
            hash2 = ((PyBytesObject*)s2)->ob_shash;
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                return (equals == Py_NE);
            }
#endif
            result = memcmp(ps1, ps2, (size_t)length);
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {
        return (equals == Py_NE);
    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {
        return (equals == Py_NE);
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
#endif
}

/* UnicodeEquals */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
#if PY_MAJOR_VERSION < 3
    PyObject* owned_ref = NULL;
#endif
    int s1_is_unicode, s2_is_unicode;
    if (s1 == s2) {
        goto return_eq;
    }
    s1_is_unicode = PyUnicode_CheckExact(s1);
    s2_is_unicode = PyUnicode_CheckExact(s2);
#if PY_MAJOR_VERSION < 3
    if ((s1_is_unicode & (!s2_is_unicode)) && PyString_CheckExact(s2)) {
        owned_ref = PyUnicode_FromObject(s2);
        if (unlikely(!owned_ref))
            return -1;
        s2 = owned_ref;
        s2_is_unicode = 1;
    } else if ((s2_is_unicode & (!s1_is_unicode)) && PyString_CheckExact(s1)) {
        owned_ref = PyUnicode_FromObject(s1);
        if (unlikely(!owned_ref))
            return -1;
        s1 = owned_ref;
        s1_is_unicode = 1;
    } else if (((!s2_is_unicode) & (!s1_is_unicode))) {
        return __Pyx_PyBytes_Equals(s1, s2, equals);
    }
#endif
    if (s1_is_unicode & s2_is_unicode) {
        Py_ssize_t length;
        int kind;
        void *data1, *data2;
        if (unlikely(__Pyx_PyUnicode_READY(s1) < 0) || unlikely(__Pyx_PyUnicode_READY(s2) < 0))
            return -1;
        length = __Pyx_PyUnicode_GET_LENGTH(s1);
        if (length != __Pyx_PyUnicode_GET_LENGTH(s2)) {
            goto return_ne;
        }
#if CYTHON_USE_UNICODE_INTERNALS
        {
            Py_hash_t hash1, hash2;
        #if CYTHON_PEP393_ENABLED
            hash1 = ((PyASCIIObject*)s1)->hash;
            hash2 = ((PyASCIIObject*)s2)->hash;
        #else
            hash1 = ((PyUnicodeObject*)s1)->hash;
            hash2 = ((PyUnicodeObject*)s2)->hash;
        #endif
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                goto return_ne;
            }
        }
#endif
        kind = __Pyx_PyUnicode_KIND(s1);
        if (kind != __Pyx_PyUnicode_KIND(s2)) {
            goto return_ne;
        }
        data1 = __Pyx_PyUnicode_DATA(s1);
        data2 = __Pyx_PyUnicode_DATA(s2);
        if (__Pyx_PyUnicode_READ(kind, data1, 0) != __Pyx_PyUnicode_READ(kind, data2, 0)) {
            goto return_ne;
        } else if (length == 1) {
            goto return_eq;
        } else {
            int result = memcmp(data1, data2, (size_t)(length * kind));
            #if PY_MAJOR_VERSION < 3
            Py_XDECREF(owned_ref);
            #endif
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & s2_is_unicode) {
        goto return_ne;
    } else if ((s2 == Py_None) & s1_is_unicode) {
        goto return_ne;
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        #if PY_MAJOR_VERSION < 3
        Py_XDECREF(owned_ref);
        #endif
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
return_eq:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_EQ);
return_ne:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_NE);
#endif
}

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (Py_EnterRecursiveCall((char*)" while calling a Python object")) {
        return NULL;
    }
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif
#endif

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = Py_TYPE(func)->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallNoArg */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, NULL, 0);
    }
#endif
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || __Pyx_CyFunction_Check(func)))
#else
    if (likely(PyCFunction_Check(func)))
#endif
    {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

/* PyCFunctionFastCall */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject * __Pyx_PyCFunction_FastCall(PyObject *func_obj, PyObject **args, Py_ssize_t nargs) {
    PyCFunctionObject *func = (PyCFunctionObject*)func_obj;
    PyCFunction meth = PyCFunction_GET_FUNCTION(func);
    PyObject *self = PyCFunction_GET_SELF(func);
    int flags = PyCFunction_GET_FLAGS(func);
    assert(PyCFunction_Check(func));
    assert(METH_FASTCALL == (flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)));
    assert(nargs >= 0);
    assert(nargs == 0 || args != NULL);
    /* _PyCFunction_FastCallDict() must not be called with an exception set,
       because it may clear it (directly or indirectly) and so the
       caller loses its exception */
    assert(!PyErr_Occurred());
    if ((PY_VERSION_HEX < 0x030700A0) || unlikely(flags & METH_KEYWORDS)) {
        return (*((__Pyx_PyCFunctionFastWithKeywords)(void*)meth)) (self, args, nargs, NULL);
    } else {
        return (*((__Pyx_PyCFunctionFast)(void*)meth)) (self, args, nargs);
    }
}
#endif

/* PyObjectCallOneArg */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, &arg, 1);
    }
#endif
    if (likely(PyCFunction_Check(func))) {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
#if CYTHON_FAST_PYCCALL
        } else if (__Pyx_PyFastCFunction_Check(func)) {
            return __Pyx_PyCFunction_FastCall(func, &arg, 1);
#endif
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* RaiseException */
#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    __Pyx_PyThreadState_declare
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = __Pyx_PyThreadState_Current;
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* KeywordStringCheck */
static int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kwdict, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

/* None */
static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname) {
    PyErr_Format(PyExc_NameError, "free variable '%s' referenced before assignment in enclosing scope", varname);
}

/* GetTopmostException */
#if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem *
__Pyx_PyErr_GetTopmostException(PyThreadState *tstate)
{
    _PyErr_StackItem *exc_info = tstate->exc_info;
    while ((exc_info->exc_type == NULL || exc_info->exc_type == Py_None) &&
           exc_info->previous_item != NULL)
    {
        exc_info = exc_info->previous_item;
    }
    return exc_info;
}
#endif

/* SaveResetException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    *type = exc_info->exc_type;
    *value = exc_info->exc_value;
    *tb = exc_info->exc_traceback;
    #else
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    #endif
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = type;
    exc_info->exc_value = value;
    exc_info->exc_traceback = tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
#endif

/* GetException */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb)
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb)
#endif
{
    PyObject *local_type, *local_value, *local_tb;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    #if CYTHON_USE_EXC_INFO_STACK
    {
        _PyErr_StackItem *exc_info = tstate->exc_info;
        tmp_type = exc_info->exc_type;
        tmp_value = exc_info->exc_value;
        tmp_tb = exc_info->exc_traceback;
        exc_info->exc_type = local_type;
        exc_info->exc_value = local_value;
        exc_info->exc_traceback = local_tb;
    }
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* FetchCommonType */
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* fake_module;
    PyTypeObject* cached_type = NULL;
    fake_module = PyImport_AddModule((char*) "_cython_" CYTHON_ABI);
    if (!fake_module) return NULL;
    Py_INCREF(fake_module);
    cached_type = (PyTypeObject*) PyObject_GetAttrString(fake_module, type->tp_name);
    if (cached_type) {
        if (!PyType_Check((PyObject*)cached_type)) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s is not a type object",
                type->tp_name);
            goto bad;
        }
        if (cached_type->tp_basicsize != type->tp_basicsize) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s has the wrong size, try recompiling",
                type->tp_name);
            goto bad;
        }
    } else {
        if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
        PyErr_Clear();
        if (PyType_Ready(type) < 0) goto bad;
        if (PyObject_SetAttrString(fake_module, type->tp_name, (PyObject*) type) < 0)
            goto bad;
        Py_INCREF(type);
        cached_type = type;
    }
done:
    Py_DECREF(fake_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}

/* CythonFunctionShared */
#include <structmember.h>
static PyObject *
__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *closure)
{
    if (unlikely(op->func_doc == NULL)) {
        if (op->func.m_ml->ml_doc) {
#if PY_MAJOR_VERSION >= 3
            op->func_doc = PyUnicode_FromString(op->func.m_ml->ml_doc);
#else
            op->func_doc = PyString_FromString(op->func.m_ml->ml_doc);
#endif
            if (unlikely(op->func_doc == NULL))
                return NULL;
        } else {
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    Py_INCREF(op->func_doc);
    return op->func_doc;
}
static int
__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp = op->func_doc;
    if (value == NULL) {
        value = Py_None;
    }
    Py_INCREF(value);
    op->func_doc = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    if (unlikely(op->func_name == NULL)) {
#if PY_MAJOR_VERSION >= 3
        op->func_name = PyUnicode_InternFromString(op->func.m_ml->ml_name);
#else
        op->func_name = PyString_InternFromString(op->func.m_ml->ml_name);
#endif
        if (unlikely(op->func_name == NULL))
            return NULL;
    }
    Py_INCREF(op->func_name);
    return op->func_name;
}
static int
__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    tmp = op->func_name;
    Py_INCREF(value);
    op->func_name = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    Py_INCREF(op->func_qualname);
    return op->func_qualname;
}
static int
__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    tmp = op->func_qualname;
    Py_INCREF(value);
    op->func_qualname = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_self(__pyx_CyFunctionObject *m, CYTHON_UNUSED void *closure)
{
    PyObject *self;
    self = m->func_closure;
    if (self == NULL)
        self = Py_None;
    Py_INCREF(self);
    return self;
}
static PyObject *
__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    if (unlikely(op->func_dict == NULL)) {
        op->func_dict = PyDict_New();
        if (unlikely(op->func_dict == NULL))
            return NULL;
    }
    Py_INCREF(op->func_dict);
    return op->func_dict;
}
static int
__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp;
    if (unlikely(value == NULL)) {
        PyErr_SetString(PyExc_TypeError,
               "function's dictionary may not be deleted");
        return -1;
    }
    if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
               "setting function's dictionary to a non-dict");
        return -1;
    }
    tmp = op->func_dict;
    Py_INCREF(value);
    op->func_dict = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_globals(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    Py_INCREF(op->func_globals);
    return op->func_globals;
}
static PyObject *
__Pyx_CyFunction_get_closure(CYTHON_UNUSED __pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    Py_INCREF(Py_None);
    return Py_None;
}
static PyObject *
__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    PyObject* result = (op->func_code) ? op->func_code : Py_None;
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject *op) {
    int result = 0;
    PyObject *res = op->defaults_getter((PyObject *) op);
    if (unlikely(!res))
        return -1;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    op->defaults_tuple = PyTuple_GET_ITEM(res, 0);
    Py_INCREF(op->defaults_tuple);
    op->defaults_kwdict = PyTuple_GET_ITEM(res, 1);
    Py_INCREF(op->defaults_kwdict);
    #else
    op->defaults_tuple = PySequence_ITEM(res, 0);
    if (unlikely(!op->defaults_tuple)) result = -1;
    else {
        op->defaults_kwdict = PySequence_ITEM(res, 1);
        if (unlikely(!op->defaults_kwdict)) result = -1;
    }
    #endif
    Py_DECREF(res);
    return result;
}
static int
__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {
    PyObject* tmp;
    if (!value) {
        value = Py_None;
    } else if (value != Py_None && !PyTuple_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__defaults__ must be set to a tuple object");
        return -1;
    }
    Py_INCREF(value);
    tmp = op->defaults_tuple;
    op->defaults_tuple = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {
    PyObject* result = op->defaults_tuple;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;
            result = op->defaults_tuple;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {
    PyObject* tmp;
    if (!value) {
        value = Py_None;
    } else if (value != Py_None && !PyDict_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__kwdefaults__ must be set to a dict object");
        return -1;
    }
    Py_INCREF(value);
    tmp = op->defaults_kwdict;
    op->defaults_kwdict = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {
    PyObject* result = op->defaults_kwdict;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;
            result = op->defaults_kwdict;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {
    PyObject* tmp;
    if (!value || value == Py_None) {
        value = NULL;
    } else if (!PyDict_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__annotations__ must be set to a dict object");
        return -1;
    }
    Py_XINCREF(value);
    tmp = op->func_annotations;
    op->func_annotations = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {
    PyObject* result = op->func_annotations;
    if (unlikely(!result)) {
        result = PyDict_New();
        if (unlikely(!result)) return NULL;
        op->func_annotations = result;
    }
    Py_INCREF(result);
    return result;
}
static PyGetSetDef __pyx_CyFunction_getsets[] = {
    {(char *) "func_doc", (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "__doc__",  (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "func_name", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__name__", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__qualname__", (getter)__Pyx_CyFunction_get_qualname, (setter)__Pyx_CyFunction_set_qualname, 0, 0},
    {(char *) "__self__", (getter)__Pyx_CyFunction_get_self, 0, 0, 0},
    {(char *) "func_dict", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "__dict__", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "func_globals", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "__globals__", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "func_closure", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "__closure__", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "func_code", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "__code__", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "func_defaults", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__defaults__", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__kwdefaults__", (getter)__Pyx_CyFunction_get_kwdefaults, (setter)__Pyx_CyFunction_set_kwdefaults, 0, 0},
    {(char *) "__annotations__", (getter)__Pyx_CyFunction_get_annotations, (setter)__Pyx_CyFunction_set_annotations, 0, 0},
    {0, 0, 0, 0, 0}
};
static PyMemberDef __pyx_CyFunction_members[] = {
    {(char *) "__module__", T_OBJECT, offsetof(PyCFunctionObject, m_module), PY_WRITE_RESTRICTED, 0},
    {0, 0, 0,  0, 0}
};
static PyObject *
__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, CYTHON_UNUSED PyObject *args)
{
#if PY_MAJOR_VERSION >= 3
    Py_INCREF(m->func_qualname);
    return m->func_qualname;
#else
    return PyString_FromString(m->func.m_ml->ml_name);
#endif
}
static PyMethodDef __pyx_CyFunction_methods[] = {
    {"__reduce__", (PyCFunction)__Pyx_CyFunction_reduce, METH_VARARGS, 0},
    {0, 0, 0, 0}
};
#if PY_VERSION_HEX < 0x030500A0
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func_weakreflist)
#else
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func.m_weakreflist)
#endif
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject *op, PyMethodDef *ml, int flags, PyObject* qualname,
                                       PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    if (unlikely(op == NULL))
        return NULL;
    op->flags = flags;
    __Pyx_CyFunction_weakreflist(op) = NULL;
    op->func.m_ml = ml;
    op->func.m_self = (PyObject *) op;
    Py_XINCREF(closure);
    op->func_closure = closure;
    Py_XINCREF(module);
    op->func.m_module = module;
    op->func_dict = NULL;
    op->func_name = NULL;
    Py_INCREF(qualname);
    op->func_qualname = qualname;
    op->func_doc = NULL;
    op->func_classobj = NULL;
    op->func_globals = globals;
    Py_INCREF(op->func_globals);
    Py_XINCREF(code);
    op->func_code = code;
    op->defaults_pyobjects = 0;
    op->defaults_size = 0;
    op->defaults = NULL;
    op->defaults_tuple = NULL;
    op->defaults_kwdict = NULL;
    op->defaults_getter = NULL;
    op->func_annotations = NULL;
    return (PyObject *) op;
}
static int
__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)
{
    Py_CLEAR(m->func_closure);
    Py_CLEAR(m->func.m_module);
    Py_CLEAR(m->func_dict);
    Py_CLEAR(m->func_name);
    Py_CLEAR(m->func_qualname);
    Py_CLEAR(m->func_doc);
    Py_CLEAR(m->func_globals);
    Py_CLEAR(m->func_code);
    Py_CLEAR(m->func_classobj);
    Py_CLEAR(m->defaults_tuple);
    Py_CLEAR(m->defaults_kwdict);
    Py_CLEAR(m->func_annotations);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_XDECREF(pydefaults[i]);
        PyObject_Free(m->defaults);
        m->defaults = NULL;
    }
    return 0;
}
static void __Pyx__CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    if (__Pyx_CyFunction_weakreflist(m) != NULL)
        PyObject_ClearWeakRefs((PyObject *) m);
    __Pyx_CyFunction_clear(m);
    PyObject_GC_Del(m);
}
static void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    PyObject_GC_UnTrack(m);
    __Pyx__CyFunction_dealloc(m);
}
static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)
{
    Py_VISIT(m->func_closure);
    Py_VISIT(m->func.m_module);
    Py_VISIT(m->func_dict);
    Py_VISIT(m->func_name);
    Py_VISIT(m->func_qualname);
    Py_VISIT(m->func_doc);
    Py_VISIT(m->func_globals);
    Py_VISIT(m->func_code);
    Py_VISIT(m->func_classobj);
    Py_VISIT(m->defaults_tuple);
    Py_VISIT(m->defaults_kwdict);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_VISIT(pydefaults[i]);
    }
    return 0;
}
static PyObject *__Pyx_CyFunction_descr_get(PyObject *func, PyObject *obj, PyObject *type)
{
#if PY_MAJOR_VERSION < 3
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    if (m->flags & __Pyx_CYFUNCTION_STATICMETHOD) {
        Py_INCREF(func);
        return func;
    }
    if (m->flags & __Pyx_CYFUNCTION_CLASSMETHOD) {
        if (type == NULL)
            type = (PyObject *)(Py_TYPE(obj));
        return __Pyx_PyMethod_New(func, type, (PyObject *)(Py_TYPE(type)));
    }
    if (obj == Py_None)
        obj = NULL;
#endif
    return __Pyx_PyMethod_New(func, obj, type);
}
static PyObject*
__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromFormat("<cyfunction %U at %p>",
                                op->func_qualname, (void *)op);
#else
    return PyString_FromFormat("<cyfunction %s at %p>",
                               PyString_AsString(op->func_qualname), (void *)op);
#endif
}
static PyObject * __Pyx_CyFunction_CallMethod(PyObject *func, PyObject *self, PyObject *arg, PyObject *kw) {
    PyCFunctionObject* f = (PyCFunctionObject*)func;
    PyCFunction meth = f->m_ml->ml_meth;
    Py_ssize_t size;
    switch (f->m_ml->ml_flags & (METH_VARARGS | METH_KEYWORDS | METH_NOARGS | METH_O)) {
    case METH_VARARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0))
            return (*meth)(self, arg);
        break;
    case METH_VARARGS | METH_KEYWORDS:
        return (*(PyCFunctionWithKeywords)(void*)meth)(self, arg, kw);
    case METH_NOARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
            size = PyTuple_GET_SIZE(arg);
            if (likely(size == 0))
                return (*meth)(self, NULL);
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    case METH_O:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
            size = PyTuple_GET_SIZE(arg);
            if (likely(size == 1)) {
                PyObject *result, *arg0;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                arg0 = PyTuple_GET_ITEM(arg, 0);
                #else
                arg0 = PySequence_ITEM(arg, 0); if (unlikely(!arg0)) return NULL;
                #endif
                result = (*meth)(self, arg0);
                #if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
                Py_DECREF(arg0);
                #endif
                return result;
            }
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags in "
                        "__Pyx_CyFunction_Call. METH_OLDARGS is no "
                        "longer supported!");
        return NULL;
    }
    PyErr_Format(PyExc_TypeError, "%.200s() takes no keyword arguments",
                 f->m_ml->ml_name);
    return NULL;
}
static CYTHON_INLINE PyObject *__Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    return __Pyx_CyFunction_CallMethod(func, ((PyCFunctionObject*)func)->m_self, arg, kw);
}
static PyObject *__Pyx_CyFunction_CallAsMethod(PyObject *func, PyObject *args, PyObject *kw) {
    PyObject *result;
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *) func;
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        Py_ssize_t argc;
        PyObject *new_args;
        PyObject *self;
        argc = PyTuple_GET_SIZE(args);
        new_args = PyTuple_GetSlice(args, 1, argc);
        if (unlikely(!new_args))
            return NULL;
        self = PyTuple_GetItem(args, 0);
        if (unlikely(!self)) {
            Py_DECREF(new_args);
            return NULL;
        }
        result = __Pyx_CyFunction_CallMethod(func, self, new_args, kw);
        Py_DECREF(new_args);
    } else {
        result = __Pyx_CyFunction_Call(func, args, kw);
    }
    return result;
}
static PyTypeObject __pyx_CyFunctionType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
    (destructor) __Pyx_CyFunction_dealloc,
    0,
    0,
    0,
#if PY_MAJOR_VERSION < 3
    0,
#else
    0,
#endif
    (reprfunc) __Pyx_CyFunction_repr,
    0,
    0,
    0,
    0,
    __Pyx_CyFunction_CallAsMethod,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC,
    0,
    (traverseproc) __Pyx_CyFunction_traverse,
    (inquiry) __Pyx_CyFunction_clear,
    0,
#if PY_VERSION_HEX < 0x030500A0
    offsetof(__pyx_CyFunctionObject, func_weakreflist),
#else
    offsetof(PyCFunctionObject, m_weakreflist),
#endif
    0,
    0,
    __pyx_CyFunction_methods,
    __pyx_CyFunction_members,
    __pyx_CyFunction_getsets,
    0,
    0,
    __Pyx_CyFunction_descr_get,
    0,
    offsetof(__pyx_CyFunctionObject, func_dict),
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
    0,
#endif
};
static int __pyx_CyFunction_init(void) {
    __pyx_CyFunctionType = __Pyx_FetchCommonType(&__pyx_CyFunctionType_type);
    if (unlikely(__pyx_CyFunctionType == NULL)) {
        return -1;
    }
    return 0;
}
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *func, size_t size, int pyobjects) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults = PyObject_Malloc(size);
    if (unlikely(!m->defaults))
        return PyErr_NoMemory();
    memset(m->defaults, 0, size);
    m->defaults_pyobjects = pyobjects;
    m->defaults_size = size;
    return m->defaults;
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_tuple = tuple;
    Py_INCREF(tuple);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_kwdict = dict;
    Py_INCREF(dict);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->func_annotations = dict;
    Py_INCREF(dict);
}

/* CythonFunction */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml, int flags, PyObject* qualname,
                                      PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    PyObject *op = __Pyx_CyFunction_Init(
        PyObject_GC_New(__pyx_CyFunctionObject, __pyx_CyFunctionType),
        ml, flags, qualname, closure, module, globals, code
    );
    if (likely(op)) {
        PyObject_GC_Track(op);
    }
    return op;
}

/* GetItemInt */
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* WriteUnraisableException */
static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
                                  CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename,
                                  int full_traceback, CYTHON_UNUSED int nogil) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_PyThreadState_declare
#ifdef WITH_THREAD
    PyGILState_STATE state;
    if (nogil)
        state = PyGILState_Ensure();
#ifdef _MSC_VER
    else state = (PyGILState_STATE)-1;
#endif
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    if (full_traceback) {
        Py_XINCREF(old_exc);
        Py_XINCREF(old_val);
        Py_XINCREF(old_tb);
        __Pyx_ErrRestore(old_exc, old_val, old_tb);
        PyErr_PrintEx(1);
    }
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
#ifdef WITH_THREAD
    if (nogil)
        PyGILState_Release(state);
#endif
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (__Pyx_PyUnicode_GET_LENGTH(**name) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (__Pyx_PyUnicode_GET_LENGTH(**argname) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* ExtTypeTest */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(__Pyx_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

/* JoinPyUnicode */
static PyObject* __Pyx_PyUnicode_Join(PyObject* value_tuple, Py_ssize_t value_count, Py_ssize_t result_ulength,
                                      CYTHON_UNUSED Py_UCS4 max_char) {
#if CYTHON_USE_UNICODE_INTERNALS && CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    PyObject *result_uval;
    int result_ukind;
    Py_ssize_t i, char_pos;
    void *result_udata;
#if CYTHON_PEP393_ENABLED
    result_uval = PyUnicode_New(result_ulength, max_char);
    if (unlikely(!result_uval)) return NULL;
    result_ukind = (max_char <= 255) ? PyUnicode_1BYTE_KIND : (max_char <= 65535) ? PyUnicode_2BYTE_KIND : PyUnicode_4BYTE_KIND;
    result_udata = PyUnicode_DATA(result_uval);
#else
    result_uval = PyUnicode_FromUnicode(NULL, result_ulength);
    if (unlikely(!result_uval)) return NULL;
    result_ukind = sizeof(Py_UNICODE);
    result_udata = PyUnicode_AS_UNICODE(result_uval);
#endif
    char_pos = 0;
    for (i=0; i < value_count; i++) {
        int ukind;
        Py_ssize_t ulength;
        void *udata;
        PyObject *uval = PyTuple_GET_ITEM(value_tuple, i);
        if (unlikely(__Pyx_PyUnicode_READY(uval)))
            goto bad;
        ulength = __Pyx_PyUnicode_GET_LENGTH(uval);
        if (unlikely(!ulength))
            continue;
        if (unlikely(char_pos + ulength < 0))
            goto overflow;
        ukind = __Pyx_PyUnicode_KIND(uval);
        udata = __Pyx_PyUnicode_DATA(uval);
        if (!CYTHON_PEP393_ENABLED || ukind == result_ukind) {
            memcpy((char *)result_udata + char_pos * result_ukind, udata, (size_t) (ulength * result_ukind));
        } else {
            #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030300F0 || defined(_PyUnicode_FastCopyCharacters)
            _PyUnicode_FastCopyCharacters(result_uval, char_pos, uval, 0, ulength);
            #else
            Py_ssize_t j;
            for (j=0; j < ulength; j++) {
                Py_UCS4 uchar = __Pyx_PyUnicode_READ(ukind, udata, j);
                __Pyx_PyUnicode_WRITE(result_ukind, result_udata, char_pos+j, uchar);
            }
            #endif
        }
        char_pos += ulength;
    }
    return result_uval;
overflow:
    PyErr_SetString(PyExc_OverflowError, "join() result is too long for a Python string");
bad:
    Py_DECREF(result_uval);
    return NULL;
#else
    result_ulength++;
    value_count++;
    return PyUnicode_Join(__pyx_empty_unicode, value_tuple);
#endif
}

/* GetAttr */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *o, PyObject *n) {
#if CYTHON_USE_TYPE_SLOTS
#if PY_MAJOR_VERSION >= 3
    if (likely(PyUnicode_Check(n)))
#else
    if (likely(PyString_Check(n)))
#endif
        return __Pyx_PyObject_GetAttrStr(o, n);
#endif
    return PyObject_GetAttr(o, n);
}

/* pyobject_as_double */
static double __Pyx__PyObject_AsDouble(PyObject* obj) {
    PyObject* float_value;
#if !CYTHON_USE_TYPE_SLOTS
    float_value = PyNumber_Float(obj);  if ((0)) goto bad;
#else
    PyNumberMethods *nb = Py_TYPE(obj)->tp_as_number;
    if (likely(nb) && likely(nb->nb_float)) {
        float_value = nb->nb_float(obj);
        if (likely(float_value) && unlikely(!PyFloat_Check(float_value))) {
            PyErr_Format(PyExc_TypeError,
                "__float__ returned non-float (type %.200s)",
                Py_TYPE(float_value)->tp_name);
            Py_DECREF(float_value);
            goto bad;
        }
    } else if (PyUnicode_CheckExact(obj) || PyBytes_CheckExact(obj)) {
#if PY_MAJOR_VERSION >= 3
        float_value = PyFloat_FromString(obj);
#else
        float_value = PyFloat_FromString(obj, 0);
#endif
    } else {
        PyObject* args = PyTuple_New(1);
        if (unlikely(!args)) goto bad;
        PyTuple_SET_ITEM(args, 0, obj);
        float_value = PyObject_Call((PyObject*)&PyFloat_Type, args, 0);
        PyTuple_SET_ITEM(args, 0, 0);
        Py_DECREF(args);
    }
#endif
    if (likely(float_value)) {
        double value = PyFloat_AS_DOUBLE(float_value);
        Py_DECREF(float_value);
        return value;
    }
bad:
    return (double)-1;
}

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    } else if (unlikely(PyErr_Occurred())) {
        return NULL;
    }
#else
    result = PyDict_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* PyObjectCall2Args */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2) {
    PyObject *args, *result = NULL;
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyFunction_FastCall(function, args, 2);
    }
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyCFunction_FastCall(function, args, 2);
    }
    #endif
    args = PyTuple_New(2);
    if (unlikely(!args)) goto done;
    Py_INCREF(arg1);
    PyTuple_SET_ITEM(args, 0, arg1);
    Py_INCREF(arg2);
    PyTuple_SET_ITEM(args, 1, arg2);
    Py_INCREF(function);
    result = __Pyx_PyObject_Call(function, args, NULL);
    Py_DECREF(args);
    Py_DECREF(function);
done:
    return result;
}

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, int inplace, int zerodivision_check) {
    (void)inplace;
    (void)zerodivision_check;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
            x = (long)((unsigned long)a + b);
            if (likely((x^a) >= 0 || (x^b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_add(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_add(op1, op2);
            }
        }
                x = a + b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla + llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            double result;
            PyFPE_START_PROTECT("add", return NULL)
            result = ((double)a) + (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
}
#endif

/* None */
static CYTHON_INLINE Py_ssize_t __Pyx_div_Py_ssize_t(Py_ssize_t a, Py_ssize_t b) {
    Py_ssize_t q = a / b;
    Py_ssize_t r = a - q*b;
    q -= ((r != 0) & ((r ^ b) < 0));
    return q;
}

/* ObjectGetItem */
#if CYTHON_USE_TYPE_SLOTS
static PyObject *__Pyx_PyObject_GetIndex(PyObject *obj, PyObject* index) {
    PyObject *runerr;
    Py_ssize_t key_value;
    PySequenceMethods *m = Py_TYPE(obj)->tp_as_sequence;
    if (unlikely(!(m && m->sq_item))) {
        PyErr_Format(PyExc_TypeError, "'%.200s' object is not subscriptable", Py_TYPE(obj)->tp_name);
        return NULL;
    }
    key_value = __Pyx_PyIndex_AsSsize_t(index);
    if (likely(key_value != -1 || !(runerr = PyErr_Occurred()))) {
        return __Pyx_GetItemInt_Fast(obj, key_value, 0, 1, 1);
    }
    if (PyErr_GivenExceptionMatches(runerr, PyExc_OverflowError)) {
        PyErr_Clear();
        PyErr_Format(PyExc_IndexError, "cannot fit '%.200s' into an index-sized integer", Py_TYPE(index)->tp_name);
    }
    return NULL;
}
static PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject* key) {
    PyMappingMethods *m = Py_TYPE(obj)->tp_as_mapping;
    if (likely(m && m->mp_subscript)) {
        return m->mp_subscript(obj, key);
    }
    return __Pyx_PyObject_GetIndex(obj, key);
}
#endif

/* UnpackUnboundCMethod */
static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {
    PyObject *method;
    method = __Pyx_PyObject_GetAttrStr(target->type, *target->method_name);
    if (unlikely(!method))
        return -1;
    target->method = method;
#if CYTHON_COMPILING_IN_CPYTHON
    #if PY_MAJOR_VERSION >= 3
    if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))
    #endif
    {
        PyMethodDescrObject *descr = (PyMethodDescrObject*) method;
        target->func = descr->d_method->ml_meth;
        target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);
    }
#endif
    return 0;
}

/* CallUnboundCMethod1 */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg) {
    if (likely(cfunc->func)) {
        int flag = cfunc->flag;
        if (flag == METH_O) {
            return (*(cfunc->func))(self, arg);
        } else if (PY_VERSION_HEX >= 0x030600B1 && flag == METH_FASTCALL) {
            if (PY_VERSION_HEX >= 0x030700A0) {
                return (*(__Pyx_PyCFunctionFast)(void*)(PyCFunction)cfunc->func)(self, &arg, 1);
            } else {
                return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, &arg, 1, NULL);
            }
        } else if (PY_VERSION_HEX >= 0x030700A0 && flag == (METH_FASTCALL | METH_KEYWORDS)) {
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, &arg, 1, NULL);
        }
    }
    return __Pyx__CallUnboundCMethod1(cfunc, self, arg);
}
#endif
static PyObject* __Pyx__CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg){
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->func && !cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_COMPILING_IN_CPYTHON
    if (cfunc->func && (cfunc->flag & METH_VARARGS)) {
        args = PyTuple_New(1);
        if (unlikely(!args)) goto bad;
        Py_INCREF(arg);
        PyTuple_SET_ITEM(args, 0, arg);
        if (cfunc->flag & METH_KEYWORDS)
            result = (*(PyCFunctionWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, NULL);
        else
            result = (*cfunc->func)(self, args);
    } else {
        args = PyTuple_New(2);
        if (unlikely(!args)) goto bad;
        Py_INCREF(self);
        PyTuple_SET_ITEM(args, 0, self);
        Py_INCREF(arg);
        PyTuple_SET_ITEM(args, 1, arg);
        result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    }
#else
    args = PyTuple_Pack(2, self, arg);
    if (unlikely(!args)) goto bad;
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
#endif
bad:
    Py_XDECREF(args);
    return result;
}

/* RaiseTooManyValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

/* RaiseNeedMoreValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

/* IterFinish */
static CYTHON_INLINE int __Pyx_IterFinish(void) {
#if CYTHON_FAST_THREAD_STATE
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject* exc_type = tstate->curexc_type;
    if (unlikely(exc_type)) {
        if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) {
            PyObject *exc_value, *exc_tb;
            exc_value = tstate->curexc_value;
            exc_tb = tstate->curexc_traceback;
            tstate->curexc_type = 0;
            tstate->curexc_value = 0;
            tstate->curexc_traceback = 0;
            Py_DECREF(exc_type);
            Py_XDECREF(exc_value);
            Py_XDECREF(exc_tb);
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#else
    if (unlikely(PyErr_Occurred())) {
        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
            PyErr_Clear();
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#endif
}

/* UnpackItemEndCheck */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    } else {
        return __Pyx_IterFinish();
    }
    return 0;
}

/* UnicodeAsUCS4 */
static CYTHON_INLINE Py_UCS4 __Pyx_PyUnicode_AsPy_UCS4(PyObject* x) {
   Py_ssize_t length;
   #if CYTHON_PEP393_ENABLED
   length = PyUnicode_GET_LENGTH(x);
   if (likely(length == 1)) {
       return PyUnicode_READ_CHAR(x, 0);
   }
   #else
   length = PyUnicode_GET_SIZE(x);
   if (likely(length == 1)) {
       return PyUnicode_AS_UNICODE(x)[0];
   }
   #if Py_UNICODE_SIZE == 2
   else if (PyUnicode_GET_SIZE(x) == 2) {
       Py_UCS4 high_val = PyUnicode_AS_UNICODE(x)[0];
       if (high_val >= 0xD800 && high_val <= 0xDBFF) {
           Py_UCS4 low_val = PyUnicode_AS_UNICODE(x)[1];
           if (low_val >= 0xDC00 && low_val <= 0xDFFF) {
               return 0x10000 + (((high_val & ((1<<10)-1)) << 10) | (low_val & ((1<<10)-1)));
           }
       }
   }
   #endif
   #endif
   PyErr_Format(PyExc_ValueError,
                "only single character unicode strings can be converted to Py_UCS4, "
                "got length %" CYTHON_FORMAT_SSIZE_T "d", length);
   return (Py_UCS4)-1;
}

/* object_ord */
static long __Pyx__PyObject_Ord(PyObject* c) {
    Py_ssize_t size;
    if (PyBytes_Check(c)) {
        size = PyBytes_GET_SIZE(c);
        if (likely(size == 1)) {
            return (unsigned char) PyBytes_AS_STRING(c)[0];
        }
#if PY_MAJOR_VERSION < 3
    } else if (PyUnicode_Check(c)) {
        return (long)__Pyx_PyUnicode_AsPy_UCS4(c);
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    } else if (PyByteArray_Check(c)) {
        size = PyByteArray_GET_SIZE(c);
        if (likely(size == 1)) {
            return (unsigned char) PyByteArray_AS_STRING(c)[0];
        }
#endif
    } else {
        PyErr_Format(PyExc_TypeError,
            "ord() expected string of length 1, but %.200s found", Py_TYPE(c)->tp_name);
        return (long)(Py_UCS4)-1;
    }
    PyErr_Format(PyExc_TypeError,
        "ord() expected a character, but string of length %zd found", size);
    return (long)(Py_UCS4)-1;
}

/* PyObjectSetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#endif

/* CallUnboundCMethod2 */
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030600B1
static CYTHON_INLINE PyObject *__Pyx_CallUnboundCMethod2(__Pyx_CachedCFunction *cfunc, PyObject *self, PyObject *arg1, PyObject *arg2) {
    if (likely(cfunc->func)) {
        PyObject *args[2] = {arg1, arg2};
        if (cfunc->flag == METH_FASTCALL) {
            #if PY_VERSION_HEX >= 0x030700A0
            return (*(__Pyx_PyCFunctionFast)(void*)(PyCFunction)cfunc->func)(self, args, 2);
            #else
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, 2, NULL);
            #endif
        }
        #if PY_VERSION_HEX >= 0x030700A0
        if (cfunc->flag == (METH_FASTCALL | METH_KEYWORDS))
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, 2, NULL);
        #endif
    }
    return __Pyx__CallUnboundCMethod2(cfunc, self, arg1, arg2);
}
#endif
static PyObject* __Pyx__CallUnboundCMethod2(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg1, PyObject* arg2){
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->func && !cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_COMPILING_IN_CPYTHON
    if (cfunc->func && (cfunc->flag & METH_VARARGS)) {
        args = PyTuple_New(2);
        if (unlikely(!args)) goto bad;
        Py_INCREF(arg1);
        PyTuple_SET_ITEM(args, 0, arg1);
        Py_INCREF(arg2);
        PyTuple_SET_ITEM(args, 1, arg2);
        if (cfunc->flag & METH_KEYWORDS)
            result = (*(PyCFunctionWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, NULL);
        else
            result = (*cfunc->func)(self, args);
    } else {
        args = PyTuple_New(3);
        if (unlikely(!args)) goto bad;
        Py_INCREF(self);
        PyTuple_SET_ITEM(args, 0, self);
        Py_INCREF(arg1);
        PyTuple_SET_ITEM(args, 1, arg1);
        Py_INCREF(arg2);
        PyTuple_SET_ITEM(args, 2, arg2);
        result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    }
#else
    args = PyTuple_Pack(3, self, arg1, arg2);
    if (unlikely(!args)) goto bad;
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
#endif
bad:
    Py_XDECREF(args);
    return result;
}

/* dict_getitem_default */
static PyObject* __Pyx_PyDict_GetItemDefault(PyObject* d, PyObject* key, PyObject* default_value) {
    PyObject* value;
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (unlikely(PyErr_Occurred()))
            return NULL;
        value = default_value;
    }
    Py_INCREF(value);
    if ((1));
#else
    if (PyString_CheckExact(key) || PyUnicode_CheckExact(key) || PyInt_CheckExact(key)) {
        value = PyDict_GetItem(d, key);
        if (unlikely(!value)) {
            value = default_value;
        }
        Py_INCREF(value);
    }
#endif
    else {
        if (default_value == Py_None)
            value = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyDict_Type_get, d, key);
        else
            value = __Pyx_CallUnboundCMethod2(&__pyx_umethod_PyDict_Type_get, d, key, default_value);
    }
    return value;
}

/* PyObjectGetMethod */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method) {
    PyObject *attr;
#if CYTHON_UNPACK_METHODS && CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_PYTYPE_LOOKUP
    PyTypeObject *tp = Py_TYPE(obj);
    PyObject *descr;
    descrgetfunc f = NULL;
    PyObject **dictptr, *dict;
    int meth_found = 0;
    assert (*method == NULL);
    if (unlikely(tp->tp_getattro != PyObject_GenericGetAttr)) {
        attr = __Pyx_PyObject_GetAttrStr(obj, name);
        goto try_unpack;
    }
    if (unlikely(tp->tp_dict == NULL) && unlikely(PyType_Ready(tp) < 0)) {
        return 0;
    }
    descr = _PyType_Lookup(tp, name);
    if (likely(descr != NULL)) {
        Py_INCREF(descr);
#if PY_MAJOR_VERSION >= 3
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || (Py_TYPE(descr) == &PyMethodDescr_Type) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr) || (Py_TYPE(descr) == &PyMethodDescr_Type)))
        #endif
#else
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr)))
        #endif
#endif
        {
            meth_found = 1;
        } else {
            f = Py_TYPE(descr)->tp_descr_get;
            if (f != NULL && PyDescr_IsData(descr)) {
                attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
                Py_DECREF(descr);
                goto try_unpack;
            }
        }
    }
    dictptr = _PyObject_GetDictPtr(obj);
    if (dictptr != NULL && (dict = *dictptr) != NULL) {
        Py_INCREF(dict);
        attr = __Pyx_PyDict_GetItemStr(dict, name);
        if (attr != NULL) {
            Py_INCREF(attr);
            Py_DECREF(dict);
            Py_XDECREF(descr);
            goto try_unpack;
        }
        Py_DECREF(dict);
    }
    if (meth_found) {
        *method = descr;
        return 1;
    }
    if (f != NULL) {
        attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
        Py_DECREF(descr);
        goto try_unpack;
    }
    if (descr != NULL) {
        *method = descr;
        return 0;
    }
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'%.50s' object has no attribute '%U'",
                 tp->tp_name, name);
#else
                 "'%.50s' object has no attribute '%.400s'",
                 tp->tp_name, PyString_AS_STRING(name));
#endif
    return 0;
#else
    attr = __Pyx_PyObject_GetAttrStr(obj, name);
    goto try_unpack;
#endif
try_unpack:
#if CYTHON_UNPACK_METHODS
    if (likely(attr) && PyMethod_Check(attr) && likely(PyMethod_GET_SELF(attr) == obj)) {
        PyObject *function = PyMethod_GET_FUNCTION(attr);
        Py_INCREF(function);
        Py_DECREF(attr);
        *method = function;
        return 1;
    }
#endif
    *method = attr;
    return 0;
}

/* PyObjectCallMethod0 */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name) {
    PyObject *method = NULL, *result = NULL;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_CallOneArg(method, obj);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) goto bad;
    result = __Pyx_PyObject_CallNoArg(method);
    Py_DECREF(method);
bad:
    return result;
}

/* RaiseNoneIterError */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

/* UnpackTupleError */
static void __Pyx_UnpackTupleError(PyObject *t, Py_ssize_t index) {
    if (t == Py_None) {
      __Pyx_RaiseNoneNotIterableError();
    } else if (PyTuple_GET_SIZE(t) < index) {
      __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(t));
    } else {
      __Pyx_RaiseTooManyValuesError(index);
    }
}

/* UnpackTuple2 */
static CYTHON_INLINE int __Pyx_unpack_tuple2_exact(
        PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2, int decref_tuple) {
    PyObject *value1 = NULL, *value2 = NULL;
#if CYTHON_COMPILING_IN_PYPY
    value1 = PySequence_ITEM(tuple, 0);  if (unlikely(!value1)) goto bad;
    value2 = PySequence_ITEM(tuple, 1);  if (unlikely(!value2)) goto bad;
#else
    value1 = PyTuple_GET_ITEM(tuple, 0);  Py_INCREF(value1);
    value2 = PyTuple_GET_ITEM(tuple, 1);  Py_INCREF(value2);
#endif
    if (decref_tuple) {
        Py_DECREF(tuple);
    }
    *pvalue1 = value1;
    *pvalue2 = value2;
    return 0;
#if CYTHON_COMPILING_IN_PYPY
bad:
    Py_XDECREF(value1);
    Py_XDECREF(value2);
    if (decref_tuple) { Py_XDECREF(tuple); }
    return -1;
#endif
}
static int __Pyx_unpack_tuple2_generic(PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2,
                                       int has_known_size, int decref_tuple) {
    Py_ssize_t index;
    PyObject *value1 = NULL, *value2 = NULL, *iter = NULL;
    iternextfunc iternext;
    iter = PyObject_GetIter(tuple);
    if (unlikely(!iter)) goto bad;
    if (decref_tuple) { Py_DECREF(tuple); tuple = NULL; }
    iternext = Py_TYPE(iter)->tp_iternext;
    value1 = iternext(iter); if (unlikely(!value1)) { index = 0; goto unpacking_failed; }
    value2 = iternext(iter); if (unlikely(!value2)) { index = 1; goto unpacking_failed; }
    if (!has_known_size && unlikely(__Pyx_IternextUnpackEndCheck(iternext(iter), 2))) goto bad;
    Py_DECREF(iter);
    *pvalue1 = value1;
    *pvalue2 = value2;
    return 0;
unpacking_failed:
    if (!has_known_size && __Pyx_IterFinish() == 0)
        __Pyx_RaiseNeedMoreValuesError(index);
bad:
    Py_XDECREF(iter);
    Py_XDECREF(value1);
    Py_XDECREF(value2);
    if (decref_tuple) { Py_XDECREF(tuple); }
    return -1;
}

/* dict_iter */
static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* iterable, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_source_is_dict) {
    is_dict = is_dict || likely(PyDict_CheckExact(iterable));
    *p_source_is_dict = is_dict;
    if (is_dict) {
#if !CYTHON_COMPILING_IN_PYPY
        *p_orig_length = PyDict_Size(iterable);
        Py_INCREF(iterable);
        return iterable;
#elif PY_MAJOR_VERSION >= 3
        static PyObject *py_items = NULL, *py_keys = NULL, *py_values = NULL;
        PyObject **pp = NULL;
        if (method_name) {
            const char *name = PyUnicode_AsUTF8(method_name);
            if (strcmp(name, "iteritems") == 0) pp = &py_items;
            else if (strcmp(name, "iterkeys") == 0) pp = &py_keys;
            else if (strcmp(name, "itervalues") == 0) pp = &py_values;
            if (pp) {
                if (!*pp) {
                    *pp = PyUnicode_FromString(name + 4);
                    if (!*pp)
                        return NULL;
                }
                method_name = *pp;
            }
        }
#endif
    }
    *p_orig_length = 0;
    if (method_name) {
        PyObject* iter;
        iterable = __Pyx_PyObject_CallMethod0(iterable, method_name);
        if (!iterable)
            return NULL;
#if !CYTHON_COMPILING_IN_PYPY
        if (PyTuple_CheckExact(iterable) || PyList_CheckExact(iterable))
            return iterable;
#endif
        iter = PyObject_GetIter(iterable);
        Py_DECREF(iterable);
        return iter;
    }
    return PyObject_GetIter(iterable);
}
static CYTHON_INLINE int __Pyx_dict_iter_next(
        PyObject* iter_obj, CYTHON_NCP_UNUSED Py_ssize_t orig_length, CYTHON_NCP_UNUSED Py_ssize_t* ppos,
        PyObject** pkey, PyObject** pvalue, PyObject** pitem, int source_is_dict) {
    PyObject* next_item;
#if !CYTHON_COMPILING_IN_PYPY
    if (source_is_dict) {
        PyObject *key, *value;
        if (unlikely(orig_length != PyDict_Size(iter_obj))) {
            PyErr_SetString(PyExc_RuntimeError, "dictionary changed size during iteration");
            return -1;
        }
        if (unlikely(!PyDict_Next(iter_obj, ppos, &key, &value))) {
            return 0;
        }
        if (pitem) {
            PyObject* tuple = PyTuple_New(2);
            if (unlikely(!tuple)) {
                return -1;
            }
            Py_INCREF(key);
            Py_INCREF(value);
            PyTuple_SET_ITEM(tuple, 0, key);
            PyTuple_SET_ITEM(tuple, 1, value);
            *pitem = tuple;
        } else {
            if (pkey) {
                Py_INCREF(key);
                *pkey = key;
            }
            if (pvalue) {
                Py_INCREF(value);
                *pvalue = value;
            }
        }
        return 1;
    } else if (PyTuple_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyTuple_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyTuple_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else if (PyList_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyList_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyList_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else
#endif
    {
        next_item = PyIter_Next(iter_obj);
        if (unlikely(!next_item)) {
            return __Pyx_IterFinish();
        }
    }
    if (pitem) {
        *pitem = next_item;
    } else if (pkey && pvalue) {
        if (__Pyx_unpack_tuple2(next_item, pkey, pvalue, source_is_dict, source_is_dict, 1))
            return -1;
    } else if (pkey) {
        *pkey = next_item;
    } else {
        *pvalue = next_item;
    }
    return 1;
}

/* DictGetItem */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            if (unlikely(PyTuple_Check(key))) {
                PyObject* args = PyTuple_Pack(1, key);
                if (likely(args)) {
                    PyErr_SetObject(PyExc_KeyError, args);
                    Py_DECREF(args);
                }
            } else {
                PyErr_SetObject(PyExc_KeyError, key);
            }
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#endif

/* PyErrExceptionMatches */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    PyObject *exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
    if (unlikely(PyTuple_Check(err)))
        return __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    return __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
}
#endif

/* SwapException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = *type;
    exc_info->exc_value = *value;
    exc_info->exc_traceback = *tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = *type;
    tstate->exc_value = *value;
    tstate->exc_traceback = *tb;
    #endif
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}
#else
static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyErr_GetExcInfo(&tmp_type, &tmp_value, &tmp_tb);
    PyErr_SetExcInfo(*type, *value, *tb);
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}
#endif

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_SubtractObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, int inplace, int zerodivision_check) {
    (void)inplace;
    (void)zerodivision_check;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
            x = (long)((unsigned long)a - b);
            if (likely((x^a) >= 0 || (x^~b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_subtract(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_subtract(op1, op2);
            }
        }
                x = a - b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla - llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            double result;
            PyFPE_START_PROTECT("subtract", return NULL)
            result = ((double)a) - (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceSubtract : PyNumber_Subtract)(op1, op2);
}
#endif

/* PyObjectCallMethod1 */
static PyObject* __Pyx__PyObject_CallMethod1(PyObject* method, PyObject* arg) {
    PyObject *result = __Pyx_PyObject_CallOneArg(method, arg);
    Py_DECREF(method);
    return result;
}
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg) {
    PyObject *method = NULL, *result;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_Call2Args(method, obj, arg);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) return NULL;
    return __Pyx__PyObject_CallMethod1(method, arg);
}

/* append */
static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x) {
    if (likely(PyList_CheckExact(L))) {
        if (unlikely(__Pyx_PyList_Append(L, x) < 0)) return -1;
    } else {
        PyObject* retval = __Pyx_PyObject_CallMethod1(L, __pyx_n_s_append, x);
        if (unlikely(!retval))
            return -1;
        Py_DECREF(retval);
    }
    return 0;
}

/* HasAttr */
static CYTHON_INLINE int __Pyx_HasAttr(PyObject *o, PyObject *n) {
    PyObject *r;
    if (unlikely(!__Pyx_PyBaseString_Check(n))) {
        PyErr_SetString(PyExc_TypeError,
                        "hasattr(): attribute name must be string");
        return -1;
    }
    r = __Pyx_GetAttr(o, n);
    if (unlikely(!r)) {
        PyErr_Clear();
        return 0;
    } else {
        Py_DECREF(r);
        return 1;
    }
}

/* SliceObject */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetSlice(PyObject* obj,
        Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** _py_start, PyObject** _py_stop, PyObject** _py_slice,
        int has_cstart, int has_cstop, CYTHON_UNUSED int wraparound) {
#if CYTHON_USE_TYPE_SLOTS
    PyMappingMethods* mp;
#if PY_MAJOR_VERSION < 3
    PySequenceMethods* ms = Py_TYPE(obj)->tp_as_sequence;
    if (likely(ms && ms->sq_slice)) {
        if (!has_cstart) {
            if (_py_start && (*_py_start != Py_None)) {
                cstart = __Pyx_PyIndex_AsSsize_t(*_py_start);
                if ((cstart == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstart = 0;
        }
        if (!has_cstop) {
            if (_py_stop && (*_py_stop != Py_None)) {
                cstop = __Pyx_PyIndex_AsSsize_t(*_py_stop);
                if ((cstop == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstop = PY_SSIZE_T_MAX;
        }
        if (wraparound && unlikely((cstart < 0) | (cstop < 0)) && likely(ms->sq_length)) {
            Py_ssize_t l = ms->sq_length(obj);
            if (likely(l >= 0)) {
                if (cstop < 0) {
                    cstop += l;
                    if (cstop < 0) cstop = 0;
                }
                if (cstart < 0) {
                    cstart += l;
                    if (cstart < 0) cstart = 0;
                }
            } else {
                if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                    goto bad;
                PyErr_Clear();
            }
        }
        return ms->sq_slice(obj, cstart, cstop);
    }
#endif
    mp = Py_TYPE(obj)->tp_as_mapping;
    if (likely(mp && mp->mp_subscript))
#endif
    {
        PyObject* result;
        PyObject *py_slice, *py_start, *py_stop;
        if (_py_slice) {
            py_slice = *_py_slice;
        } else {
            PyObject* owned_start = NULL;
            PyObject* owned_stop = NULL;
            if (_py_start) {
                py_start = *_py_start;
            } else {
                if (has_cstart) {
                    owned_start = py_start = PyInt_FromSsize_t(cstart);
                    if (unlikely(!py_start)) goto bad;
                } else
                    py_start = Py_None;
            }
            if (_py_stop) {
                py_stop = *_py_stop;
            } else {
                if (has_cstop) {
                    owned_stop = py_stop = PyInt_FromSsize_t(cstop);
                    if (unlikely(!py_stop)) {
                        Py_XDECREF(owned_start);
                        goto bad;
                    }
                } else
                    py_stop = Py_None;
            }
            py_slice = PySlice_New(py_start, py_stop, Py_None);
            Py_XDECREF(owned_start);
            Py_XDECREF(owned_stop);
            if (unlikely(!py_slice)) goto bad;
        }
#if CYTHON_USE_TYPE_SLOTS
        result = mp->mp_subscript(obj, py_slice);
#else
        result = PyObject_GetItem(obj, py_slice);
#endif
        if (!_py_slice) {
            Py_DECREF(py_slice);
        }
        return result;
    }
    PyErr_Format(PyExc_TypeError,
        "'%.200s' object is unsliceable", Py_TYPE(obj)->tp_name);
bad:
    return NULL;
}

/* decode_c_bytes */
static CYTHON_INLINE PyObject* __Pyx_decode_c_bytes(
         const char* cstring, Py_ssize_t length, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors)) {
    if (unlikely((start < 0) | (stop < 0))) {
        if (start < 0) {
            start += length;
            if (start < 0)
                start = 0;
        }
        if (stop < 0)
            stop += length;
    }
    if (stop > length)
        stop = length;
    if (unlikely(stop <= start))
        return __Pyx_NewRef(__pyx_empty_unicode);
    length = stop - start;
    cstring += start;
    if (decode_func) {
        return decode_func(cstring, length, errors);
    } else {
        return PyUnicode_Decode(cstring, length, encoding, errors);
    }
}

/* PyExec */
static CYTHON_INLINE PyObject* __Pyx_PyExec2(PyObject* o, PyObject* globals) {
    return __Pyx_PyExec3(o, globals, NULL);
}
static PyObject* __Pyx_PyExec3(PyObject* o, PyObject* globals, PyObject* locals) {
    PyObject* result;
    PyObject* s = 0;
    char *code = 0;
    if (!globals || globals == Py_None) {
        globals = __pyx_d;
    } else if (!PyDict_Check(globals)) {
        PyErr_Format(PyExc_TypeError, "exec() arg 2 must be a dict, not %.200s",
                     Py_TYPE(globals)->tp_name);
        goto bad;
    }
    if (!locals || locals == Py_None) {
        locals = globals;
    }
    if (__Pyx_PyDict_GetItemStr(globals, __pyx_n_s_builtins) == NULL) {
        if (PyDict_SetItem(globals, __pyx_n_s_builtins, PyEval_GetBuiltins()) < 0)
            goto bad;
    }
    if (PyCode_Check(o)) {
        if (__Pyx_PyCode_HasFreeVars((PyCodeObject *)o)) {
            PyErr_SetString(PyExc_TypeError,
                "code object passed to exec() may not contain free variables");
            goto bad;
        }
        #if CYTHON_COMPILING_IN_PYPY || PY_VERSION_HEX < 0x030200B1
        result = PyEval_EvalCode((PyCodeObject *)o, globals, locals);
        #else
        result = PyEval_EvalCode(o, globals, locals);
        #endif
    } else {
        PyCompilerFlags cf;
        cf.cf_flags = 0;
#if PY_VERSION_HEX >= 0x030800A3
        cf.cf_feature_version = PY_MINOR_VERSION;
#endif
        if (PyUnicode_Check(o)) {
            cf.cf_flags = PyCF_SOURCE_IS_UTF8;
            s = PyUnicode_AsUTF8String(o);
            if (!s) goto bad;
            o = s;
        #if PY_MAJOR_VERSION >= 3
        } else if (!PyBytes_Check(o)) {
        #else
        } else if (!PyString_Check(o)) {
        #endif
            PyErr_Format(PyExc_TypeError,
                "exec: arg 1 must be string, bytes or code object, got %.200s",
                Py_TYPE(o)->tp_name);
            goto bad;
        }
        #if PY_MAJOR_VERSION >= 3
        code = PyBytes_AS_STRING(o);
        #else
        code = PyString_AS_STRING(o);
        #endif
        if (PyEval_MergeCompilerFlags(&cf)) {
            result = PyRun_StringFlags(code, Py_file_input, globals, locals, &cf);
        } else {
            result = PyRun_String(code, Py_file_input, globals, locals);
        }
        Py_XDECREF(s);
    }
    return result;
bad:
    Py_XDECREF(s);
    return 0;
}

/* Globals */
static PyObject* __Pyx_Globals(void) {
    Py_ssize_t i;
    PyObject *names;
    PyObject *globals = __pyx_d;
    Py_INCREF(globals);
    names = PyObject_Dir(__pyx_m);
    if (!names)
        goto bad;
    for (i = PyList_GET_SIZE(names)-1; i >= 0; i--) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject* name = PySequence_ITEM(names, i);
        if (!name)
            goto bad;
#else
        PyObject* name = PyList_GET_ITEM(names, i);
#endif
        if (!PyDict_Contains(globals, name)) {
            PyObject* value = __Pyx_GetAttr(__pyx_m, name);
            if (!value) {
#if CYTHON_COMPILING_IN_PYPY
                Py_DECREF(name);
#endif
                goto bad;
            }
            if (PyDict_SetItem(globals, name, value) < 0) {
#if CYTHON_COMPILING_IN_PYPY
                Py_DECREF(name);
#endif
                Py_DECREF(value);
                goto bad;
            }
        }
#if CYTHON_COMPILING_IN_PYPY
        Py_DECREF(name);
#endif
    }
    Py_DECREF(names);
    return globals;
bad:
    Py_XDECREF(names);
    Py_XDECREF(globals);
    return NULL;
}

/* Import */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if ((1) && (strchr(__Pyx_MODULE_NAME, '.'))) {
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, (PyObject *)NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* PyObject_GenericGetAttrNoDict */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject *__Pyx_RaiseGenericGetAttributeError(PyTypeObject *tp, PyObject *attr_name) {
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'%.50s' object has no attribute '%U'",
                 tp->tp_name, attr_name);
#else
                 "'%.50s' object has no attribute '%.400s'",
                 tp->tp_name, PyString_AS_STRING(attr_name));
#endif
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name) {
    PyObject *descr;
    PyTypeObject *tp = Py_TYPE(obj);
    if (unlikely(!PyString_Check(attr_name))) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    assert(!tp->tp_dictoffset);
    descr = _PyType_Lookup(tp, attr_name);
    if (unlikely(!descr)) {
        return __Pyx_RaiseGenericGetAttributeError(tp, attr_name);
    }
    Py_INCREF(descr);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_HAVE_CLASS)))
    #endif
    {
        descrgetfunc f = Py_TYPE(descr)->tp_descr_get;
        if (unlikely(f)) {
            PyObject *res = f(descr, obj, (PyObject *)tp);
            Py_DECREF(descr);
            return res;
        }
    }
    return descr;
}
#endif

/* PyObject_GenericGetAttr */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name) {
    if (unlikely(Py_TYPE(obj)->tp_dictoffset)) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    return __Pyx_PyObject_GenericGetAttrNoDict(obj, attr_name);
}
#endif

/* SetVTable */
static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s_pyx_vtable, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

/* PyObjectGetAttrStrNoError */
static void __Pyx_PyObject_GetAttrStr_ClearAttributeError(void) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (likely(__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        __Pyx_PyErr_Clear();
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_TYPE_SLOTS && PY_VERSION_HEX >= 0x030700B1
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro == PyObject_GenericGetAttr)) {
        return _PyObject_GenericGetAttrWithDict(obj, attr_name, NULL, 1);
    }
#endif
    result = __Pyx_PyObject_GetAttrStr(obj, attr_name);
    if (unlikely(!result)) {
        __Pyx_PyObject_GetAttrStr_ClearAttributeError();
    }
    return result;
}

/* SetupReduce */
static int __Pyx_setup_reduce_is_named(PyObject* meth, PyObject* name) {
  int ret;
  PyObject *name_attr;
  name_attr = __Pyx_PyObject_GetAttrStr(meth, __pyx_n_s_name);
  if (likely(name_attr)) {
      ret = PyObject_RichCompareBool(name_attr, name, Py_EQ);
  } else {
      ret = -1;
  }
  if (unlikely(ret < 0)) {
      PyErr_Clear();
      ret = 0;
  }
  Py_XDECREF(name_attr);
  return ret;
}
static int __Pyx_setup_reduce(PyObject* type_obj) {
    int ret = 0;
    PyObject *object_reduce = NULL;
    PyObject *object_reduce_ex = NULL;
    PyObject *reduce = NULL;
    PyObject *reduce_ex = NULL;
    PyObject *reduce_cython = NULL;
    PyObject *setstate = NULL;
    PyObject *setstate_cython = NULL;
#if CYTHON_USE_PYTYPE_LOOKUP
    if (_PyType_Lookup((PyTypeObject*)type_obj, __pyx_n_s_getstate)) goto __PYX_GOOD;
#else
    if (PyObject_HasAttr(type_obj, __pyx_n_s_getstate)) goto __PYX_GOOD;
#endif
#if CYTHON_USE_PYTYPE_LOOKUP
    object_reduce_ex = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto __PYX_BAD;
#else
    object_reduce_ex = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto __PYX_BAD;
#endif
    reduce_ex = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce_ex); if (unlikely(!reduce_ex)) goto __PYX_BAD;
    if (reduce_ex == object_reduce_ex) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_reduce = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto __PYX_BAD;
#else
        object_reduce = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto __PYX_BAD;
#endif
        reduce = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce); if (unlikely(!reduce)) goto __PYX_BAD;
        if (reduce == object_reduce || __Pyx_setup_reduce_is_named(reduce, __pyx_n_s_reduce_cython)) {
            reduce_cython = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_reduce_cython);
            if (likely(reduce_cython)) {
                ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce, reduce_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
            } else if (reduce == object_reduce || PyErr_Occurred()) {
                goto __PYX_BAD;
            }
            setstate = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_setstate);
            if (!setstate) PyErr_Clear();
            if (!setstate || __Pyx_setup_reduce_is_named(setstate, __pyx_n_s_setstate_cython)) {
                setstate_cython = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_setstate_cython);
                if (likely(setstate_cython)) {
                    ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate, setstate_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                    ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                } else if (!setstate || PyErr_Occurred()) {
                    goto __PYX_BAD;
                }
            }
            PyType_Modified((PyTypeObject*)type_obj);
        }
    }
    goto __PYX_GOOD;
__PYX_BAD:
    if (!PyErr_Occurred())
        PyErr_Format(PyExc_RuntimeError, "Unable to initialize pickling for %s", ((PyTypeObject*)type_obj)->tp_name);
    ret = -1;
__PYX_GOOD:
#if !CYTHON_USE_PYTYPE_LOOKUP
    Py_XDECREF(object_reduce);
    Py_XDECREF(object_reduce_ex);
#endif
    Py_XDECREF(reduce);
    Py_XDECREF(reduce_ex);
    Py_XDECREF(reduce_cython);
    Py_XDECREF(setstate);
    Py_XDECREF(setstate_cython);
    return ret;
}

/* GetNameInClass */
static PyObject *__Pyx_GetGlobalNameAfterAttributeLookup(PyObject *name) {
    PyObject *result;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (unlikely(!__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        return NULL;
    __Pyx_PyErr_Clear();
    __Pyx_GetModuleGlobalNameUncached(result, name);
    return result;
}
static PyObject *__Pyx__GetNameInClass(PyObject *nmspace, PyObject *name) {
    PyObject *result;
    result = __Pyx_PyObject_GetAttrStr(nmspace, name);
    if (!result) {
        result = __Pyx_GetGlobalNameAfterAttributeLookup(name);
    }
    return result;
}

/* ImportFrom */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* CalculateMetaclass */
static PyObject *__Pyx_CalculateMetaclass(PyTypeObject *metaclass, PyObject *bases) {
    Py_ssize_t i, nbases = PyTuple_GET_SIZE(bases);
    for (i=0; i < nbases; i++) {
        PyTypeObject *tmptype;
        PyObject *tmp = PyTuple_GET_ITEM(bases, i);
        tmptype = Py_TYPE(tmp);
#if PY_MAJOR_VERSION < 3
        if (tmptype == &PyClass_Type)
            continue;
#endif
        if (!metaclass) {
            metaclass = tmptype;
            continue;
        }
        if (PyType_IsSubtype(metaclass, tmptype))
            continue;
        if (PyType_IsSubtype(tmptype, metaclass)) {
            metaclass = tmptype;
            continue;
        }
        PyErr_SetString(PyExc_TypeError,
                        "metaclass conflict: "
                        "the metaclass of a derived class "
                        "must be a (non-strict) subclass "
                        "of the metaclasses of all its bases");
        return NULL;
    }
    if (!metaclass) {
#if PY_MAJOR_VERSION < 3
        metaclass = &PyClass_Type;
#else
        metaclass = &PyType_Type;
#endif
    }
    Py_INCREF((PyObject*) metaclass);
    return (PyObject*) metaclass;
}

/* Py3ClassCreate */
static PyObject *__Pyx_Py3MetaclassPrepare(PyObject *metaclass, PyObject *bases, PyObject *name,
                                           PyObject *qualname, PyObject *mkw, PyObject *modname, PyObject *doc) {
    PyObject *ns;
    if (metaclass) {
        PyObject *prep = __Pyx_PyObject_GetAttrStr(metaclass, __pyx_n_s_prepare);
        if (prep) {
            PyObject *pargs = PyTuple_Pack(2, name, bases);
            if (unlikely(!pargs)) {
                Py_DECREF(prep);
                return NULL;
            }
            ns = PyObject_Call(prep, pargs, mkw);
            Py_DECREF(prep);
            Py_DECREF(pargs);
        } else {
            if (unlikely(!PyErr_ExceptionMatches(PyExc_AttributeError)))
                return NULL;
            PyErr_Clear();
            ns = PyDict_New();
        }
    } else {
        ns = PyDict_New();
    }
    if (unlikely(!ns))
        return NULL;
    if (unlikely(PyObject_SetItem(ns, __pyx_n_s_module, modname) < 0)) goto bad;
    if (unlikely(PyObject_SetItem(ns, __pyx_n_s_qualname, qualname) < 0)) goto bad;
    if (unlikely(doc && PyObject_SetItem(ns, __pyx_n_s_doc, doc) < 0)) goto bad;
    return ns;
bad:
    Py_DECREF(ns);
    return NULL;
}
static PyObject *__Pyx_Py3ClassCreate(PyObject *metaclass, PyObject *name, PyObject *bases,
                                      PyObject *dict, PyObject *mkw,
                                      int calculate_metaclass, int allow_py2_metaclass) {
    PyObject *result, *margs;
    PyObject *owned_metaclass = NULL;
    if (allow_py2_metaclass) {
        owned_metaclass = PyObject_GetItem(dict, __pyx_n_s_metaclass);
        if (owned_metaclass) {
            metaclass = owned_metaclass;
        } else if (likely(PyErr_ExceptionMatches(PyExc_KeyError))) {
            PyErr_Clear();
        } else {
            return NULL;
        }
    }
    if (calculate_metaclass && (!metaclass || PyType_Check(metaclass))) {
        metaclass = __Pyx_CalculateMetaclass((PyTypeObject*) metaclass, bases);
        Py_XDECREF(owned_metaclass);
        if (unlikely(!metaclass))
            return NULL;
        owned_metaclass = metaclass;
    }
    margs = PyTuple_Pack(3, name, bases, dict);
    if (unlikely(!margs)) {
        result = NULL;
    } else {
        result = PyObject_Call(metaclass, margs, mkw);
        Py_DECREF(margs);
    }
    Py_XDECREF(owned_metaclass);
    return result;
}

/* CLineInTraceback */
#ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(CYTHON_NCP_UNUSED PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

/* CIntFromPyVerify */
#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
static CYTHON_INLINE unsigned int __Pyx_PyInt_As_unsigned_int(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const unsigned int neg_one = (unsigned int) -1, const_zero = (unsigned int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(unsigned int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(unsigned int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (unsigned int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (unsigned int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(unsigned int, digit, digits[0])
                case 2:
                    if (8 * sizeof(unsigned int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) >= 2 * PyLong_SHIFT) {
                            return (unsigned int) (((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(unsigned int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) >= 3 * PyLong_SHIFT) {
                            return (unsigned int) (((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(unsigned int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) >= 4 * PyLong_SHIFT) {
                            return (unsigned int) (((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (unsigned int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(unsigned int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(unsigned int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (unsigned int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(unsigned int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(unsigned int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(unsigned int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT) {
                            return (unsigned int) (((unsigned int)-1)*(((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(unsigned int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT) {
                            return (unsigned int) ((((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT) {
                            return (unsigned int) (((unsigned int)-1)*(((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(unsigned int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT) {
                            return (unsigned int) ((((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 4 * PyLong_SHIFT) {
                            return (unsigned int) (((unsigned int)-1)*(((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(unsigned int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 4 * PyLong_SHIFT) {
                            return (unsigned int) ((((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(unsigned int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(unsigned int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            unsigned int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (unsigned int) -1;
        }
    } else {
        unsigned int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (unsigned int) -1;
        val = __Pyx_PyInt_As_unsigned_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to unsigned int");
    return (unsigned int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to unsigned int");
    return (unsigned int) -1;
}

/* CIntFromPy */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const size_t neg_one = (size_t) -1, const_zero = (size_t) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(size_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(size_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (size_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(size_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 2 * PyLong_SHIFT) {
                            return (size_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 3 * PyLong_SHIFT) {
                            return (size_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 4 * PyLong_SHIFT) {
                            return (size_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (size_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(size_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(size_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(size_t, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(size_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(size_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) ((((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) ((((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) ((((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(size_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(size_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            size_t val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (size_t) -1;
        }
    } else {
        size_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (size_t) -1;
        val = __Pyx_PyInt_As_size_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to size_t");
    return (size_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to size_t");
    return (size_t) -1;
}

/* CIntFromPy */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* FastTypeChecks */
#if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = a->tp_base;
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    int res = exc_type1 ? __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type1) : 0;
    if (!res) {
        res = __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
    return res;
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* CoroutineBase */
#include <structmember.h>
#include <frameobject.h>
#define __Pyx_Coroutine_Undelegate(gen) Py_CLEAR((gen)->yieldfrom)
static int __Pyx_PyGen__FetchStopIterationValue(CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject **pvalue) {
    PyObject *et, *ev, *tb;
    PyObject *value = NULL;
    __Pyx_ErrFetch(&et, &ev, &tb);
    if (!et) {
        Py_XDECREF(tb);
        Py_XDECREF(ev);
        Py_INCREF(Py_None);
        *pvalue = Py_None;
        return 0;
    }
    if (likely(et == PyExc_StopIteration)) {
        if (!ev) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#if PY_VERSION_HEX >= 0x030300A0
        else if (Py_TYPE(ev) == (PyTypeObject*)PyExc_StopIteration) {
            value = ((PyStopIterationObject *)ev)->value;
            Py_INCREF(value);
            Py_DECREF(ev);
        }
#endif
        else if (unlikely(PyTuple_Check(ev))) {
            if (PyTuple_GET_SIZE(ev) >= 1) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                value = PyTuple_GET_ITEM(ev, 0);
                Py_INCREF(value);
#else
                value = PySequence_ITEM(ev, 0);
#endif
            } else {
                Py_INCREF(Py_None);
                value = Py_None;
            }
            Py_DECREF(ev);
        }
        else if (!__Pyx_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration)) {
            value = ev;
        }
        if (likely(value)) {
            Py_XDECREF(tb);
            Py_DECREF(et);
            *pvalue = value;
            return 0;
        }
    } else if (!__Pyx_PyErr_GivenExceptionMatches(et, PyExc_StopIteration)) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    PyErr_NormalizeException(&et, &ev, &tb);
    if (unlikely(!PyObject_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration))) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    Py_XDECREF(tb);
    Py_DECREF(et);
#if PY_VERSION_HEX >= 0x030300A0
    value = ((PyStopIterationObject *)ev)->value;
    Py_INCREF(value);
    Py_DECREF(ev);
#else
    {
        PyObject* args = __Pyx_PyObject_GetAttrStr(ev, __pyx_n_s_args);
        Py_DECREF(ev);
        if (likely(args)) {
            value = PySequence_GetItem(args, 0);
            Py_DECREF(args);
        }
        if (unlikely(!value)) {
            __Pyx_ErrRestore(NULL, NULL, NULL);
            Py_INCREF(Py_None);
            value = Py_None;
        }
    }
#endif
    *pvalue = value;
    return 0;
}
static CYTHON_INLINE
void __Pyx_Coroutine_ExceptionClear(__Pyx_ExcInfoStruct *exc_state) {
    PyObject *t, *v, *tb;
    t = exc_state->exc_type;
    v = exc_state->exc_value;
    tb = exc_state->exc_traceback;
    exc_state->exc_type = NULL;
    exc_state->exc_value = NULL;
    exc_state->exc_traceback = NULL;
    Py_XDECREF(t);
    Py_XDECREF(v);
    Py_XDECREF(tb);
}
#define __Pyx_Coroutine_AlreadyRunningError(gen)  (__Pyx__Coroutine_AlreadyRunningError(gen), (PyObject*)NULL)
static void __Pyx__Coroutine_AlreadyRunningError(CYTHON_UNUSED __pyx_CoroutineObject *gen) {
    const char *msg;
    if ((0)) {
    #ifdef __Pyx_Coroutine_USED
    } else if (__Pyx_Coroutine_Check((PyObject*)gen)) {
        msg = "coroutine already executing";
    #endif
    #ifdef __Pyx_AsyncGen_USED
    } else if (__Pyx_AsyncGen_CheckExact((PyObject*)gen)) {
        msg = "async generator already executing";
    #endif
    } else {
        msg = "generator already executing";
    }
    PyErr_SetString(PyExc_ValueError, msg);
}
#define __Pyx_Coroutine_NotStartedError(gen)  (__Pyx__Coroutine_NotStartedError(gen), (PyObject*)NULL)
static void __Pyx__Coroutine_NotStartedError(CYTHON_UNUSED PyObject *gen) {
    const char *msg;
    if ((0)) {
    #ifdef __Pyx_Coroutine_USED
    } else if (__Pyx_Coroutine_Check(gen)) {
        msg = "can't send non-None value to a just-started coroutine";
    #endif
    #ifdef __Pyx_AsyncGen_USED
    } else if (__Pyx_AsyncGen_CheckExact(gen)) {
        msg = "can't send non-None value to a just-started async generator";
    #endif
    } else {
        msg = "can't send non-None value to a just-started generator";
    }
    PyErr_SetString(PyExc_TypeError, msg);
}
#define __Pyx_Coroutine_AlreadyTerminatedError(gen, value, closing)  (__Pyx__Coroutine_AlreadyTerminatedError(gen, value, closing), (PyObject*)NULL)
static void __Pyx__Coroutine_AlreadyTerminatedError(CYTHON_UNUSED PyObject *gen, PyObject *value, CYTHON_UNUSED int closing) {
    #ifdef __Pyx_Coroutine_USED
    if (!closing && __Pyx_Coroutine_Check(gen)) {
        PyErr_SetString(PyExc_RuntimeError, "cannot reuse already awaited coroutine");
    } else
    #endif
    if (value) {
        #ifdef __Pyx_AsyncGen_USED
        if (__Pyx_AsyncGen_CheckExact(gen))
            PyErr_SetNone(__Pyx_PyExc_StopAsyncIteration);
        else
        #endif
        PyErr_SetNone(PyExc_StopIteration);
    }
}
static
PyObject *__Pyx_Coroutine_SendEx(__pyx_CoroutineObject *self, PyObject *value, int closing) {
    __Pyx_PyThreadState_declare
    PyThreadState *tstate;
    __Pyx_ExcInfoStruct *exc_state;
    PyObject *retval;
    assert(!self->is_running);
    if (unlikely(self->resume_label == 0)) {
        if (unlikely(value && value != Py_None)) {
            return __Pyx_Coroutine_NotStartedError((PyObject*)self);
        }
    }
    if (unlikely(self->resume_label == -1)) {
        return __Pyx_Coroutine_AlreadyTerminatedError((PyObject*)self, value, closing);
    }
#if CYTHON_FAST_THREAD_STATE
    __Pyx_PyThreadState_assign
    tstate = __pyx_tstate;
#else
    tstate = __Pyx_PyThreadState_Current;
#endif
    exc_state = &self->gi_exc_state;
    if (exc_state->exc_type) {
        #if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_PYSTON
        #else
        if (exc_state->exc_traceback) {
            PyTracebackObject *tb = (PyTracebackObject *) exc_state->exc_traceback;
            PyFrameObject *f = tb->tb_frame;
            Py_XINCREF(tstate->frame);
            assert(f->f_back == NULL);
            f->f_back = tstate->frame;
        }
        #endif
    }
#if CYTHON_USE_EXC_INFO_STACK
    exc_state->previous_item = tstate->exc_info;
    tstate->exc_info = exc_state;
#else
    if (exc_state->exc_type) {
        __Pyx_ExceptionSwap(&exc_state->exc_type, &exc_state->exc_value, &exc_state->exc_traceback);
    } else {
        __Pyx_Coroutine_ExceptionClear(exc_state);
        __Pyx_ExceptionSave(&exc_state->exc_type, &exc_state->exc_value, &exc_state->exc_traceback);
    }
#endif
    self->is_running = 1;
    retval = self->body((PyObject *) self, tstate, value);
    self->is_running = 0;
#if CYTHON_USE_EXC_INFO_STACK
    exc_state = &self->gi_exc_state;
    tstate->exc_info = exc_state->previous_item;
    exc_state->previous_item = NULL;
    __Pyx_Coroutine_ResetFrameBackpointer(exc_state);
#endif
    return retval;
}
static CYTHON_INLINE void __Pyx_Coroutine_ResetFrameBackpointer(__Pyx_ExcInfoStruct *exc_state) {
    PyObject *exc_tb = exc_state->exc_traceback;
    if (likely(exc_tb)) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_PYSTON
#else
        PyTracebackObject *tb = (PyTracebackObject *) exc_tb;
        PyFrameObject *f = tb->tb_frame;
        Py_CLEAR(f->f_back);
#endif
    }
}
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_MethodReturn(CYTHON_UNUSED PyObject* gen, PyObject *retval) {
    if (unlikely(!retval)) {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        if (!__Pyx_PyErr_Occurred()) {
            PyObject *exc = PyExc_StopIteration;
            #ifdef __Pyx_AsyncGen_USED
            if (__Pyx_AsyncGen_CheckExact(gen))
                exc = __Pyx_PyExc_StopAsyncIteration;
            #endif
            __Pyx_PyErr_SetNone(exc);
        }
    }
    return retval;
}
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
static CYTHON_INLINE
PyObject *__Pyx_PyGen_Send(PyGenObject *gen, PyObject *arg) {
#if PY_VERSION_HEX <= 0x030A00A1
    return _PyGen_Send(gen, arg);
#else
    PyObject *result;
    if (PyIter_Send((PyObject*)gen, arg ? arg : Py_None, &result) == PYGEN_RETURN) {
        if (PyAsyncGen_CheckExact(gen)) {
            assert(result == Py_None);
            PyErr_SetNone(PyExc_StopAsyncIteration);
        }
        else if (result == Py_None) {
            PyErr_SetNone(PyExc_StopIteration);
        }
        else {
            _PyGen_SetStopIterationValue(result);
        }
        Py_CLEAR(result);
    }
    return result;
#endif
}
#endif
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_FinishDelegation(__pyx_CoroutineObject *gen) {
    PyObject *ret;
    PyObject *val = NULL;
    __Pyx_Coroutine_Undelegate(gen);
    __Pyx_PyGen__FetchStopIterationValue(__Pyx_PyThreadState_Current, &val);
    ret = __Pyx_Coroutine_SendEx(gen, val, 0);
    Py_XDECREF(val);
    return ret;
}
static PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value) {
    PyObject *retval;
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Coroutine_Send(yf, value);
        } else
        #endif
        #ifdef __Pyx_Coroutine_USED
        if (__Pyx_Coroutine_Check(yf)) {
            ret = __Pyx_Coroutine_Send(yf, value);
        } else
        #endif
        #ifdef __Pyx_AsyncGen_USED
        if (__pyx_PyAsyncGenASend_CheckExact(yf)) {
            ret = __Pyx_async_gen_asend_send(yf, value);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyGen_CheckExact(yf)) {
            ret = __Pyx_PyGen_Send((PyGenObject*)yf, value == Py_None ? NULL : value);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03050000 && defined(PyCoro_CheckExact) && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyCoro_CheckExact(yf)) {
            ret = __Pyx_PyGen_Send((PyGenObject*)yf, value == Py_None ? NULL : value);
        } else
        #endif
        {
            if (value == Py_None)
                ret = Py_TYPE(yf)->tp_iternext(yf);
            else
                ret = __Pyx_PyObject_CallMethod1(yf, __pyx_n_s_send, value);
        }
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        retval = __Pyx_Coroutine_FinishDelegation(gen);
    } else {
        retval = __Pyx_Coroutine_SendEx(gen, value, 0);
    }
    return __Pyx_Coroutine_MethodReturn(self, retval);
}
static int __Pyx_Coroutine_CloseIter(__pyx_CoroutineObject *gen, PyObject *yf) {
    PyObject *retval = NULL;
    int err = 0;
    #ifdef __Pyx_Generator_USED
    if (__Pyx_Generator_CheckExact(yf)) {
        retval = __Pyx_Coroutine_Close(yf);
        if (!retval)
            return -1;
    } else
    #endif
    #ifdef __Pyx_Coroutine_USED
    if (__Pyx_Coroutine_Check(yf)) {
        retval = __Pyx_Coroutine_Close(yf);
        if (!retval)
            return -1;
    } else
    if (__Pyx_CoroutineAwait_CheckExact(yf)) {
        retval = __Pyx_CoroutineAwait_Close((__pyx_CoroutineAwaitObject*)yf, NULL);
        if (!retval)
            return -1;
    } else
    #endif
    #ifdef __Pyx_AsyncGen_USED
    if (__pyx_PyAsyncGenASend_CheckExact(yf)) {
        retval = __Pyx_async_gen_asend_close(yf, NULL);
    } else
    if (__pyx_PyAsyncGenAThrow_CheckExact(yf)) {
        retval = __Pyx_async_gen_athrow_close(yf, NULL);
    } else
    #endif
    {
        PyObject *meth;
        gen->is_running = 1;
        meth = __Pyx_PyObject_GetAttrStr(yf, __pyx_n_s_close);
        if (unlikely(!meth)) {
            if (!PyErr_ExceptionMatches(PyExc_AttributeError)) {
                PyErr_WriteUnraisable(yf);
            }
            PyErr_Clear();
        } else {
            retval = PyObject_CallFunction(meth, NULL);
            Py_DECREF(meth);
            if (!retval)
                err = -1;
        }
        gen->is_running = 0;
    }
    Py_XDECREF(retval);
    return err;
}
static PyObject *__Pyx_Generator_Next(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Generator_Next(yf);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyGen_CheckExact(yf)) {
            ret = __Pyx_PyGen_Send((PyGenObject*)yf, NULL);
        } else
        #endif
        #ifdef __Pyx_Coroutine_USED
        if (__Pyx_Coroutine_Check(yf)) {
            ret = __Pyx_Coroutine_Send(yf, Py_None);
        } else
        #endif
            ret = Py_TYPE(yf)->tp_iternext(yf);
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        return __Pyx_Coroutine_FinishDelegation(gen);
    }
    return __Pyx_Coroutine_SendEx(gen, Py_None, 0);
}
static PyObject *__Pyx_Coroutine_Close_Method(PyObject *self, CYTHON_UNUSED PyObject *arg) {
    return __Pyx_Coroutine_Close(self);
}
static PyObject *__Pyx_Coroutine_Close(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject *retval, *raised_exception;
    PyObject *yf = gen->yieldfrom;
    int err = 0;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        Py_INCREF(yf);
        err = __Pyx_Coroutine_CloseIter(gen, yf);
        __Pyx_Coroutine_Undelegate(gen);
        Py_DECREF(yf);
    }
    if (err == 0)
        PyErr_SetNone(PyExc_GeneratorExit);
    retval = __Pyx_Coroutine_SendEx(gen, NULL, 1);
    if (unlikely(retval)) {
        const char *msg;
        Py_DECREF(retval);
        if ((0)) {
        #ifdef __Pyx_Coroutine_USED
        } else if (__Pyx_Coroutine_Check(self)) {
            msg = "coroutine ignored GeneratorExit";
        #endif
        #ifdef __Pyx_AsyncGen_USED
        } else if (__Pyx_AsyncGen_CheckExact(self)) {
#if PY_VERSION_HEX < 0x03060000
            msg = "async generator ignored GeneratorExit - might require Python 3.6+ finalisation (PEP 525)";
#else
            msg = "async generator ignored GeneratorExit";
#endif
        #endif
        } else {
            msg = "generator ignored GeneratorExit";
        }
        PyErr_SetString(PyExc_RuntimeError, msg);
        return NULL;
    }
    raised_exception = PyErr_Occurred();
    if (likely(!raised_exception || __Pyx_PyErr_GivenExceptionMatches2(raised_exception, PyExc_GeneratorExit, PyExc_StopIteration))) {
        if (raised_exception) PyErr_Clear();
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
}
static PyObject *__Pyx__Coroutine_Throw(PyObject *self, PyObject *typ, PyObject *val, PyObject *tb,
                                        PyObject *args, int close_on_genexit) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        Py_INCREF(yf);
        if (__Pyx_PyErr_GivenExceptionMatches(typ, PyExc_GeneratorExit) && close_on_genexit) {
            int err = __Pyx_Coroutine_CloseIter(gen, yf);
            Py_DECREF(yf);
            __Pyx_Coroutine_Undelegate(gen);
            if (err < 0)
                return __Pyx_Coroutine_MethodReturn(self, __Pyx_Coroutine_SendEx(gen, NULL, 0));
            goto throw_here;
        }
        gen->is_running = 1;
        if (0
        #ifdef __Pyx_Generator_USED
            || __Pyx_Generator_CheckExact(yf)
        #endif
        #ifdef __Pyx_Coroutine_USED
            || __Pyx_Coroutine_Check(yf)
        #endif
            ) {
            ret = __Pyx__Coroutine_Throw(yf, typ, val, tb, args, close_on_genexit);
        #ifdef __Pyx_Coroutine_USED
        } else if (__Pyx_CoroutineAwait_CheckExact(yf)) {
            ret = __Pyx__Coroutine_Throw(((__pyx_CoroutineAwaitObject*)yf)->coroutine, typ, val, tb, args, close_on_genexit);
        #endif
        } else {
            PyObject *meth = __Pyx_PyObject_GetAttrStr(yf, __pyx_n_s_throw);
            if (unlikely(!meth)) {
                Py_DECREF(yf);
                if (!PyErr_ExceptionMatches(PyExc_AttributeError)) {
                    gen->is_running = 0;
                    return NULL;
                }
                PyErr_Clear();
                __Pyx_Coroutine_Undelegate(gen);
                gen->is_running = 0;
                goto throw_here;
            }
            if (likely(args)) {
                ret = PyObject_CallObject(meth, args);
            } else {
                ret = PyObject_CallFunctionObjArgs(meth, typ, val, tb, NULL);
            }
            Py_DECREF(meth);
        }
        gen->is_running = 0;
        Py_DECREF(yf);
        if (!ret) {
            ret = __Pyx_Coroutine_FinishDelegation(gen);
        }
        return __Pyx_Coroutine_MethodReturn(self, ret);
    }
throw_here:
    __Pyx_Raise(typ, val, tb, NULL);
    return __Pyx_Coroutine_MethodReturn(self, __Pyx_Coroutine_SendEx(gen, NULL, 0));
}
static PyObject *__Pyx_Coroutine_Throw(PyObject *self, PyObject *args) {
    PyObject *typ;
    PyObject *val = NULL;
    PyObject *tb = NULL;
    if (!PyArg_UnpackTuple(args, (char *)"throw", 1, 3, &typ, &val, &tb))
        return NULL;
    return __Pyx__Coroutine_Throw(self, typ, val, tb, args, 1);
}
static CYTHON_INLINE int __Pyx_Coroutine_traverse_excstate(__Pyx_ExcInfoStruct *exc_state, visitproc visit, void *arg) {
    Py_VISIT(exc_state->exc_type);
    Py_VISIT(exc_state->exc_value);
    Py_VISIT(exc_state->exc_traceback);
    return 0;
}
static int __Pyx_Coroutine_traverse(__pyx_CoroutineObject *gen, visitproc visit, void *arg) {
    Py_VISIT(gen->closure);
    Py_VISIT(gen->classobj);
    Py_VISIT(gen->yieldfrom);
    return __Pyx_Coroutine_traverse_excstate(&gen->gi_exc_state, visit, arg);
}
static int __Pyx_Coroutine_clear(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    Py_CLEAR(gen->closure);
    Py_CLEAR(gen->classobj);
    Py_CLEAR(gen->yieldfrom);
    __Pyx_Coroutine_ExceptionClear(&gen->gi_exc_state);
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        Py_CLEAR(((__pyx_PyAsyncGenObject*)gen)->ag_finalizer);
    }
#endif
    Py_CLEAR(gen->gi_code);
    Py_CLEAR(gen->gi_frame);
    Py_CLEAR(gen->gi_name);
    Py_CLEAR(gen->gi_qualname);
    Py_CLEAR(gen->gi_modulename);
    return 0;
}
static void __Pyx_Coroutine_dealloc(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject_GC_UnTrack(gen);
    if (gen->gi_weakreflist != NULL)
        PyObject_ClearWeakRefs(self);
    if (gen->resume_label >= 0) {
        PyObject_GC_Track(self);
#if PY_VERSION_HEX >= 0x030400a1 && CYTHON_USE_TP_FINALIZE
        if (PyObject_CallFinalizerFromDealloc(self))
#else
        Py_TYPE(gen)->tp_del(self);
        if (Py_REFCNT(self) > 0)
#endif
        {
            return;
        }
        PyObject_GC_UnTrack(self);
    }
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        /* We have to handle this case for asynchronous generators
           right here, because this code has to be between UNTRACK
           and GC_Del. */
        Py_CLEAR(((__pyx_PyAsyncGenObject*)self)->ag_finalizer);
    }
#endif
    __Pyx_Coroutine_clear(self);
    PyObject_GC_Del(gen);
}
static void __Pyx_Coroutine_del(PyObject *self) {
    PyObject *error_type, *error_value, *error_traceback;
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    __Pyx_PyThreadState_declare
    if (gen->resume_label < 0) {
        return;
    }
#if !CYTHON_USE_TP_FINALIZE
    assert(self->ob_refcnt == 0);
    __Pyx_SET_REFCNT(self, 1);
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&error_type, &error_value, &error_traceback);
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        __pyx_PyAsyncGenObject *agen = (__pyx_PyAsyncGenObject*)self;
        PyObject *finalizer = agen->ag_finalizer;
        if (finalizer && !agen->ag_closed) {
            PyObject *res = __Pyx_PyObject_CallOneArg(finalizer, self);
            if (unlikely(!res)) {
                PyErr_WriteUnraisable(self);
            } else {
                Py_DECREF(res);
            }
            __Pyx_ErrRestore(error_type, error_value, error_traceback);
            return;
        }
    }
#endif
    if (unlikely(gen->resume_label == 0 && !error_value)) {
#ifdef __Pyx_Coroutine_USED
#ifdef __Pyx_Generator_USED
    if (!__Pyx_Generator_CheckExact(self))
#endif
        {
        PyObject_GC_UnTrack(self);
#if PY_MAJOR_VERSION >= 3  || defined(PyErr_WarnFormat)
        if (unlikely(PyErr_WarnFormat(PyExc_RuntimeWarning, 1, "coroutine '%.50S' was never awaited", gen->gi_qualname) < 0))
            PyErr_WriteUnraisable(self);
#else
        {PyObject *msg;
        char *cmsg;
        #if CYTHON_COMPILING_IN_PYPY
        msg = NULL;
        cmsg = (char*) "coroutine was never awaited";
        #else
        char *cname;
        PyObject *qualname;
        qualname = gen->gi_qualname;
        cname = PyString_AS_STRING(qualname);
        msg = PyString_FromFormat("coroutine '%.50s' was never awaited", cname);
        if (unlikely(!msg)) {
            PyErr_Clear();
            cmsg = (char*) "coroutine was never awaited";
        } else {
            cmsg = PyString_AS_STRING(msg);
        }
        #endif
        if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning, cmsg, 1) < 0))
            PyErr_WriteUnraisable(self);
        Py_XDECREF(msg);}
#endif
        PyObject_GC_Track(self);
        }
#endif
    } else {
        PyObject *res = __Pyx_Coroutine_Close(self);
        if (unlikely(!res)) {
            if (PyErr_Occurred())
                PyErr_WriteUnraisable(self);
        } else {
            Py_DECREF(res);
        }
    }
    __Pyx_ErrRestore(error_type, error_value, error_traceback);
#if !CYTHON_USE_TP_FINALIZE
    assert(Py_REFCNT(self) > 0);
    if (--self->ob_refcnt == 0) {
        return;
    }
    {
        Py_ssize_t refcnt = Py_REFCNT(self);
        _Py_NewReference(self);
        __Pyx_SET_REFCNT(self, refcnt);
    }
#if CYTHON_COMPILING_IN_CPYTHON
    assert(PyType_IS_GC(Py_TYPE(self)) &&
           _Py_AS_GC(self)->gc.gc_refs != _PyGC_REFS_UNTRACKED);
    _Py_DEC_REFTOTAL;
#endif
#ifdef COUNT_ALLOCS
    --Py_TYPE(self)->tp_frees;
    --Py_TYPE(self)->tp_allocs;
#endif
#endif
}
static PyObject *
__Pyx_Coroutine_get_name(__pyx_CoroutineObject *self, CYTHON_UNUSED void *context)
{
    PyObject *name = self->gi_name;
    if (unlikely(!name)) name = Py_None;
    Py_INCREF(name);
    return name;
}
static int
__Pyx_Coroutine_set_name(__pyx_CoroutineObject *self, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    tmp = self->gi_name;
    Py_INCREF(value);
    self->gi_name = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_Coroutine_get_qualname(__pyx_CoroutineObject *self, CYTHON_UNUSED void *context)
{
    PyObject *name = self->gi_qualname;
    if (unlikely(!name)) name = Py_None;
    Py_INCREF(name);
    return name;
}
static int
__Pyx_Coroutine_set_qualname(__pyx_CoroutineObject *self, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    tmp = self->gi_qualname;
    Py_INCREF(value);
    self->gi_qualname = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_Coroutine_get_frame(__pyx_CoroutineObject *self, CYTHON_UNUSED void *context)
{
    PyObject *frame = self->gi_frame;
    if (!frame) {
        if (unlikely(!self->gi_code)) {
            Py_RETURN_NONE;
        }
        frame = (PyObject *) PyFrame_New(
            PyThreadState_Get(),            /*PyThreadState *tstate,*/
            (PyCodeObject*) self->gi_code,  /*PyCodeObject *code,*/
            __pyx_d,                 /*PyObject *globals,*/
            0                               /*PyObject *locals*/
        );
        if (unlikely(!frame))
            return NULL;
        self->gi_frame = frame;
    }
    Py_INCREF(frame);
    return frame;
}
static __pyx_CoroutineObject *__Pyx__Coroutine_New(
            PyTypeObject* type, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name) {
    __pyx_CoroutineObject *gen = PyObject_GC_New(__pyx_CoroutineObject, type);
    if (unlikely(!gen))
        return NULL;
    return __Pyx__Coroutine_NewInit(gen, body, code, closure, name, qualname, module_name);
}
static __pyx_CoroutineObject *__Pyx__Coroutine_NewInit(
            __pyx_CoroutineObject *gen, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name) {
    gen->body = body;
    gen->closure = closure;
    Py_XINCREF(closure);
    gen->is_running = 0;
    gen->resume_label = 0;
    gen->classobj = NULL;
    gen->yieldfrom = NULL;
    gen->gi_exc_state.exc_type = NULL;
    gen->gi_exc_state.exc_value = NULL;
    gen->gi_exc_state.exc_traceback = NULL;
#if CYTHON_USE_EXC_INFO_STACK
    gen->gi_exc_state.previous_item = NULL;
#endif
    gen->gi_weakreflist = NULL;
    Py_XINCREF(qualname);
    gen->gi_qualname = qualname;
    Py_XINCREF(name);
    gen->gi_name = name;
    Py_XINCREF(module_name);
    gen->gi_modulename = module_name;
    Py_XINCREF(code);
    gen->gi_code = code;
    gen->gi_frame = NULL;
    PyObject_GC_Track(gen);
    return gen;
}

/* PatchModuleWithCoroutine */
static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code) {
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    int result;
    PyObject *globals, *result_obj;
    globals = PyDict_New();  if (unlikely(!globals)) goto ignore;
    result = PyDict_SetItemString(globals, "_cython_coroutine_type",
    #ifdef __Pyx_Coroutine_USED
        (PyObject*)__pyx_CoroutineType);
    #else
        Py_None);
    #endif
    if (unlikely(result < 0)) goto ignore;
    result = PyDict_SetItemString(globals, "_cython_generator_type",
    #ifdef __Pyx_Generator_USED
        (PyObject*)__pyx_GeneratorType);
    #else
        Py_None);
    #endif
    if (unlikely(result < 0)) goto ignore;
    if (unlikely(PyDict_SetItemString(globals, "_module", module) < 0)) goto ignore;
    if (unlikely(PyDict_SetItemString(globals, "__builtins__", __pyx_b) < 0)) goto ignore;
    result_obj = PyRun_String(py_code, Py_file_input, globals, globals);
    if (unlikely(!result_obj)) goto ignore;
    Py_DECREF(result_obj);
    Py_DECREF(globals);
    return module;
ignore:
    Py_XDECREF(globals);
    PyErr_WriteUnraisable(module);
    if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning, "Cython module failed to patch module with custom type", 1) < 0)) {
        Py_DECREF(module);
        module = NULL;
    }
#else
    py_code++;
#endif
    return module;
}

/* PatchGeneratorABC */
#ifndef CYTHON_REGISTER_ABCS
#define CYTHON_REGISTER_ABCS 1
#endif
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
static PyObject* __Pyx_patch_abc_module(PyObject *module);
static PyObject* __Pyx_patch_abc_module(PyObject *module) {
    module = __Pyx_Coroutine_patch_module(
        module, ""
"if _cython_generator_type is not None:\n"
"    try: Generator = _module.Generator\n"
"    except AttributeError: pass\n"
"    else: Generator.register(_cython_generator_type)\n"
"if _cython_coroutine_type is not None:\n"
"    try: Coroutine = _module.Coroutine\n"
"    except AttributeError: pass\n"
"    else: Coroutine.register(_cython_coroutine_type)\n"
    );
    return module;
}
#endif
static int __Pyx_patch_abc(void) {
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    static int abc_patched = 0;
    if (CYTHON_REGISTER_ABCS && !abc_patched) {
        PyObject *module;
        module = PyImport_ImportModule((PY_MAJOR_VERSION >= 3) ? "collections.abc" : "collections");
        if (!module) {
            PyErr_WriteUnraisable(NULL);
            if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning,
                    ((PY_MAJOR_VERSION >= 3) ?
                        "Cython module failed to register with collections.abc module" :
                        "Cython module failed to register with collections module"), 1) < 0)) {
                return -1;
            }
        } else {
            module = __Pyx_patch_abc_module(module);
            abc_patched = 1;
            if (unlikely(!module))
                return -1;
            Py_DECREF(module);
        }
        module = PyImport_ImportModule("backports_abc");
        if (module) {
            module = __Pyx_patch_abc_module(module);
            Py_XDECREF(module);
        }
        if (!module) {
            PyErr_Clear();
        }
    }
#else
    if ((0)) __Pyx_Coroutine_patch_module(NULL, NULL);
#endif
    return 0;
}

/* Generator */
static PyMethodDef __pyx_Generator_methods[] = {
    {"send", (PyCFunction) __Pyx_Coroutine_Send, METH_O,
     (char*) PyDoc_STR("send(arg) -> send 'arg' into generator,\nreturn next yielded value or raise StopIteration.")},
    {"throw", (PyCFunction) __Pyx_Coroutine_Throw, METH_VARARGS,
     (char*) PyDoc_STR("throw(typ[,val[,tb]]) -> raise exception in generator,\nreturn next yielded value or raise StopIteration.")},
    {"close", (PyCFunction) __Pyx_Coroutine_Close_Method, METH_NOARGS,
     (char*) PyDoc_STR("close() -> raise GeneratorExit inside generator.")},
    {0, 0, 0, 0}
};
static PyMemberDef __pyx_Generator_memberlist[] = {
    {(char *) "gi_running", T_BOOL, offsetof(__pyx_CoroutineObject, is_running), READONLY, NULL},
    {(char*) "gi_yieldfrom", T_OBJECT, offsetof(__pyx_CoroutineObject, yieldfrom), READONLY,
     (char*) PyDoc_STR("object being iterated by 'yield from', or None")},
    {(char*) "gi_code", T_OBJECT, offsetof(__pyx_CoroutineObject, gi_code), READONLY, NULL},
    {0, 0, 0, 0, 0}
};
static PyGetSetDef __pyx_Generator_getsets[] = {
    {(char *) "__name__", (getter)__Pyx_Coroutine_get_name, (setter)__Pyx_Coroutine_set_name,
     (char*) PyDoc_STR("name of the generator"), 0},
    {(char *) "__qualname__", (getter)__Pyx_Coroutine_get_qualname, (setter)__Pyx_Coroutine_set_qualname,
     (char*) PyDoc_STR("qualified name of the generator"), 0},
    {(char *) "gi_frame", (getter)__Pyx_Coroutine_get_frame, NULL,
     (char*) PyDoc_STR("Frame of the generator"), 0},
    {0, 0, 0, 0, 0}
};
static PyTypeObject __pyx_GeneratorType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    "generator",
    sizeof(__pyx_CoroutineObject),
    0,
    (destructor) __Pyx_Coroutine_dealloc,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_HAVE_FINALIZE,
    0,
    (traverseproc) __Pyx_Coroutine_traverse,
    0,
    0,
    offsetof(__pyx_CoroutineObject, gi_weakreflist),
    0,
    (iternextfunc) __Pyx_Generator_Next,
    __pyx_Generator_methods,
    __pyx_Generator_memberlist,
    __pyx_Generator_getsets,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if CYTHON_USE_TP_FINALIZE
    0,
#else
    __Pyx_Coroutine_del,
#endif
    0,
#if CYTHON_USE_TP_FINALIZE
    __Pyx_Coroutine_del,
#elif PY_VERSION_HEX >= 0x030400a1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
    0,
#endif
};
static int __pyx_Generator_init(void) {
    __pyx_GeneratorType_type.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
    __pyx_GeneratorType_type.tp_iter = PyObject_SelfIter;
    __pyx_GeneratorType = __Pyx_FetchCommonType(&__pyx_GeneratorType_type);
    if (unlikely(!__pyx_GeneratorType)) {
        return -1;
    }
    return 0;
}

/* CheckBinaryVersion */
static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* InitStrings */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type %.200s).  "
                "The ability to return an instance of a strict subclass of int "
                "is deprecated, and may be removed in a future version of Python.",
                Py_TYPE(result)->tp_name)) {
            Py_DECREF(result);
            return NULL;
        }
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type %.200s)",
                 type_name, type_name, Py_TYPE(result)->tp_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
